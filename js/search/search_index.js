var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AddLayers.html",[0,0.003,1,3.732]],["body/classes/AddLayers.html",[0,0.005,1,6.489,2,0.051,3,0.043,4,0.035,5,5.053,6,1.158,7,1.488,8,0.16,9,0.314,10,1.709,11,2.234,12,2.09,13,0.262,14,0.771,15,1.549,16,2.724,17,1.021,18,7.733,19,0.858,20,0.006,21,0.626,22,0.43,23,6.157,24,0.785,25,1.033,26,7.54,27,0.244,28,0.858,29,1.928,30,3.096,31,2.465,32,0.052,33,0.9,34,1.641,35,3.896,36,6.897,37,1.405,38,1.627,39,1.852,40,5.935,41,4.464,42,0.005,43,0.005]],["title/classes/AddMap.html",[0,0.003,44,3.99]],["body/classes/AddMap.html",[0,0.005,2,0.054,3,0.046,4,0.037,6,1.1,7,1.458,8,0.17,9,0.326,10,1.775,11,2.228,12,2.048,13,0.262,14,0.82,15,1.647,17,1.05,19,0.912,20,0.006,21,0.666,22,0.457,24,0.835,25,1.098,27,0.231,28,0.912,32,0.05,33,0.762,35,4.143,39,1.568,42,0.005,43,0.005,44,7.132,45,5.838,46,2.006,47,8.033,48,6.546,49,8.691,50,3.403,51,5.024]],["title/classes/ClearState.html",[0,0.003,52,3.353]],["body/classes/ClearState.html",[0,0.005,2,0.057,3,0.048,4,0.039,6,1.135,7,1.491,8,0.179,9,0.337,12,2.095,13,0.258,14,1.114,17,1.002,20,0.006,24,0.88,25,1.157,27,0.199,28,0.961,32,0.051,33,0.803,42,0.005,43,0.005,52,6.131,53,6.149,54,8.29,55,8.89,56,2.362,57,4.363,58,2.121,59,5.292]],["title/components/ControllersComponent.html",[60,1.024,61,1.697]],["body/components/ControllersComponent.html",[0,0.002,2,0.026,3,0.022,4,0.018,6,0.804,8,0.081,9,0.196,13,0.226,14,0.393,17,1.038,19,0.437,20,0.006,21,0.597,22,0.219,27,0.232,28,0.437,32,0.018,33,0.767,34,0.892,38,1.274,42,0.003,43,0.003,46,0.65,56,3.306,58,0.966,60,1.497,61,2.299,62,1.138,63,1.16,64,1.16,65,3.139,66,2.049,67,2.969,68,1.138,69,3.375,70,2.014,71,1.683,72,4.822,73,1.715,74,4.822,75,4.123,76,5.056,77,1.53,78,5.056,79,2.306,80,1.555,81,6.588,82,1.238,83,1.564,84,3.331,85,2.299,86,1.257,87,2.668,88,4.822,89,3.139,90,1.1,91,1.652,92,3.139,93,4.014,94,3.139,95,3.331,96,3.139,97,3.139,98,3.139,99,3.139,100,3.139,101,3.139,102,0.803,103,1.283,104,1.435,105,1.37,106,1.138,107,1.16,108,1.679,109,1.913,110,1.283,111,2.576,112,1.987,113,2.07,114,2.409,115,1.183,116,1.16,117,1.402,118,2.409,119,3.35,120,2.165,121,2.8,122,2.8,123,3.139,124,2.07,125,3.139,126,2.8,127,2.8,128,2.576,129,2.576,130,2.8,131,2.8,132,2.409,133,2.409,134,3.701,135,3.139,136,1.679,137,2.276,138,1.913,139,1.913,140,1.231,141,2.576,142,3.139,143,2.343,144,4.822,145,3.139,146,3.139,147,5.377,148,3.94,149,3.139,150,3.139,151,3.139,152,3.139,153,3.139,154,1.056,155,3.139,156,3.139,157,2.8,158,4.822,159,3.139,160,3.139,161,3.139,162,4.822,163,3.139,164,4.822,165,3.139,166,4.822,167,3.139,168,3.139,169,3.139,170,4.822,171,3.139,172,4.822,173,3.139,174,4.822,175,3.139,176,3.139,177,3.139,178,3.139,179,3.139,180,3.139,181,3.139,182,3.139,183,3.139,184,2.409,185,0.83,186,1.748,187,1.715,188,1.782,189,2.434,190,1.16,191,1.16,192,1.096,193,1.16,194,1.096,195,1.16,196,1.096,197,1.16,198,1.096,199,1.16,200,1.096,201,1.551,202,1.782,203,1.096,204,1.782,205,1.096,206,1.138,207,1.16,208,1.096,209,1.16,210,1.16,211,1.056,212,2.169,213,1.096,214,1.16,215,1.096,216,1.16,217,1.096,218,1.16,219,1.096,220,1.16,221,1.096,222,0.816,223,1.16,224,1.096,225,1.16,226,1.096,227,1.16,228,1.096,229,1.16,230,1.096,231,1.16,232,1.096,233,1.096,234,1.096,235,1.16,236,1.096,237,1.16,238,1.096,239,1.096,240,1.16,241,1.096,242,0.933,243,1.096,244,1.16,245,1.096,246,1.16,247,1.096,248,1.16]],["title/modules/ControllersModule.html",[249,1.729,250,3.525]],["body/modules/ControllersModule.html",[0,0.003,2,0.043,3,0.037,4,0.03,20,0.006,27,0.282,32,0.048,42,0.004,43,0.004,61,3.352,77,1.067,80,1.084,82,1.291,102,1.338,185,1.383,192,3.115,211,3.002,234,3.115,238,3.115,239,3.115,241,3.115,242,1.556,247,3.115,249,2.476,250,7.197,251,2.721,252,4.45,253,2.885,254,2.977,255,4.668,256,4.668,257,4.668,258,1.76,259,2.577,260,5.234,261,4.094,262,2.977,263,3.96,264,5.047,265,3.794,266,6.962,267,5.234,268,5.047,269,3.794,270,6.209,271,4.668,272,4.668,273,5.343,274,4.017,275,5.234,276,5.234,277,5.234,278,4.668,279,7.823,280,5.234,281,4.668,282,4.668,283,5.234,284,4.017]],["title/interfaces/ControllersStateModel.html",[285,0.374,286,3.525]],["body/interfaces/ControllersStateModel.html",[2,0.033,3,0.028,4,0.023,7,0.671,8,0.104,9,0.235,13,0.203,20,0.006,24,0.51,27,0.166,32,0.045,33,0.466,42,0.004,43,0.004,46,0.829,58,2.961,77,1.673,79,2.944,80,1.946,82,1.514,90,2.168,104,3.6,105,2.521,106,1.45,107,1.478,110,1.635,112,4.984,113,5.193,137,2.9,154,2.914,259,1.97,285,0.606,286,4.188,287,2.9,288,2.698,289,2.773,290,2.773,291,3.07,292,1.778,293,3.101,294,1.018,295,2.773,296,2.669,297,3.6,298,1.478,299,1.92,300,1.92,301,4.042,302,3.525,303,1.747,304,2.437,305,1.97,306,4.434,307,1.97,308,1.746,309,2.353,310,1.97,311,3.07,312,1.829,313,2.845,314,2.845,315,1.507,316,2.9,317,3.07,318,1.746,319,1.873,320,4.033,321,3.07,322,3.07,323,3.07,324,3.07,325,3.07,326,3.07,327,5.204,328,4.509,329,3.07,330,3.07,331,3.07,332,3.07,333,5.7,334,3.07,335,3.07,336,3.07,337,3.07,338,5.7,339,3.07,340,3.07,341,3.07,342,3.07,343,5.204,344,3.07,345,3.07]],["title/components/CursorComponent.html",[60,1.024,192,1.697]],["body/components/CursorComponent.html",[0,0.002,2,0.026,3,0.034,4,0.018,6,0.666,8,0.082,9,0.197,13,0.227,14,0.398,17,1.041,19,0.824,20,0.006,21,0.727,22,0.413,24,0.62,25,0.816,27,0.26,28,0.442,30,2.86,31,1.271,32,0.018,33,0.566,34,1.535,38,1.285,42,0.003,43,0.003,46,1.48,50,1.65,56,3.31,60,1.504,61,1.108,62,1.151,63,1.173,64,1.173,66,2.063,67,2.99,68,1.151,69,3.379,71,1.697,73,1.729,77,0.647,80,0.658,82,0.524,83,1.578,84,3.351,85,2.312,86,1.271,87,2.68,90,1.63,91,2.025,93,2.828,95,4.282,102,0.812,103,1.298,115,1.196,116,1.173,117,1.417,119,2.172,136,1.698,140,3.254,143,1.129,148,3.614,185,0.839,186,1.763,187,1.729,188,1.797,189,2.448,190,1.173,191,1.173,192,2.312,193,1.173,194,1.108,195,1.173,196,1.108,197,1.173,198,1.108,199,1.173,200,1.108,201,1.562,202,1.797,203,1.108,204,1.797,205,1.108,206,1.151,207,1.173,208,1.108,209,1.173,210,1.173,211,1.068,212,2.184,213,1.108,214,1.173,215,1.108,216,1.173,217,1.108,218,1.173,219,1.108,220,1.173,221,1.108,222,0.825,223,1.173,224,1.108,225,1.173,226,1.108,227,1.173,228,1.108,229,1.173,230,1.108,231,1.173,232,1.108,233,1.108,234,1.108,235,1.173,236,1.108,237,1.173,238,1.108,239,1.108,240,1.173,241,1.108,242,0.944,243,1.108,244,1.173,245,1.108,246,1.173,247,1.108,248,1.173,302,1.65,312,2.702,346,3.175,347,2.681,348,4.864,349,4.864,350,5.438,351,6.627,352,2.84,353,6.627,354,3.918,355,4.864,356,4.864,357,4.864,358,3.175,359,3.175,360,4.864,361,3.175,362,2.767,363,4.864,364,3.289,365,3.175,366,3.613,367,3.175,368,3.175,369,3.175,370,4.038,371,3.175,372,3.175,373,1.385,374,3.175,375,3.175,376,3.991,377,2.605,378,5.086,379,2.605,380,1.867,381,3.545,382,2.605,383,3.526,384,1.806,385,1.605,386,2.189,387,1.75,388,2.189,389,2.189,390,1.806,391,4.864,392,2.99,393,2.99,394,2.831,395,3.175,396,5.91,397,4.864,398,4.864,399,2.831,400,2.093,401,2.831,402,1.867,403,3.175,404,2.009,405,3.175,406,3.991,407,3.175,408,3.175,409,2.831,410,2.831,411,3.175,412,3.991,413,3.175,414,3.175,415,2.831,416,1.524,417,3.175,418,2.605,419,3.175,420,3.175,421,2.009,422,3.175,423,3.175,424,3.175,425,3.175,426,3.175,427,2.528,428,3.175,429,3.175,430,3.175,431,2.831,432,3.175,433,3.175,434,3.175,435,3.175,436,3.991,437,3.991,438,3.175,439,3.175,440,4.864,441,3.175,442,3.175,443,2.831,444,3.175,445,3.175,446,3.175,447,3.175]],["title/interfaces/CursorMode.html",[285,0.374,370,2.963]],["body/interfaces/CursorMode.html",[2,0.055,3,0.046,4,0.038,8,0.171,9,0.327,13,0.249,20,0.006,22,0.677,32,0.038,42,0.005,43,0.005,285,0.62,294,1.789,347,5.006,370,4.914,381,4.858,427,4.721,431,8.1,448,6.588,449,6.588,450,1.209]],["title/components/DescriptionComponent.html",[60,1.024,194,1.697]],["body/components/DescriptionComponent.html",[0,0.003,2,0.041,3,0.035,4,0.028,6,0.915,8,0.128,13,0.135,14,0.951,17,0.917,20,0.006,21,0.68,27,0.142,32,0.028,34,1.237,38,1.766,42,0.004,43,0.004,56,3.433,60,1.791,61,1.719,62,1.785,63,1.82,64,1.82,66,2.648,68,1.785,69,3.502,71,2.333,73,2.377,77,1.004,80,1.021,82,0.813,83,2.169,85,2.839,90,1.124,91,1.688,102,1.26,143,1.752,185,1.302,186,2.423,187,2.377,188,2.47,189,3.006,190,1.82,191,1.82,192,1.719,193,1.82,194,2.839,195,1.82,196,1.719,197,1.82,198,1.719,199,1.82,200,1.719,201,2.005,202,2.47,203,1.719,204,2.47,205,1.719,206,1.785,207,1.82,208,1.719,209,1.82,210,1.82,211,1.657,212,2.803,213,1.719,214,1.82,215,1.719,216,1.82,217,1.719,218,1.82,219,1.719,220,1.82,221,1.719,222,1.281,223,1.82,224,1.719,225,1.82,226,1.719,227,1.82,228,1.719,229,1.82,230,1.719,231,1.82,232,1.719,233,1.719,234,1.719,235,1.82,236,1.719,237,1.82,238,1.719,239,1.719,240,1.82,241,1.719,242,1.464,243,1.719,244,1.82,245,1.719,246,1.82,247,1.719,248,1.82,450,0.853,451,5.899,452,4.927,453,4.306,454,6.685,455,6.685,456,4.352,457,6.685,458,4.927]],["title/components/EditComponent.html",[60,1.024,196,1.697]],["body/components/EditComponent.html",[0,0.003,2,0.042,3,0.036,4,0.029,6,0.934,8,0.132,14,0.966,17,0.824,20,0.006,21,0.694,27,0.146,32,0.029,34,1.263,38,1.803,42,0.004,43,0.004,56,3.44,60,1.81,61,1.773,62,1.841,63,1.877,64,1.877,66,2.689,68,1.841,69,3.509,71,2.381,73,2.427,77,1.036,80,1.052,82,0.838,83,2.214,85,2.875,90,1.159,91,1.74,102,1.299,143,1.806,185,1.342,186,2.473,187,2.427,188,2.521,189,3.044,190,1.877,191,1.877,192,1.773,193,1.877,194,1.773,195,1.877,196,2.875,197,1.877,198,1.773,199,1.877,200,1.773,201,2.036,202,2.521,203,1.773,204,2.521,205,1.773,206,1.841,207,1.877,208,1.773,209,1.877,210,1.877,211,1.708,212,2.847,213,1.773,214,1.877,215,1.773,216,1.877,217,1.773,218,1.877,219,1.773,220,1.877,221,1.773,222,1.32,223,1.877,224,1.773,225,1.877,226,1.773,227,1.877,228,1.773,229,1.877,230,1.773,231,1.877,232,1.773,233,1.773,234,1.773,235,1.877,236,1.773,237,1.877,238,1.773,239,1.773,240,1.877,241,1.773,242,1.51,243,1.773,244,1.877,245,1.773,246,1.877,247,1.773,248,1.877,459,5.08,460,6.761,461,6.824,462,6.824,463,5.08,464,5.08,465,5.237]],["title/modules/EditModule.html",[249,1.729,466,3.525]],["body/modules/EditModule.html",[0,0.004,2,0.056,3,0.047,4,0.039,20,0.006,27,0.264,32,0.052,42,0.005,43,0.005,82,1.352,102,1.728,185,1.786,196,3.472,249,2.913,251,3.514,252,5.014,253,3.726,254,3.845,258,2.274,259,3.329,261,4.818,262,3.845,263,4.66,466,6.998,467,6.029,468,6.029,469,6.029,470,6.76,471,6.76]],["title/components/FeatureinfoComponent.html",[60,1.024,198,1.697]],["body/components/FeatureinfoComponent.html",[0,0.002,2,0.03,3,0.037,4,0.02,6,0.726,8,0.092,9,0.215,13,0.223,14,0.665,16,1.04,17,1.035,19,0.496,20,0.006,21,0.645,22,0.249,27,0.261,28,0.496,29,1.115,30,2.123,31,1.425,32,0.02,33,0.415,34,1.551,35,2.253,38,1.401,42,0.003,43,0.003,46,1.69,50,1.851,56,3.346,58,1.632,60,1.581,61,1.242,62,1.29,63,1.315,64,1.315,66,2.212,67,3.205,68,1.29,69,3.416,71,1.851,73,1.886,77,0.726,80,0.738,82,0.588,83,1.721,84,3.552,85,2.451,86,1.425,87,2.8,90,1.21,91,1.817,93,3.961,95,3.552,102,0.91,103,1.455,115,1.341,116,1.315,119,2.83,124,3.497,140,2.486,143,1.266,147,2.169,148,2.83,185,0.941,186,1.922,187,1.886,188,1.96,189,2.595,190,1.315,191,1.315,192,1.242,193,1.315,194,1.242,195,1.315,196,1.242,197,1.315,198,2.451,199,1.315,200,1.242,201,1.985,202,1.96,203,1.242,204,1.96,205,1.242,206,1.29,207,1.315,208,1.242,209,1.315,210,1.315,211,1.197,212,2.342,213,1.242,214,1.315,215,1.242,216,1.315,217,1.242,218,1.315,219,1.242,220,1.315,221,1.242,222,0.925,223,1.315,224,1.242,225,1.315,226,1.242,227,1.315,228,1.242,229,1.315,230,1.242,231,1.315,232,1.242,233,1.242,234,1.242,235,1.315,236,1.242,237,1.315,238,1.242,239,1.242,240,1.315,241,1.242,242,1.058,243,1.242,244,1.315,245,1.242,246,1.315,247,1.242,248,1.315,298,1.343,354,2.757,364,2.315,366,1.8,373,1.554,376,4.353,377,2.922,383,3.845,384,2.025,385,1.8,389,3.658,390,2.025,400,2.347,401,3.175,402,3.119,406,2.922,472,3.56,473,5.304,474,5.304,475,5.092,476,6.433,477,5.39,478,5.914,479,5.304,480,3.56,481,3.56,482,3.56,483,3.56,484,3.56,485,3.56,486,3.56,487,1.962,488,3.56,489,1.709,490,2.732,491,1.753,492,2.922,493,1.8,494,3.56,495,3.56,496,1.425,497,3.175,498,2.732,499,3.175,500,3.175,501,2.455,502,3.56,503,3.56,504,4.07,505,2.581,506,2.581,507,3.175,508,3.56,509,2.922,510,3.56,511,3.175,512,2.253,513,2.922,514,3.175,515,2.732,516,5.304]],["title/interfaces/FeatureinfoDictionary.html",[285,0.374,491,2.394]],["body/interfaces/FeatureinfoDictionary.html",[2,0.036,3,0.03,4,0.024,7,0.719,8,0.111,9,0.247,13,0.249,16,2.059,20,0.006,22,0.678,24,0.547,27,0.221,29,1.342,30,2.43,31,1.716,32,0.044,33,0.499,34,1.497,42,0.004,43,0.004,46,1.258,57,2.713,58,2.903,82,0.708,90,2.1,140,2.381,285,0.542,294,1.48,295,2.914,297,2.775,298,1.202,308,3.53,309,2.522,312,1.96,315,1.615,318,1.871,319,2.008,320,3.883,328,4.367,364,3.971,373,1.871,450,1.268,476,5.409,477,5.409,489,2.058,491,3.471,493,2.168,496,2.43,517,3.519,518,7.215,519,5.865,520,5.865,521,7.215,522,7.215,523,7.215,524,7.215,525,6.639,526,3.824,527,3.564,528,0.694,529,2.059,530,1.773,531,4.145,532,6.286,533,4.982,534,5.784,535,3.291,536,3.519,537,5.414,538,3.108,539,2.827,540,3.519,541,3.519,542,3.519,543,2.168,544,3.108,545,3.824,546,3.519,547,3.824,548,3.824,549,3.824,550,3.824,551,3.824,552,3.824,553,3.824,554,3.824,555,3.824,556,3.824,557,3.824]],["title/modules/FeatureinfoModule.html",[249,1.729,558,3.525]],["body/modules/FeatureinfoModule.html",[0,0.003,2,0.041,3,0.034,4,0.028,20,0.006,27,0.285,32,0.046,42,0.004,43,0.004,82,1.098,102,1.252,185,1.294,198,3.317,200,3.055,203,3.055,205,3.181,206,2.412,208,3.055,249,2.367,251,2.545,252,4.302,253,2.699,254,4.302,258,1.647,259,2.411,261,3.915,262,2.785,263,3.786,264,4.826,265,3.549,268,4.826,269,3.549,270,5.936,271,4.366,272,4.366,273,5.108,274,3.757,558,7.115,559,4.366,560,4.366,561,4.366,562,4.366,563,4.366,564,6.038,565,6.347,566,4.896,567,5.936,568,6.656,569,4.366,570,5.462,571,4.018,572,5.936,573,4.366,574,6.656,575,4.896,576,4.896,577,5.936,578,4.366,579,6.656,580,4.896,581,6.656,582,4.896,583,5.462,584,4.018,585,4.366,586,7.563,587,4.366,588,4.366,589,4.366,590,4.366,591,4.018,592,4.366,593,4.896,594,4.366,595,4.896,596,4.896,597,4.366]],["title/components/FeatureinfoResultsComponent.html",[60,1.024,200,1.697]],["body/components/FeatureinfoResultsComponent.html",[0,0.001,2,0.028,3,0.014,4,0.011,6,0.461,8,0.052,9,0.137,10,1.354,13,0.228,14,0.422,16,1.486,17,1.039,19,0.907,20,0.006,21,0.722,22,0.455,24,0.429,25,0.337,27,0.234,28,0.28,29,0.629,30,0.804,31,0.804,32,0.011,33,0.66,34,1.525,37,0.768,38,0.89,42,0.003,43,0.002,46,1.471,50,1.044,56,3.15,58,1.036,60,1.193,61,0.701,62,0.728,63,0.742,64,0.742,66,1.517,67,2.198,68,0.728,69,3.197,71,1.175,73,1.197,77,0.41,80,0.416,82,0.331,83,1.092,84,2.572,85,1.775,86,0.804,87,2.179,90,1.827,91,2.432,93,3.47,95,2.572,102,0.514,103,0.821,115,0.757,116,0.742,119,1.941,124,2.22,136,3.279,140,2.553,143,0.714,147,2.648,148,1.941,185,0.531,186,1.22,187,1.197,188,1.244,189,1.879,190,0.742,191,0.742,192,0.701,193,0.742,194,0.701,195,0.742,196,0.701,197,0.742,198,0.701,199,0.742,200,1.775,201,1.991,202,1.244,203,0.701,204,1.244,205,1.175,206,2.053,207,0.742,208,0.701,209,0.742,210,0.742,211,0.676,212,1.606,213,0.701,214,0.742,215,0.701,216,0.742,217,0.701,218,0.742,219,0.701,220,0.742,221,0.701,222,0.522,223,0.742,224,0.701,225,0.742,226,0.701,227,0.742,228,0.701,229,0.742,230,0.701,231,0.742,232,0.701,233,0.701,234,0.701,235,0.742,236,0.701,237,0.742,238,0.701,239,0.701,240,0.742,241,0.701,242,0.597,243,0.701,244,0.742,245,0.701,246,0.742,247,0.701,248,0.742,258,1.132,294,0.998,296,1.018,297,0.918,298,0.867,312,1.987,318,0.877,320,1.437,347,2.396,350,4.174,354,3.916,362,2.472,364,4.065,366,2.572,373,0.877,381,1.075,383,1.456,384,1.143,385,1.016,387,1.107,388,1.385,390,2.472,392,2.864,393,2.864,400,1.324,402,3.829,412,2.763,415,1.792,418,1.648,436,1.648,456,2.721,476,3.903,487,1.107,489,0.964,490,1.542,491,2.14,492,1.648,498,1.542,499,3.003,500,3.003,501,1.385,506,3.151,507,1.792,509,2.763,511,1.792,512,4.12,514,1.792,525,2.763,530,0.847,533,1.648,539,2.22,542,2.763,543,2.572,544,5.148,565,4.72,587,7.733,591,1.648,592,1.792,597,1.792,598,7.115,599,1.792,600,3.003,601,3.003,602,6.129,603,6.129,604,6.333,605,4.536,606,3.367,607,3.367,608,5.086,609,3.367,610,3.367,611,5.086,612,3.367,613,5.467,614,5.467,615,3.003,616,2.009,617,3.367,618,2.009,619,2.763,620,3.003,621,3.367,622,3.003,623,3.367,624,2.009,625,4.346,626,2.009,627,3.367,628,3.367,629,3.367,630,5.086,631,2.009,632,3.367,633,3.367,634,3.367,635,2.009,636,3.367,637,2.893,638,2.009,639,2.009,640,2.009,641,3.367,642,3.367,643,2.009,644,3.367,645,2.009,646,2.051,647,2.131,648,1.792,649,2.009,650,1.792,651,1.792,652,1.792,653,2.009,654,1.792,655,1.224,656,3.367,657,2.009,658,2.009,659,1.648,660,2.009,661,2.009,662,2.763,663,4.346,664,1.792,665,1.792,666,1.792,667,2.009,668,6.511,669,3.367,670,2.009,671,2.009,672,3.367,673,2.584,674,1.271,675,2.009,676,2.441,677,2.009,678,2.009,679,4.952,680,2.009,681,1.648,682,1.648,683,2.584,684,2.009,685,3.003,686,2.009,687,3.367,688,2.009,689,3.367,690,1.792,691,2.009,692,1.792,693,1.792,694,2.009,695,1.792,696,1.792,697,1.792,698,2.009,699,2.009,700,2.009,701,1.792,702,3.336,703,2.009,704,2.763,705,2.009,706,2.009,707,2.009,708,2.009,709,3.367,710,2.009,711,2.009,712,2.009,713,2.009,714,2.009,715,1.648,716,2.009,717,2.009,718,1.792,719,2.009,720,2.009,721,2.584,722,2.763,723,2.009,724,2.009,725,5.086,726,2.009,727,2.009,728,1.648,729,1.792,730,2.009,731,2.009,732,2.009,733,2.009,734,2.009,735,2.009,736,3.367,737,1.792,738,1.792,739,1.456,740,3.367,741,2.009,742,2.009,743,2.009,744,1.648,745,3.003,746,3.367,747,3.367,748,3.367,749,3.367,750,3.367,751,3.367]],["title/components/FeatureinfoSelectComponent.html",[60,1.024,203,1.697]],["body/components/FeatureinfoSelectComponent.html",[0,0.003,2,0.034,3,0.029,4,0.023,6,0.802,8,0.106,9,0.238,13,0.217,14,0.511,16,2.19,17,0.998,19,0.816,20,0.006,21,0.762,22,0.409,27,0.251,28,0.568,29,1.277,32,0.023,33,0.475,34,1.529,38,1.548,42,0.004,43,0.004,56,3.386,57,3.708,58,1.255,60,1.671,61,1.424,62,1.478,63,1.507,64,1.507,66,2.393,68,1.478,69,3.455,71,2.045,73,2.083,77,0.832,80,0.845,82,0.673,83,1.901,85,2.615,86,1.633,87,2.938,90,1.337,91,2.007,93,3.198,102,1.043,103,1.667,115,1.537,116,1.507,117,1.821,124,2.69,136,3.667,138,2.485,139,2.485,143,1.45,185,1.078,186,2.123,187,2.083,188,2.165,189,2.769,190,1.507,191,1.507,192,1.424,193,1.507,194,1.424,195,1.507,196,1.424,197,1.507,198,1.424,199,1.507,200,1.424,201,2.343,202,2.165,203,2.615,204,2.165,205,1.424,206,1.478,207,1.507,208,1.424,209,1.507,210,1.507,211,1.372,212,2.533,213,1.424,214,1.507,215,1.424,216,1.507,217,1.424,218,1.507,219,1.424,220,1.507,221,1.424,222,1.06,223,1.507,224,1.424,225,1.507,226,1.424,227,1.507,228,1.424,229,1.507,230,1.424,231,1.507,232,1.424,233,1.424,234,1.424,235,1.507,236,1.424,237,1.507,238,1.424,239,1.424,240,1.507,241,1.424,242,1.212,243,1.424,244,1.507,245,1.424,246,1.507,247,1.424,248,1.507,298,1.169,362,2.321,456,4.245,477,5.751,489,1.958,490,3.131,491,3.376,492,3.348,496,2.345,497,3.638,498,3.131,589,7.591,598,6.985,655,2.485,752,3.638,753,5.226,754,5.226,755,5.226,756,5.226,757,4.079,758,4.079,759,4.079,760,5.226,761,6.683,762,4.079,763,5.859,764,5.226,765,4.079,766,5.226,767,4.808]],["title/injectables/FeatureinfoService.html",[565,3.525,768,2.394]],["body/injectables/FeatureinfoService.html",[0,0.003,2,0.035,3,0.042,4,0.024,8,0.111,9,0.246,13,0.193,14,0.759,16,2.237,17,0.925,19,0.981,20,0.006,21,0.716,22,0.492,24,0.545,25,0.717,27,0.267,28,0.596,29,1.339,32,0.024,33,0.819,34,1.553,42,0.004,43,0.004,46,1.674,50,2.223,83,1.966,86,1.712,87,2.984,90,1.969,93,3.763,102,1.093,103,1.748,115,1.611,116,1.58,119,1.909,140,1.677,148,3.142,201,1.601,293,3.375,294,1.479,320,1.825,354,3.149,364,1.866,373,1.866,385,2.162,402,4.753,450,1.16,487,2.357,531,2.515,565,4.393,569,3.813,674,2.706,676,3.1,679,6.084,690,3.813,692,7.207,693,8.11,695,3.813,696,3.813,697,3.813,768,3.466,769,4.276,770,7.655,771,7.037,772,7.037,773,7.655,774,6.059,775,4.276,776,8.392,777,8.63,778,4.276,779,5.404,780,8.63,781,6.059,782,6.059,783,4.276,784,4.972,785,6.059,786,6.059,787,4.276,788,6.059,789,4.276,790,4.276,791,4.276,792,2.949,793,2.819,794,4.276,795,4.276,796,4.276,797,4.276,798,4.276,799,4.276,800,4.276,801,4.276,802,4.276,803,4.276,804,4.276,805,4.276,806,4.276,807,6.059,808,3.509,809,4.276,810,4.276,811,4.276,812,4.276,813,4.276,814,4.276,815,4.276,816,4.276,817,3.813,818,3.813,819,4.276,820,4.276,821,4.276,822,4.276,823,4.276]],["title/components/FeatureinfoTableDialogComponent.html",[60,1.024,205,1.697]],["body/components/FeatureinfoTableDialogComponent.html",[0,0.002,2,0.028,3,0.035,4,0.029,6,0.693,8,0.087,9,0.276,10,1.699,13,0.219,14,0.634,17,0.994,19,0.466,20,0.006,21,0.692,22,0.233,24,0.426,25,0.561,27,0.176,32,0.019,33,0.93,34,1.129,35,2.115,38,1.336,42,0.003,43,0.003,56,3.326,60,1.539,61,1.166,62,1.211,63,1.235,64,1.235,66,2.129,68,1.211,69,3.396,71,1.765,73,1.798,77,0.681,80,0.692,82,0.551,83,1.641,85,2.374,90,1.154,91,1.733,102,0.854,138,3.082,143,1.188,148,2.258,185,0.883,186,1.833,187,1.798,188,1.869,189,2.514,190,1.235,191,1.235,192,1.166,193,1.235,194,1.166,195,1.235,196,1.166,197,1.235,198,1.166,199,1.235,200,1.166,201,2.225,202,1.869,203,1.166,204,1.869,205,2.374,206,3.484,207,1.235,208,1.166,209,1.235,210,1.235,211,1.124,212,2.254,213,1.166,214,1.235,215,1.166,216,1.235,217,1.166,218,1.235,219,1.166,220,1.235,221,1.166,222,0.869,223,1.235,224,1.166,225,1.235,226,1.166,227,1.235,228,1.166,229,1.235,230,1.166,231,1.235,232,1.166,233,1.166,234,1.166,235,1.235,236,1.166,237,1.235,238,1.166,239,1.166,240,1.235,241,1.166,242,0.993,243,1.166,244,1.235,245,1.166,246,1.235,247,1.166,248,1.235,296,1.011,312,1.528,315,1.906,381,1.788,437,2.743,450,0.778,544,3.667,591,6.91,598,6.91,655,2.036,681,2.743,682,2.743,683,2.565,701,2.981,728,4.151,729,2.981,739,5.79,768,2.491,824,3.342,825,5.058,826,5.058,827,7.335,828,6.069,829,5.998,830,6.804,831,6.804,832,2.981,833,6.858,834,5.058,835,3.342,836,3.342,837,3.342,838,4.511,839,3.342,840,6.804,841,3.342,842,3.342,843,6.804,844,5.058,845,2.981,846,5.058,847,3.342,848,3.342,849,2.981,850,4.511,851,3.342,852,3.342,853,3.342,854,2.423,855,2.981,856,2.981,857,4.151,858,1.965,859,2.981,860,5.442,861,3.342,862,2.629,863,2.743,864,3.342,865,2.981,866,3.342,867,3.342,868,3.342,869,3.342,870,3.342,871,3.342,872,3.342,873,3.342,874,6.804,875,6.102,876,3.342,877,3.342,878,3.342,879,3.342,880,3.342,881,3.342,882,5.058,883,3.342,884,3.342,885,3.342,886,3.342,887,3.342,888,3.342,889,3.342,890,3.342,891,5.058,892,5.058,893,4.511]],["title/components/FeaturenfoTableComponent.html",[60,1.024,208,1.697]],["body/components/FeaturenfoTableComponent.html",[0,0.003,2,0.033,3,0.028,4,0.023,6,0.793,8,0.104,9,0.334,13,0.204,14,0.503,17,0.953,19,0.559,20,0.006,21,0.691,22,0.28,24,0.738,25,1.323,27,0.227,28,0.559,32,0.023,33,0.791,34,1.257,38,1.529,42,0.004,43,0.004,56,3.381,60,1.66,61,1.4,62,1.454,63,1.482,64,1.482,66,2.37,68,1.454,69,3.45,71,2.02,73,2.058,77,0.818,80,0.831,82,0.662,83,1.878,85,2.595,86,1.606,87,2.921,90,0.915,91,1.374,102,1.025,115,1.511,116,1.482,117,1.791,138,3.527,143,1.426,185,1.06,186,2.098,187,2.058,188,2.138,189,2.747,190,1.482,191,1.482,192,1.4,193,1.482,194,1.4,195,1.482,196,1.4,197,1.482,198,1.4,199,1.482,200,1.4,201,1.794,202,2.138,203,1.4,204,2.138,205,1.4,206,2.695,207,1.482,208,2.595,209,3.129,210,1.482,211,1.349,212,2.509,213,1.4,214,1.482,215,1.4,216,1.482,217,1.4,218,1.482,219,1.4,220,1.482,221,1.4,222,1.042,223,1.482,224,1.4,225,1.482,226,1.4,227,1.482,228,1.4,229,1.482,230,1.4,231,1.482,232,1.4,233,1.4,234,1.4,235,1.482,236,1.4,237,1.482,238,1.4,239,1.4,240,1.482,241,1.4,242,1.192,243,1.4,244,1.482,245,1.4,246,1.482,247,1.4,248,1.482,296,1.213,312,1.833,315,2.181,364,3.585,373,1.75,385,2.028,392,2.028,393,2.028,399,3.577,450,0.866,456,3.977,487,2.211,498,3.078,512,2.538,594,7.327,728,4.75,827,6.632,828,6.632,850,5.162,854,4.196,855,3.577,856,3.577,857,4.75,858,2.359,859,3.577,860,6.632,862,2.085,863,3.291,893,5.162,894,8.215,895,4.011,896,5.788,897,5.788,898,5.788,899,4.011,900,4.011,901,4.011,902,4.011,903,4.011,904,4.011,905,4.011,906,4.011]],["title/interfaces/FsDocument.html",[285,0.374,907,3.732]],["body/interfaces/FsDocument.html",[0,0.003,2,0.043,3,0.036,4,0.029,6,0.706,8,0.134,9,0.28,13,0.227,20,0.006,22,0.644,27,0.249,28,0.718,32,0.029,33,0.904,42,0.004,43,0.004,46,1.068,56,1.766,60,1.451,66,2.405,69,1.799,71,1.799,73,1.833,77,1.69,85,1.799,87,2.761,90,1.177,91,2.959,93,2.942,102,1.318,105,2.25,106,1.868,107,1.905,115,1.942,116,1.905,117,2.302,119,2.302,132,3.957,133,3.957,143,1.833,187,3.161,211,1.734,284,3.957,285,0.597,292,2.389,315,3.123,528,0.589,907,5.29,908,4.231,909,3.738,910,5.656,911,6.802,912,6.802,913,6.802,914,6.802,915,4.231,916,3.957,917,4.231,918,4.231,919,4.231,920,3.738,921,3.738,922,4.231,923,5.656,924,5.656,925,4.231,926,4.231,927,4.231,928,5.656,929,5.656,930,5.656,931,5.656,932,5.656,933,5.656,934,5.656,935,5.656,936,4.231,937,4.231,938,4.231,939,4.231,940,4.231]],["title/interfaces/FsDocumentElement.html",[285,0.374,916,3.732]],["body/interfaces/FsDocumentElement.html",[0,0.003,2,0.044,3,0.037,4,0.03,6,0.728,8,0.138,9,0.286,13,0.192,20,0.006,22,0.586,27,0.251,28,0.74,32,0.03,33,0.918,42,0.004,43,0.004,46,1.101,56,1.82,60,1.481,66,2.454,69,1.855,71,1.855,73,1.89,77,1.71,85,1.855,87,2.803,90,1.213,91,2.989,93,3.002,102,1.359,105,2.319,106,1.926,107,1.963,115,2.002,116,1.963,117,2.373,119,2.373,132,4.079,133,4.079,143,1.89,187,2.501,211,1.787,284,4.079,285,0.606,292,2.425,315,3.161,528,0.607,907,4.079,908,4.361,909,3.853,910,4.361,911,4.361,912,4.361,913,4.361,914,4.361,915,4.361,916,5.397,917,5.772,918,6.885,919,6.885,920,3.853,921,3.853,922,4.361,923,5.772,924,5.772,925,4.361,926,4.361,927,4.361,928,5.772,929,5.772,930,5.772,931,5.772,932,5.772,933,5.772,934,5.772,935,5.772,936,4.361,937,4.361,938,4.361,939,4.361,940,4.361]],["title/components/FullscreenButtonComponent.html",[60,1.024,211,1.635]],["body/components/FullscreenButtonComponent.html",[0,0.002,2,0.032,3,0.027,4,0.022,6,0.774,8,0.101,9,0.229,13,0.155,14,0.486,17,0.94,19,0.541,20,0.006,21,0.678,22,0.271,27,0.224,28,0.541,32,0.022,33,0.776,34,1.046,38,1.493,42,0.004,43,0.004,46,0.804,56,3.372,60,1.638,61,1.354,62,1.406,63,1.434,64,1.434,66,2.326,68,1.406,69,3.441,71,1.972,73,2.009,77,1.877,80,0.804,82,0.64,83,1.833,85,2.555,86,1.553,87,2.888,90,1.671,91,2.872,93,3.125,102,0.992,105,1.694,106,1.406,107,1.434,115,1.462,116,1.434,117,1.733,119,1.733,132,2.978,133,2.978,143,2.37,185,1.025,186,2.048,187,2.603,188,2.088,189,2.705,190,1.434,191,1.434,192,1.354,193,1.434,194,1.354,195,1.434,196,1.354,197,1.434,198,1.354,199,1.434,200,1.354,201,1.761,202,2.088,203,1.354,204,2.088,205,1.354,206,1.406,207,1.434,208,1.354,209,1.434,210,1.434,211,2.462,212,2.462,213,1.354,214,1.434,215,1.354,216,1.434,217,1.354,218,1.434,219,1.354,220,1.434,221,1.354,222,1.009,223,1.434,224,1.354,225,1.434,226,1.354,227,1.434,228,1.354,229,1.434,230,1.354,231,1.434,232,1.354,233,1.354,234,1.354,235,1.434,236,1.354,237,1.434,238,1.354,239,1.354,240,1.434,241,1.354,242,1.153,243,1.354,244,1.434,245,1.354,246,1.434,247,1.354,248,1.434,284,6.233,285,0.435,292,1.739,528,0.646,907,2.978,908,6.665,909,2.813,910,3.185,911,3.185,912,3.185,913,3.185,914,3.185,915,3.185,916,2.978,917,3.185,918,3.185,919,3.185,920,4.097,921,4.097,922,6.008,923,4.638,924,4.638,925,3.185,926,3.185,927,3.185,928,4.638,929,4.638,930,4.638,931,4.638,932,4.638,933,4.638,934,4.638,935,4.638,936,6.665,937,3.185,938,3.185,939,3.185,940,3.185,941,5.651,942,3.881,943,3.881,944,3.881,945,5.651]],["title/classes/HasFeatureinfo.html",[0,0.003,527,2.459]],["body/classes/HasFeatureinfo.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.602,528,0.966,529,1.277,530,1.1,637,2.487,946,2.487,947,6.155,948,4.372,949,4.189,950,2.571,951,2.57,952,2.231,953,3.62,954,2.487,955,3.199,956,3.62,957,3.62,958,3.62,959,2.047,960,2.748,961,3.62,962,2.319,963,1.997,964,3.393,965,2.954,966,3.393,967,3.393,968,3.393,969,2.516,970,3.393]],["title/classes/HasLayertree.html",[0,0.003,971,2.86]],["body/classes/HasLayertree.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.816,39,2.103,42,0.004,43,0.004,222,2.343,296,1.638,298,0.924,450,0.691,528,1.05,529,1.583,530,1.362,951,2.974,952,2.581,960,3.18,962,2.683,963,2.31,969,2.911,971,4.679,972,3.735,973,7.122,974,5.416,975,5.768,976,4.051,977,3.927,978,5.163,979,3.735,980,3.927,981,4.339,982,3.3]],["title/classes/HasMeasure.html",[0,0.003,983,2.766]],["body/classes/HasMeasure.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.929,38,2.382,39,2.103,42,0.004,43,0.004,298,0.924,352,2.041,450,0.691,528,1.03,529,1.583,530,1.362,951,2.974,952,2.581,960,3.18,962,2.683,963,2.31,969,2.911,983,4.526,984,3.735,985,7.122,986,5.416,987,5.768,988,3.255,989,3.925,990,3.927,991,3.507,992,3.18,993,2.986]],["title/classes/HasPrint.html",[0,0.003,994,3.206]],["body/classes/HasPrint.html",[0,0.006,2,0.05,3,0.042,4,0.034,6,1.201,7,1.519,8,0.155,9,0.308,10,1.677,11,2.252,12,2.135,13,0.263,14,0.749,15,1.504,17,1.008,19,0.833,20,0.006,21,0.608,22,0.418,24,0.763,25,1.003,27,0.172,28,0.833,32,0.054,33,0.971,37,1.732,39,1.998,42,0.005,43,0.005,450,0.763,528,1.058,529,1.747,530,1.504,951,3.17,952,2.751,962,2.86,963,2.463,994,5.5,995,4.589,996,7.591,997,5.979,998,6.845,999,4.561,1000,4.123]],["title/components/LayerComponent.html",[60,1.024,213,1.697]],["body/components/LayerComponent.html",[0,0.002,2,0.027,3,0.023,4,0.018,6,0.674,8,0.084,9,0.2,10,1.319,13,0.24,14,0.617,16,1.952,17,1.072,19,0.686,20,0.006,21,0.68,22,0.344,24,0.852,25,1.121,27,0.249,28,0.449,29,1.009,32,0.018,33,0.375,34,1.574,38,1.3,42,0.003,43,0.003,56,3.322,60,1.515,61,1.125,62,1.168,63,1.191,64,1.191,66,2.083,67,3.018,68,1.168,69,3.384,71,1.717,73,1.75,77,0.657,80,0.668,82,0.532,83,1.597,84,3.378,85,2.331,87,2.805,90,1.524,91,2.288,93,2.851,95,3.378,102,0.824,103,1.318,115,1.215,116,1.191,119,1.44,140,3.335,143,1.146,185,0.852,186,1.784,187,1.75,188,1.818,189,2.468,190,1.191,191,1.191,192,1.125,193,1.191,194,1.125,195,1.191,196,1.125,197,1.191,198,1.125,199,1.191,200,1.125,201,1.577,202,1.818,203,1.125,204,1.818,205,1.125,206,1.168,207,1.191,208,1.125,209,1.191,210,1.191,211,1.084,212,2.205,213,2.331,214,1.191,215,1.717,216,1.191,217,1.125,218,1.191,219,1.125,220,1.191,221,1.125,222,0.838,223,1.191,224,1.125,225,1.191,226,1.125,227,1.191,228,1.125,229,1.191,230,1.125,231,1.191,232,1.125,233,1.125,234,1.125,235,1.191,236,1.125,237,1.191,238,1.125,239,1.125,240,1.191,241,1.125,242,0.958,243,1.125,244,1.191,245,1.125,246,1.191,247,1.125,248,1.191,294,0.867,297,2.728,298,1.139,302,1.676,354,1.676,362,2.8,381,2.633,400,3.245,416,2.362,453,1.548,456,3.573,501,2.223,529,1.438,544,5.498,614,6.763,655,1.964,722,2.646,737,2.875,738,2.875,739,2.337,767,4.039,829,2.646,959,2.304,976,1.834,1001,3.224,1002,4.922,1003,4.922,1004,5.958,1005,5.958,1006,5.958,1007,6.68,1008,4.389,1009,6.68,1010,5.324,1011,3.224,1012,4.922,1013,3.936,1014,3.224,1015,3.224,1016,3.224,1017,4.389,1018,6.526,1019,3.224,1020,3.224,1021,3.224,1022,3.224,1023,3.224,1024,4.389,1025,3.224,1026,3.224,1027,3.224,1028,2.646,1029,2.337,1030,2.337,1031,2.875,1032,1.376,1033,2.646,1034,4.922,1035,2.875,1036,2.646,1037,2.875,1038,2.223,1039,2.646,1040,3.224,1041,4.389,1042,2.875,1043,2.875,1044,4.389,1045,2.337,1046,3.224,1047,3.245,1048,3.245,1049,1.588,1050,3.224,1051,3.224,1052,3.224,1053,2.875,1054,3.224,1055,4.922,1056,4.922,1057,3.224,1058,2.646,1059,2.875,1060,3.224,1061,3.224,1062,3.224,1063,4.389,1064,4.922,1065,4.389,1066,4.389,1067,4.389,1068,4.389,1069,4.389]],["title/interfaces/LayerDetailItem.html",[285,0.374,1018,3.732]],["body/interfaces/LayerDetailItem.html",[2,0.055,3,0.047,4,0.038,8,0.172,9,0.329,13,0.268,20,0.006,32,0.038,42,0.005,43,0.005,185,2.312,285,0.624,381,4.872,450,1.248,453,4.199,528,1,529,2.661,1018,6.221,1032,2.836,1045,6.342,1047,6.006,1048,6.006,1070,6.644,1071,5.926]],["title/components/LayerDetailsComponent.html",[60,1.024,215,1.697]],["body/components/LayerDetailsComponent.html",[0,0.003,2,0.037,3,0.031,4,0.025,6,0.846,8,0.114,9,0.251,10,1.579,13,0.212,14,0.774,16,2.265,17,0.987,19,0.613,20,0.006,21,0.727,22,0.307,27,0.223,29,1.377,32,0.025,34,1.727,38,1.633,42,0.004,43,0.004,56,3.406,60,1.719,61,1.534,62,1.593,63,1.624,64,1.624,66,2.493,68,1.593,69,3.474,71,2.156,73,2.197,77,0.896,80,0.911,82,0.726,83,2.005,85,2.705,90,1.003,91,1.506,102,1.124,143,1.563,185,1.162,186,2.24,187,2.197,188,2.283,189,2.864,190,1.624,191,1.624,192,1.534,193,1.624,194,1.534,195,1.624,196,1.534,197,1.624,198,1.534,199,1.624,200,1.534,201,1.888,202,2.283,203,1.534,204,2.283,205,1.534,206,1.593,207,1.624,208,1.534,209,1.624,210,1.624,211,1.479,212,2.64,213,1.534,214,1.624,215,2.705,216,1.624,217,1.534,218,1.624,219,1.534,220,1.624,221,1.534,222,1.143,223,1.624,224,1.534,225,1.624,226,1.534,227,1.624,228,1.534,229,1.624,230,1.534,231,1.624,232,1.534,233,1.534,234,1.534,235,1.624,236,1.534,237,1.624,238,1.534,239,1.534,240,1.624,241,1.534,242,1.307,243,1.534,244,1.624,245,1.534,246,1.624,247,1.534,248,1.624,400,2.899,451,6.14,655,2.679,739,6.14,768,3.043,829,5.071,832,3.921,833,6.913,838,3.921,845,3.921,849,3.921,959,3.629,1018,5.948,1031,3.921,1032,3.05,1033,3.608,1036,6.95,1072,4.397,1073,6.18,1074,6.18,1075,6.18,1076,4.397,1077,4.397,1078,4.397,1079,3.921,1080,4.397,1081,4.397,1082,6.18]],["title/components/LayerGroupComponent.html",[60,1.024,217,1.697]],["body/components/LayerGroupComponent.html",[0,0.002,2,0.022,3,0.019,4,0.015,6,0.583,7,0.714,8,0.069,9,0.173,13,0.239,14,0.335,17,1.041,19,0.841,20,0.006,21,0.714,22,0.422,24,0.676,25,0.714,27,0.22,28,0.373,32,0.015,34,1.644,37,0.971,38,1.124,42,0.003,43,0.003,56,3.248,58,1.63,60,1.387,61,0.933,62,0.969,63,0.988,64,0.988,66,1.849,67,2.679,68,0.969,69,3.318,71,1.485,73,1.513,77,0.545,80,0.554,82,0.441,83,1.38,84,3.053,85,2.107,86,1.071,87,2.495,90,1.601,91,2.404,93,3.141,95,3.053,102,0.684,103,1.093,115,1.008,116,0.988,117,1.194,119,1.194,124,1.763,140,2.995,143,0.951,185,0.707,186,1.542,187,1.513,188,1.572,189,2.231,190,0.988,191,0.988,192,0.933,193,0.988,194,0.933,195,0.988,196,0.933,197,0.988,198,0.933,199,0.988,200,0.933,201,1.4,202,1.572,203,0.933,204,1.572,205,0.933,206,0.969,207,0.988,208,0.933,209,0.988,210,0.988,211,0.899,212,1.957,213,0.933,214,0.988,215,0.933,216,0.988,217,2.107,218,0.988,219,0.933,220,0.988,221,0.933,222,0.695,223,0.988,224,0.933,225,0.988,226,0.933,227,0.988,228,0.933,229,0.988,230,0.933,231,0.988,232,0.933,233,0.933,234,0.933,235,0.988,236,0.933,237,0.988,238,0.933,239,0.933,240,0.988,241,0.933,242,0.795,243,0.933,244,0.988,245,0.933,246,0.988,247,0.933,248,0.988,294,1.064,297,3.208,298,1.197,302,2.211,312,1.945,318,1.167,320,2.577,354,3.648,362,2.42,381,3.23,416,3.778,451,6.319,456,3.525,501,1.844,528,0.802,529,1.764,539,2.805,679,4.778,702,5.057,959,2.48,976,1.521,1004,5.385,1005,5.385,1006,5.385,1008,3.794,1013,5.189,1017,3.794,1028,2.195,1029,1.939,1030,1.939,1032,1.141,1033,2.195,1035,2.385,1038,1.844,1039,2.195,1041,3.794,1042,2.385,1043,2.385,1044,5.385,1047,3.981,1048,3.981,1053,2.385,1059,3.794,1065,5.385,1066,3.794,1067,3.794,1068,3.794,1069,3.794,1083,7.774,1084,2.674,1085,4.688,1086,4.254,1087,4.254,1088,6.037,1089,3.491,1090,6.037,1091,4.254,1092,4.725,1093,4.254,1094,2.674,1095,2.674,1096,4.254,1097,5.862,1098,2.674,1099,6.037,1100,4.955,1101,2.151,1102,2.502,1103,2.674,1104,2.674,1105,6.039,1106,2.674,1107,4.254,1108,4.254,1109,2.674,1110,2.42,1111,4.254,1112,4.254,1113,2.674,1114,2.674,1115,2.674,1116,2.674,1117,2.674,1118,4.254,1119,2.674,1120,2.674,1121,2.674,1122,3.794,1123,2.674,1124,2.674,1125,3.794,1126,2.674,1127,2.674,1128,3.794,1129,2.674,1130,3.794,1131,2.674,1132,2.674,1133,4.254,1134,2.674,1135,4.254,1136,4.254,1137,2.674,1138,3.794,1139,4.254,1140,4.254,1141,2.674,1142,2.674,1143,4.254,1144,2.674,1145,2.674,1146,2.674,1147,4.254,1148,4.254,1149,4.254,1150,4.254,1151,4.254,1152,4.254,1153,4.254,1154,4.254,1155,4.254,1156,5.385]],["title/interfaces/LayerGroupDetailItem.html",[285,0.374,1105,3.99]],["body/interfaces/LayerGroupDetailItem.html",[2,0.054,3,0.046,4,0.037,8,0.17,9,0.327,13,0.267,20,0.006,32,0.037,42,0.005,43,0.005,285,0.619,381,4.851,450,1.245,528,0.994,529,2.65,1032,2.8,1047,5.979,1048,5.979,1071,5.851,1105,6.601,1122,7.759,1125,7.759,1128,7.759,1130,7.759,1157,6.56]],["title/components/LayertreeComponent.html",[60,1.024,219,1.697]],["body/components/LayertreeComponent.html",[0,0.002,2,0.027,3,0.023,4,0.018,6,0.675,8,0.084,9,0.2,13,0.208,14,0.618,16,1.44,17,1.045,19,0.833,20,0.006,21,0.733,22,0.417,24,0.762,25,1.003,27,0.261,28,0.45,29,1.012,32,0.018,33,0.376,34,1.238,38,1.302,42,0.003,43,0.003,56,3.315,60,1.516,61,1.127,62,1.171,63,1.194,64,1.194,66,2.086,67,3.022,68,1.171,69,3.385,71,1.72,73,1.753,75,2.366,77,0.659,80,0.669,82,0.533,83,1.599,84,3.382,85,2.334,86,1.293,87,2.699,90,1.857,91,2.291,95,3.382,102,0.826,103,1.321,108,2.637,109,1.969,115,1.217,116,1.194,120,2.228,136,1.728,138,1.969,139,1.969,140,1.267,141,2.651,143,1.149,148,2.986,185,0.854,186,1.786,187,1.753,188,1.821,189,2.471,190,1.194,191,1.194,192,1.127,193,1.194,194,1.127,195,1.194,196,1.127,197,1.194,198,1.127,199,1.194,200,1.127,201,1.579,202,1.821,203,1.127,204,1.821,205,1.127,206,1.171,207,1.194,208,1.127,209,1.194,210,1.194,211,1.087,212,2.208,213,1.127,214,1.194,215,1.127,216,1.194,217,1.127,218,1.194,219,2.334,220,1.194,221,1.127,222,1.738,223,1.194,224,1.127,225,1.194,226,1.127,227,1.194,228,1.127,229,1.194,230,1.127,231,1.194,232,1.127,233,1.127,234,1.127,235,1.194,236,1.127,237,1.194,238,1.127,239,1.127,240,1.194,241,1.127,242,0.96,243,1.127,244,1.194,245,1.127,246,1.194,247,1.127,248,1.194,249,1.149,294,0.869,312,2.253,354,3.945,384,1.838,385,1.634,387,1.781,388,2.228,392,2.493,393,2.493,659,2.651,673,2.48,959,1.513,1010,6.769,1013,5.703,1029,2.342,1030,2.342,1063,4.396,1158,3.231,1159,4.929,1160,4.929,1161,6.687,1162,6.687,1163,6.687,1164,6.687,1165,8.339,1166,6.687,1167,4.929,1168,4.929,1169,6.478,1170,5.723,1171,4.929,1172,3.231,1173,3.231,1174,4.929,1175,3.231,1176,4.929,1177,3.231,1178,4.929,1179,3.231,1180,4.929,1181,3.231,1182,4.929,1183,4.929,1184,4.929,1185,4.929,1186,3.231,1187,7.201,1188,3.231,1189,3.231,1190,3.231,1191,3.231,1192,3.231,1193,2.881,1194,3.231,1195,2.427,1196,1.679,1197,3.231,1198,3.231,1199,3.231,1200,3.231,1201,3.231,1202,4.929,1203,3.231,1204,3.231,1205,2.48,1206,3.231,1207,3.231,1208,4.929,1209,4.929,1210,3.231,1211,3.231,1212,3.231,1213,3.231]],["title/interfaces/LayertreeDictionary.html",[285,0.374,976,2.766]],["body/interfaces/LayertreeDictionary.html",[2,0.042,3,0.036,4,0.029,7,0.855,8,0.132,9,0.278,13,0.252,20,0.006,22,0.682,24,0.65,27,0.147,32,0.044,33,0.593,34,1.724,42,0.004,43,0.004,58,2.867,90,2.022,222,1.325,285,0.594,295,3.283,297,3.126,298,1.317,302,2.649,315,1.92,318,2.224,319,2.386,320,3.673,328,4.13,450,1.273,453,2.446,528,0.882,529,2.255,530,1.942,971,4.54,976,4.391,981,4.703,982,3.105,1045,3.695,1085,4.883,1089,7.062,1100,4.182,1101,2.577,1214,4.182,1215,7.675,1216,7.675,1217,7.675,1218,7.675,1219,7.675,1220,4.545,1221,6.1,1222,4.182,1223,4.545,1224,4.545,1225,4.545,1226,4.545,1227,4.545,1228,4.545]],["title/components/LayertreeItemComponent.html",[60,1.024,221,1.697]],["body/components/LayertreeItemComponent.html",[0,0.002,2,0.033,3,0.027,4,0.022,6,0.779,8,0.102,9,0.231,13,0.223,14,0.491,17,1.041,19,0.546,20,0.006,21,0.682,22,0.274,24,0.726,25,0.955,27,0.235,28,0.546,32,0.022,34,1.053,38,1.504,42,0.004,43,0.004,56,3.375,60,1.645,61,1.368,62,1.421,63,1.448,64,1.448,66,2.339,68,1.421,69,3.444,71,1.987,73,2.024,77,0.799,80,0.812,82,0.647,83,1.847,85,2.567,86,1.569,87,2.898,90,1.53,91,1.343,93,3.14,102,1.002,103,1.602,115,1.477,116,1.448,117,1.75,119,1.75,143,1.394,185,1.036,186,2.063,187,2.024,188,2.103,189,2.718,190,1.448,191,1.448,192,1.368,193,1.448,194,1.368,195,1.448,196,1.368,197,1.448,198,1.368,199,1.448,200,1.368,201,1.771,202,2.103,203,1.368,204,2.103,205,1.368,206,1.421,207,1.448,208,1.368,209,1.448,210,1.448,211,1.318,212,2.477,213,1.368,214,1.448,215,1.368,216,1.448,217,1.368,218,1.448,219,1.368,220,1.448,221,2.567,222,2.186,223,1.448,224,1.368,225,1.448,226,1.368,227,1.448,228,1.368,229,1.448,230,1.368,231,1.448,232,1.368,233,1.368,234,1.368,235,1.448,236,1.368,237,1.448,238,1.368,239,1.368,240,1.448,241,1.368,242,1.165,243,1.368,244,1.448,245,1.368,246,1.448,247,1.368,248,1.448,294,1.003,298,1.39,312,2.602,443,5.077,450,0.5,456,4.179,501,2.703,959,3.816,976,2.23,1013,5.79,1028,3.217,1029,2.842,1030,2.842,1039,3.217,1092,5.978,1229,8.782,1230,7.833,1231,3.92,1232,5.693,1233,5.693,1234,7.356,1235,7.356,1236,6.561,1237,5.693,1238,3.92,1239,3.92,1240,3.92,1241,5.693,1242,3.92,1243,3.92,1244,3.92,1245,3.92,1246,3.92,1247,3.92,1248,3.92,1249,3.92,1250,3.92,1251,3.92,1252,3.92,1253,5.693]],["title/classes/LayertreeItemNode.html",[0,0.003,1013,3.206]],["body/classes/LayertreeItemNode.html",[0,0.005,2,0.054,3,0.046,4,0.037,8,0.17,9,0.327,13,0.248,16,2.65,17,1.096,20,0.006,21,0.923,22,0.662,27,0.189,29,2.054,32,0.037,34,1.678,42,0.005,43,0.005,450,1.11,528,0.994,959,4.357,1013,6.136,1097,6.96,1102,5.334,1254,9.306,1255,6.56,1256,6.56,1257,6.56,1258,6.56,1259,6.56]],["title/modules/LayertreeModule.html",[249,1.729,1260,3.525]],["body/modules/LayertreeModule.html",[0,0.003,2,0.039,3,0.033,4,0.027,20,0.006,27,0.286,32,0.046,42,0.004,43,0.004,82,1.075,102,1.213,185,1.254,194,3.027,213,3.027,215,3.157,217,3.027,219,3.3,221,3.027,224,3.027,245,3.027,249,2.317,251,2.467,252,4.233,253,2.616,254,2.7,258,1.596,259,2.337,261,3.832,262,2.7,263,3.707,264,4.724,265,3.441,268,4.724,269,3.441,273,5.001,274,3.642,564,5.982,567,5.812,570,5.348,571,3.895,572,5.812,573,4.233,583,5.348,584,3.895,585,4.233,1036,3.895,1037,4.233,1083,4.233,1193,4.233,1230,4.233,1260,7.165,1261,4.233,1262,4.233,1263,4.746,1264,4.233,1265,4.746,1266,6.517,1267,4.746,1268,6.517,1269,4.746,1270,6.517,1271,4.746,1272,6.517,1273,4.746,1274,6.517,1275,4.746,1276,6.517,1277,8.396,1278,4.746,1279,4.746,1280,4.746,1281,4.746,1282,4.746,1283,4.746,1284,4.746,1285,4.746]],["title/injectables/LayertreeService.html",[768,2.394,1169,3.99]],["body/injectables/LayertreeService.html",[0,0.003,2,0.042,3,0.035,4,0.029,8,0.131,13,0.21,14,0.962,16,2.77,17,0.993,19,1.07,20,0.006,21,0.873,22,0.536,27,0.237,29,1.58,32,0.029,33,0.894,34,1.421,42,0.004,43,0.004,83,2.204,90,1.875,91,2.327,102,1.29,312,2.307,354,4.592,739,6.813,767,4.142,768,3.783,792,3.48,793,3.328,959,4.016,1013,6.297,1029,3.659,1030,3.659,1085,3.745,1097,3.873,1138,6.06,1156,4.501,1169,5.576,1195,4.669,1196,2.623,1286,5.047,1287,6.06,1288,6.851,1289,6.851,1290,5.047,1291,6.06,1292,5.047,1293,4.501,1294,5.047,1295,5.047,1296,5.047,1297,5.047,1298,7.329,1299,5.047,1300,5.047,1301,5.047,1302,6.794,1303,7.681,1304,5.047,1305,5.047,1306,5.047,1307,5.047,1308,5.047,1309,6.06,1310,4.501,1311,4.501]],["title/components/LegendComponent.html",[60,1.024,224,1.697]],["body/components/LegendComponent.html",[0,0.003,2,0.042,3,0.035,4,0.029,6,0.929,8,0.131,14,0.962,17,0.82,20,0.006,21,0.691,27,0.145,32,0.029,34,1.256,38,1.793,42,0.004,43,0.004,56,3.439,60,1.805,61,1.758,62,1.826,63,1.862,64,1.862,66,2.678,68,1.826,69,3.507,71,2.368,73,2.413,77,1.027,80,1.044,82,0.831,83,2.202,85,2.866,90,1.15,91,1.726,102,1.288,143,1.792,185,2.265,186,2.46,187,2.413,188,2.508,189,3.034,190,1.862,191,1.862,192,1.758,193,1.862,194,1.758,195,1.862,196,1.758,197,1.862,198,1.758,199,1.862,200,1.758,201,2.028,202,2.508,203,1.758,204,2.508,205,1.758,206,1.826,207,1.862,208,1.758,209,1.862,210,1.862,211,1.695,212,2.836,213,1.758,214,1.862,215,1.758,216,1.862,217,1.758,218,1.862,219,1.758,220,1.862,221,1.758,222,1.31,223,1.862,224,2.866,225,1.862,226,1.758,227,1.862,228,1.758,229,1.862,230,1.758,231,1.862,232,1.758,233,1.758,234,1.758,235,1.862,236,1.758,237,1.862,238,1.758,239,1.758,240,1.862,241,1.758,242,1.498,243,1.758,244,1.862,245,1.758,246,1.862,247,1.758,248,1.862,451,5.564,465,5.209,1312,5.039,1313,6.787,1314,6.787,1315,5.039,1316,5.039]],["title/components/MangolComponent.html",[60,1.024,226,1.697]],["body/components/MangolComponent.html",[0,0.005,2,0.03,3,0.025,4,0.02,6,0.729,8,0.093,9,0.216,13,0.224,14,0.449,17,1.037,19,0.742,20,0.006,21,0.717,22,0.444,24,0.457,25,0.601,27,0.252,28,0.499,32,0.02,34,0.986,38,1.407,42,0.003,43,0.003,46,1.635,50,1.861,56,3.361,59,2.748,60,1.585,61,1.25,62,1.298,63,1.323,64,1.323,66,2.219,68,1.298,69,3.417,71,1.859,73,1.894,75,3.381,77,0.73,78,5.406,80,0.742,82,0.591,83,1.728,85,2.458,86,1.433,87,2.906,90,1.216,91,1.825,93,3.87,102,0.916,103,1.464,108,3.402,109,2.182,115,1.349,116,1.323,117,1.599,118,4.088,119,3.145,121,3.194,122,3.194,136,3.768,138,2.182,139,2.182,140,2.089,143,1.273,147,4.587,148,3.362,185,0.946,186,1.93,187,1.894,188,1.968,189,2.602,190,1.323,191,1.323,192,1.25,193,1.323,194,1.25,195,1.323,196,1.25,197,1.323,198,1.25,199,1.323,200,1.25,201,1.681,202,1.968,203,1.25,204,1.968,205,1.25,206,1.298,207,1.323,208,1.25,209,1.323,210,1.323,211,1.204,212,2.35,213,1.25,214,1.323,215,1.25,216,1.323,217,1.25,218,1.323,219,1.25,220,1.323,221,1.25,222,0.931,223,1.323,224,1.25,225,1.323,226,2.458,227,1.323,228,1.25,229,1.323,230,1.25,231,1.323,232,1.25,233,1.25,234,1.25,235,1.323,236,1.25,237,1.323,238,1.25,239,1.25,240,1.323,241,1.25,242,1.583,243,1.25,244,1.323,245,1.25,246,1.323,247,1.25,248,1.323,362,3.03,385,1.811,389,2.469,390,3.03,392,2.694,393,2.694,402,2.106,456,3.768,487,1.974,512,3.371,528,0.727,543,1.811,1317,3.581,1318,5.327,1319,5.327,1320,7.044,1321,6.282,1322,5.327,1323,5.672,1324,5.327,1325,3.581,1326,3.581,1327,3.581,1328,5.327,1329,3.581,1330,3.581,1331,3.581,1332,3.581,1333,2.596,1334,3.194,1335,1.915,1336,2.748,1337,3.581,1338,3.194,1339,3.194,1340,4.751,1341,3.581,1342,3.581,1343,3.581,1344,3.581,1345,3.194,1346,3.581,1347,3.581,1348,3.194,1349,3.581,1350,3.581,1351,3.581,1352,3.581,1353,3.581,1354,3.581,1355,3.581,1356,3.581,1357,3.581,1358,3.581,1359,2.596,1360,3.194,1361,3.581]],["title/interfaces/MangolConfig.html",[108,2.601,285,0.374]],["body/interfaces/MangolConfig.html",[2,0.058,3,0.049,4,0.04,8,0.182,9,0.34,13,0.229,20,0.006,22,0.648,27,0.241,32,0.04,42,0.005,43,0.005,46,1.922,75,4.022,108,4.483,242,2.758,285,0.645,1362,7.02,1363,6.118,1364,7.615,1365,6.261,1366,7.02]],["title/interfaces/MangolConfigFeatureInfoItem.html",[285,0.374,1367,2.963]],["body/interfaces/MangolConfigFeatureInfoItem.html",[2,0.045,3,0.038,4,0.031,8,0.14,9,0.288,13,0.251,20,0.006,22,0.674,27,0.204,32,0.052,38,1.424,42,0.004,43,0.004,185,1.424,201,1.424,222,1.4,285,0.716,292,2.697,294,1.754,298,0.919,303,1.629,366,4.265,380,3.169,421,3.41,450,1.202,528,1.087,529,1.574,530,1.355,531,4.961,988,3.244,999,2.801,1032,2.3,1049,2.653,1367,4.836,1368,1.88,1369,3.553,1370,5.696,1371,5.338,1372,5.561,1373,5.338,1374,5.561,1375,5.561,1376,3.169,1377,3.553,1378,4.491,1379,3.41,1380,3.41,1381,4.324,1382,3.553,1383,4.174,1384,3.553,1385,3.553,1386,3.553,1387,3.553,1388,4.324,1389,3.283]],["title/interfaces/MangolConfigLayer.html",[285,0.374,1390,3.077]],["body/interfaces/MangolConfigLayer.html",[2,0.044,3,0.059,4,0.031,8,0.139,9,0.287,13,0.251,16,2.064,20,0.006,21,0.946,22,0.663,27,0.242,29,1.675,32,0.052,34,1.721,42,0.004,43,0.004,285,0.715,292,1.646,294,1.687,404,3.386,416,4.198,450,1.256,453,4.198,493,4.422,528,1.062,647,3.386,858,3.147,1032,3.015,1049,4.307,1085,2.95,1102,4.155,1195,3.479,1196,2.781,1368,1.867,1390,5.005,1391,3.528,1392,4.785,1393,5.323,1394,3.386,1395,3.528,1396,3.528,1397,3.779,1398,3.894,1399,4.471,1400,3.528,1401,3.528,1402,3.26,1403,3.386,1404,3.386,1405,3.26]],["title/interfaces/MangolConfigLayer2.html",[285,0.374,1406,3.525]],["body/interfaces/MangolConfigLayer2.html",[2,0.05,3,0.042,4,0.034,8,0.156,9,0.309,13,0.241,16,2.226,20,0.006,21,0.923,22,0.647,27,0.271,29,1.883,32,0.05,34,1.113,42,0.005,43,0.005,46,1.246,70,2.511,75,3.657,107,2.222,222,1.563,285,0.698,292,2.573,450,1.25,453,4.221,493,4.446,646,5.096,1195,3.752,1196,3.126,1363,3.965,1368,2.099,1392,5.002,1397,3.217,1398,4.2,1406,5.524,1407,4.616,1408,6.063,1409,5.848,1410,4.616,1411,4.36,1412,3.806,1413,4.147,1414,3.657,1415,4.36,1416,3.806,1417,3.965]],["title/interfaces/MangolConfigLayerColumn.html",[285,0.374,1393,3.077]],["body/interfaces/MangolConfigLayerColumn.html",[2,0.048,3,0.061,4,0.033,8,0.149,9,0.301,13,0.203,16,2.165,20,0.006,21,0.961,22,0.518,27,0.249,29,1.803,32,0.053,34,1.657,42,0.005,43,0.005,285,0.726,292,1.771,294,1.681,404,3.644,416,3.557,450,1.266,453,3.557,493,3.747,528,0.989,647,3.644,858,3.386,1032,3.163,1049,3.649,1085,3.174,1102,4.358,1195,3.649,1196,2.993,1368,2.009,1390,4.69,1391,3.796,1392,3.275,1393,5.186,1394,3.644,1395,3.796,1396,5.705,1397,3.964,1398,4.085,1399,4.69,1400,3.796,1401,3.796,1402,3.508,1403,3.644,1404,3.644,1405,3.508]],["title/interfaces/MangolConfigLayerGroup.html",[285,0.374,1397,2.601]],["body/interfaces/MangolConfigLayerGroup.html",[2,0.047,3,0.06,4,0.032,8,0.148,9,0.298,13,0.223,16,2.147,20,0.006,21,0.958,22,0.513,27,0.248,29,1.78,32,0.053,34,1.65,42,0.005,43,0.005,285,0.725,292,1.749,294,1.677,404,3.597,416,3.527,450,1.264,453,4.28,493,3.716,528,0.984,647,3.597,858,3.343,1032,3.137,1049,3.619,1085,3.133,1102,5.244,1195,3.619,1196,2.954,1368,1.983,1390,4.651,1391,3.748,1392,3.233,1393,4.651,1394,3.597,1395,3.748,1396,3.748,1397,4.357,1398,4.746,1399,4.651,1400,3.748,1401,3.748,1402,3.463,1403,3.597,1404,3.597,1405,3.463]],["title/interfaces/MangolConfigLayerGroup-1.html",[285,0.313,862,2.113,1397,2.175]],["body/interfaces/MangolConfigLayerGroup-1.html",[2,0.052,3,0.044,4,0.036,8,0.164,9,0.319,13,0.173,16,2.297,20,0.006,21,0.937,27,0.274,29,1.979,32,0.051,34,1.17,42,0.005,43,0.005,46,1.309,70,2.639,75,3.773,107,2.335,222,1.643,285,0.708,292,2.632,450,1.227,453,3.034,493,3.196,646,5.213,1195,3.871,1196,3.285,1363,4.167,1368,2.205,1392,3.595,1397,4.205,1398,4.333,1406,4.582,1407,4.85,1408,5.699,1409,6.566,1410,4.85,1411,4.582,1412,4,1413,4.358,1414,3.773,1415,4.582,1416,4,1417,4.167]],["title/interfaces/MangolConfigLayertree.html",[285,0.374,1398,2.68]],["body/interfaces/MangolConfigLayertree.html",[2,0.048,3,0.061,4,0.033,8,0.149,9,0.3,13,0.202,16,2.16,20,0.006,21,0.91,22,0.603,27,0.249,29,1.796,32,0.053,34,1.746,42,0.005,43,0.005,285,0.726,292,1.765,294,1.68,404,3.63,416,3.548,450,1.248,453,3.548,493,3.738,528,0.987,647,3.63,858,3.374,1032,3.155,1049,3.641,1085,4.763,1102,4.348,1195,3.641,1196,2.982,1368,2.002,1390,5.468,1391,3.782,1392,3.263,1393,4.678,1394,3.63,1395,3.782,1396,3.782,1397,4.622,1398,4.509,1399,4.678,1400,3.782,1401,3.782,1402,3.495,1403,3.63,1404,3.63,1405,3.495]],["title/interfaces/MangolConfigLayertreeItem.html",[285,0.374,1381,2.963]],["body/interfaces/MangolConfigLayertreeItem.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.301,13,0.224,20,0.006,22,0.604,27,0.213,32,0.053,38,1.519,42,0.005,43,0.005,185,1.519,201,1.519,222,1.494,285,0.726,292,2.753,294,1.757,298,0.98,303,1.738,366,3.743,380,3.38,421,3.637,450,1.141,528,1.079,529,1.679,530,1.446,531,3.38,988,3.383,999,2.987,1032,3.69,1049,2.83,1367,4.51,1368,2.006,1369,3.789,1370,5.797,1371,3.637,1372,3.789,1373,3.637,1374,3.789,1375,3.789,1376,3.38,1377,3.789,1378,5.472,1379,3.637,1380,3.637,1381,4.988,1382,5.701,1383,4.353,1384,3.789,1385,3.789,1386,3.789,1387,3.789,1388,4.51,1389,3.502]],["title/interfaces/MangolConfigMap.html",[285,0.374,1363,3.206]],["body/interfaces/MangolConfigMap.html",[2,0.048,3,0.041,4,0.033,8,0.15,9,0.302,13,0.251,16,2.533,20,0.006,21,0.757,22,0.66,27,0.269,29,1.813,32,0.05,34,1.604,42,0.005,43,0.005,46,1.2,70,3.621,75,3.57,107,2.139,222,2.253,285,0.69,292,2.288,450,1.228,453,2.779,493,2.928,646,5.76,1195,4.27,1196,3.01,1363,4.903,1368,2.02,1392,3.294,1397,3.097,1398,4.779,1406,4.198,1407,4.443,1408,5.392,1409,5.708,1410,4.443,1411,4.198,1412,3.664,1413,3.993,1414,4.162,1415,4.198,1416,5.487,1417,5.717]],["title/interfaces/MangolConfigMapControllers.html",[285,0.374,1414,2.334]],["body/interfaces/MangolConfigMapControllers.html",[2,0.045,3,0.038,4,0.031,8,0.14,9,0.289,13,0.246,20,0.006,22,0.674,32,0.055,42,0.004,43,0.004,46,1.118,77,1.721,79,2.738,80,1.749,82,1.393,104,3.858,105,3.684,154,2.839,285,0.746,288,2.891,289,4.051,290,4.051,292,2.77,294,0.951,296,1.632,298,1.44,299,2.591,300,2.591,301,3.911,303,1.632,305,2.658,307,2.658,308,2.356,310,2.658,313,2.658,314,2.658,450,1.188,528,0.964,1368,1.884,1414,3.41,1418,2.975,1419,4.653,1420,4.515,1421,4.911,1422,2.625,1423,2.625,1424,2.625,1425,2.625]],["title/interfaces/MangolConfigMapMousePosition.html",[285,0.374,1415,3.525]],["body/interfaces/MangolConfigMapMousePosition.html",[2,0.054,3,0.045,4,0.037,16,2.332,20,0.006,21,0.812,27,0.276,29,2.028,32,0.052,34,1.199,42,0.005,43,0.005,46,1.342,70,2.705,75,3.831,107,2.393,222,1.684,285,0.713,292,2.456,450,1.205,453,3.109,493,3.276,646,5.271,1195,3.93,1196,3.367,1363,4.271,1368,2.261,1392,3.685,1397,3.465,1398,4.4,1406,4.696,1407,4.972,1408,5.786,1409,6.125,1410,4.972,1411,4.696,1412,4.1,1413,4.467,1414,3.831,1415,5.786,1416,4.1,1417,4.271]],["title/interfaces/MangolConfigMeasureItem.html",[285,0.374,1383,2.86]],["body/interfaces/MangolConfigMeasureItem.html",[2,0.042,3,0.036,4,0.029,8,0.132,9,0.278,13,0.252,20,0.006,22,0.676,27,0.197,32,0.052,38,1.347,42,0.004,43,0.004,185,1.347,201,1.347,222,1.325,285,0.708,292,2.648,294,1.797,298,1.407,303,2.495,366,3.459,380,2.997,421,5.221,450,1.154,528,1.012,529,1.489,530,1.282,531,2.997,988,3.771,999,2.649,1032,2.175,1049,2.51,1367,4.167,1368,1.778,1369,3.36,1370,5.606,1371,3.225,1372,3.36,1373,3.225,1374,3.36,1375,3.36,1376,2.997,1377,3.36,1378,4.328,1379,3.225,1380,3.225,1381,4.167,1382,3.36,1383,4.54,1384,5.44,1385,5.44,1386,5.44,1387,5.44,1388,4.167,1389,3.105]],["title/interfaces/MangolConfigPrintItem.html",[285,0.374,1388,2.963]],["body/interfaces/MangolConfigPrintItem.html",[2,0.05,3,0.042,4,0.034,13,0.164,20,0.006,27,0.219,32,0.054,38,1.58,42,0.005,43,0.005,185,1.58,201,1.58,222,1.554,285,0.732,292,2.786,294,1.763,298,1.02,303,1.808,366,3.839,380,3.517,421,3.784,450,1.155,528,1.058,529,1.747,530,1.504,531,3.517,988,3.47,999,3.108,1032,2.552,1049,2.944,1367,4.625,1368,2.087,1369,3.942,1370,5.857,1371,3.784,1372,3.942,1373,3.784,1374,3.942,1375,3.942,1376,3.517,1377,3.942,1378,4.804,1379,3.784,1380,3.784,1381,4.625,1382,3.942,1383,4.465,1384,3.942,1385,3.942,1386,3.942,1387,3.942,1388,5.082,1389,3.643]],["title/interfaces/MangolConfigSidebar.html",[285,0.374,1364,3.99]],["body/interfaces/MangolConfigSidebar.html",[2,0.053,3,0.045,4,0.037,8,0.167,9,0.323,13,0.253,20,0.006,22,0.684,27,0.185,32,0.037,42,0.005,43,0.005,75,3.09,285,0.612,352,3.395,450,1.1,528,1.077,530,2.266,543,4.556,1101,4.556,1364,6.525,1368,2.247,1389,5.49,1426,6.438,1427,8.035,1428,7.694,1429,8.627,1430,7.694,1431,5.283]],["title/interfaces/MangolConfigToolbar.html",[285,0.374,1389,2.963]],["body/interfaces/MangolConfigToolbar.html",[2,0.046,3,0.039,4,0.032,8,0.145,9,0.295,13,0.243,20,0.006,22,0.655,27,0.209,32,0.053,38,2.259,42,0.005,43,0.005,185,1.475,201,2.259,222,2.222,285,0.722,292,2.631,294,1.752,298,0.952,303,1.688,366,3.673,380,3.283,421,3.532,450,1.131,528,1.038,529,1.631,530,1.404,531,3.283,988,3.32,999,4.445,1032,2.382,1049,2.749,1367,5.21,1368,1.948,1369,3.68,1370,5.61,1371,3.532,1372,3.68,1373,3.532,1374,3.68,1375,3.68,1376,3.283,1377,3.68,1378,4.596,1379,3.532,1380,3.532,1381,5.21,1382,3.68,1383,5.029,1384,3.68,1385,3.68,1386,3.68,1387,3.68,1388,5.21,1389,4.425]],["title/interfaces/MangolConfigToolbarItem.html",[285,0.374,1370,3.077]],["body/interfaces/MangolConfigToolbarItem.html",[2,0.046,3,0.039,4,0.032,8,0.145,9,0.295,13,0.257,20,0.006,22,0.655,27,0.209,32,0.053,38,1.475,42,0.005,43,0.005,185,1.475,201,1.475,222,1.451,285,0.722,292,2.631,294,1.752,298,0.952,303,1.688,366,3.673,380,3.283,421,3.532,450,1.21,528,1.093,529,2.498,530,2.151,531,3.283,988,3.32,999,2.901,1032,2.382,1049,2.749,1367,4.425,1368,1.948,1369,3.68,1370,5.751,1371,3.532,1372,3.68,1373,3.532,1374,3.68,1375,3.68,1376,3.283,1377,5.638,1378,4.596,1379,3.532,1380,3.532,1381,4.425,1382,3.68,1383,4.272,1384,3.68,1385,3.68,1386,3.68,1387,3.68,1388,4.425,1389,3.401]],["title/interfaces/MangolConfigToolbarLayertreeDetails.html",[285,0.374,1378,3.077]],["body/interfaces/MangolConfigToolbarLayertreeDetails.html",[2,0.048,3,0.04,4,0.033,8,0.15,9,0.301,13,0.245,20,0.006,22,0.605,27,0.214,32,0.053,38,1.524,42,0.005,43,0.005,185,2.288,201,1.524,222,1.499,285,0.727,292,2.664,294,1.758,298,0.984,303,1.744,366,3.752,380,3.392,421,3.65,450,1.143,528,1.048,529,1.685,530,1.451,531,3.392,988,3.391,999,2.998,1032,2.462,1049,4.264,1367,4.521,1368,2.013,1369,3.803,1370,5.669,1371,3.65,1372,3.803,1373,3.65,1374,3.803,1375,3.803,1376,3.392,1377,3.803,1378,5.19,1379,3.65,1380,3.65,1381,4.521,1382,3.803,1383,4.363,1384,3.803,1385,3.803,1386,3.803,1387,3.803,1388,4.521,1389,3.515,1432,6.089]],["title/interfaces/MangolConfigView.html",[285,0.374,1433,4.336]],["body/interfaces/MangolConfigView.html",[2,0.056,3,0.047,4,0.038,8,0.175,9,0.332,13,0.257,20,0.006,22,0.639,32,0.038,42,0.005,43,0.005,82,1.51,285,0.629,294,1.768,450,1.122,1368,2.349,1433,7.287,1434,6.731,1435,7.021,1436,7.508,1437,9.149,1438,9.149]],["title/interfaces/MangolControllersFullScreenDictionary.html",[285,0.374,1423,1.796]],["body/interfaces/MangolControllersFullScreenDictionary.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.301,13,0.203,20,0.006,22,0.604,32,0.056,42,0.005,43,0.005,46,1.193,77,1.174,79,1.868,80,1.193,82,0.95,104,3.387,105,3.234,154,1.936,285,0.753,288,2.538,289,3.557,290,3.557,292,2.82,294,1.015,296,1.741,298,1.476,299,2.764,300,2.764,301,4.035,303,1.741,305,2.835,307,2.835,308,2.513,310,2.835,313,4.261,314,4.261,450,1.243,528,0.989,1368,2.009,1414,2.764,1418,3.174,1419,3.174,1420,3.964,1421,4.986,1422,2.738,1423,3.028,1424,2.738,1425,2.738]],["title/interfaces/MangolControllersFullScreenOptions.html",[105,2.122,285,0.374]],["body/interfaces/MangolControllersFullScreenOptions.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.3,13,0.202,20,0.006,22,0.603,32,0.056,42,0.005,43,0.005,46,1.189,77,1.17,79,1.861,80,1.189,82,0.947,104,3.379,105,3.57,154,1.929,285,0.753,288,2.532,289,3.548,290,3.548,292,2.866,294,1.011,296,1.735,298,1.588,299,2.753,300,2.753,301,4.508,303,1.735,305,2.825,307,2.825,308,2.503,310,2.825,313,2.825,314,2.825,450,1.204,528,1.046,1368,2.002,1414,2.753,1418,3.162,1419,3.162,1420,3.955,1421,5.048,1422,2.731,1423,3.192,1424,2.731,1425,2.731]],["title/interfaces/MangolControllersOptions.html",[285,0.374,1421,2.601]],["body/interfaces/MangolControllersOptions.html",[2,0.049,3,0.041,4,0.034,8,0.153,9,0.305,13,0.161,20,0.006,32,0.056,42,0.005,43,0.005,46,1.218,77,1.198,79,1.907,80,1.218,82,0.97,104,3.432,105,3.277,154,1.977,285,0.755,288,2.572,289,3.604,290,3.604,292,2.835,294,1.036,296,2.636,298,1.487,299,2.821,300,2.821,301,4.075,303,1.777,305,2.894,307,2.894,308,2.565,310,2.894,313,2.894,314,2.894,450,1.21,528,1.053,1368,2.051,1414,2.821,1418,3.24,1419,3.24,1420,4.017,1421,5.073,1422,2.774,1423,2.774,1424,2.774,1425,2.774]],["title/interfaces/MangolControllersPositionDictionary.html",[285,0.374,1424,1.796]],["body/interfaces/MangolControllersPositionDictionary.html",[2,0.047,3,0.04,4,0.032,8,0.147,9,0.298,13,0.223,20,0.006,22,0.637,32,0.056,42,0.005,43,0.005,46,1.173,77,1.155,79,1.837,80,1.173,82,0.935,104,3.351,105,3.2,154,1.905,285,0.751,288,2.511,289,3.519,290,3.519,292,2.807,294,0.998,296,1.712,298,1.466,299,2.718,300,2.718,301,4.004,303,1.712,305,4.234,307,4.234,308,3.752,310,2.789,313,2.789,314,2.789,450,1.251,528,0.982,1368,1.976,1414,2.718,1418,3.122,1419,3.122,1420,3.922,1421,4.967,1422,2.709,1423,2.709,1424,3.004,1425,2.709]],["title/interfaces/MangolControllersPositionOptions.html",[285,0.374,289,2.334]],["body/interfaces/MangolControllersPositionOptions.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.3,13,0.202,20,0.006,22,0.603,32,0.056,42,0.005,43,0.005,46,1.189,77,1.17,79,1.861,80,1.189,82,0.947,104,3.379,105,3.226,154,1.929,285,0.753,288,2.532,289,3.926,290,3.548,292,2.866,294,1.442,296,1.735,298,1.588,299,2.753,300,2.753,301,4.028,303,2.613,305,2.825,307,2.825,308,2.503,310,2.825,313,2.825,314,2.825,450,1.204,528,0.987,1368,2.002,1414,2.753,1418,3.162,1419,3.162,1420,3.955,1421,5.048,1422,2.731,1423,2.731,1424,3.192,1425,2.731]],["title/interfaces/MangolControllersPositionStateModel.html",[112,3.077,285,0.374]],["body/interfaces/MangolControllersPositionStateModel.html",[2,0.034,3,0.029,4,0.023,7,0.688,8,0.106,9,0.239,13,0.112,20,0.006,24,0.523,27,0.169,32,0.045,33,0.477,42,0.004,43,0.004,46,0.85,58,2.97,77,1.688,79,2.829,80,1.909,82,1.465,90,2.175,104,3.143,105,2.567,106,1.486,107,1.515,110,1.676,112,4.754,113,4.534,137,2.973,154,2.675,259,2.019,285,0.612,286,2.973,287,2.973,288,2.355,289,3.301,290,2.823,291,3.147,292,2.116,293,3.56,294,1.324,295,2.823,296,2.685,297,3.635,298,1.487,299,1.968,300,1.968,301,4.076,302,3.574,303,1.778,304,2.499,305,2.019,306,4.514,307,2.019,308,1.79,309,2.412,310,2.019,311,3.147,312,1.874,313,2.896,314,2.896,315,1.545,316,2.973,317,3.147,318,1.79,319,1.92,320,4.048,321,3.147,322,3.147,323,3.147,324,3.147,325,3.147,326,3.147,327,5.277,328,4.526,329,3.147,330,3.147,331,3.147,332,3.147,333,5.765,334,3.147,335,3.147,336,3.147,337,3.147,338,5.765,339,3.147,340,3.147,341,3.147,342,3.147,343,5.277,344,3.147,345,3.147]],["title/interfaces/MangolControllersRotationDictionary.html",[285,0.374,1425,1.796]],["body/interfaces/MangolControllersRotationDictionary.html",[2,0.049,3,0.041,4,0.033,8,0.152,9,0.304,13,0.16,20,0.006,22,0.523,32,0.056,42,0.005,43,0.005,46,1.213,77,1.194,79,1.899,80,1.213,82,0.966,104,3.424,105,3.269,154,1.969,285,0.755,288,2.566,289,3.596,290,3.596,292,2.832,294,1.032,296,1.771,298,1.485,299,2.811,300,2.811,301,4.067,303,1.771,305,2.883,307,2.883,308,2.555,310,4.288,313,2.883,314,2.883,450,1.231,528,0.995,1368,2.043,1414,2.811,1418,3.228,1419,3.228,1420,4.007,1421,5.006,1422,2.768,1423,2.768,1424,2.768,1425,3.052]],["title/interfaces/MangolControllersRotationOptions.html",[285,0.374,290,2.334]],["body/interfaces/MangolControllersRotationOptions.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.3,13,0.202,20,0.006,22,0.603,32,0.056,42,0.005,43,0.005,46,1.189,77,1.17,79,1.861,80,1.189,82,0.947,104,3.379,105,3.226,154,1.929,285,0.753,288,2.532,289,3.548,290,3.926,292,2.866,294,1.011,296,1.735,298,1.588,299,2.753,300,2.753,301,4.508,303,1.735,305,2.825,307,2.825,308,2.503,310,2.825,313,2.825,314,2.825,450,1.204,528,1.046,1368,2.002,1414,2.753,1418,3.162,1419,3.162,1420,3.955,1421,5.048,1422,2.731,1423,2.731,1424,2.731,1425,3.192]],["title/interfaces/MangolControllersRotationStateModel.html",[113,3.206,285,0.374]],["body/interfaces/MangolControllersRotationStateModel.html",[2,0.034,3,0.029,4,0.023,7,0.688,8,0.106,9,0.239,13,0.112,20,0.006,24,0.523,27,0.169,32,0.045,33,0.477,42,0.004,43,0.004,46,0.85,58,2.97,77,1.688,79,2.829,80,1.954,82,1.465,90,2.175,104,3.143,105,2.567,106,1.486,107,1.515,110,1.676,112,4.352,113,4.953,137,2.973,154,2.675,259,2.019,285,0.612,286,2.973,287,2.973,288,2.355,289,2.823,290,3.301,291,3.147,292,2.116,293,3.137,294,1.324,295,2.823,296,2.685,297,3.635,298,1.487,299,1.968,300,1.968,301,4.076,302,3.574,303,1.778,304,2.499,305,2.019,306,4.514,307,2.019,308,1.79,309,2.412,310,2.019,311,3.147,312,1.874,313,2.896,314,2.896,315,1.545,316,2.973,317,3.147,318,1.79,319,1.92,320,4.048,321,3.147,322,3.147,323,3.147,324,3.147,325,3.147,326,3.147,327,5.277,328,4.526,329,3.147,330,3.147,331,3.147,332,3.147,333,5.765,334,3.147,335,3.147,336,3.147,337,3.147,338,5.765,339,3.147,340,3.147,341,3.147,342,3.147,343,5.277,344,3.147,345,3.147]],["title/interfaces/MangolControllersScalebarOptions.html",[285,0.374,288,1.666]],["body/interfaces/MangolControllersScalebarOptions.html",[2,0.05,3,0.042,4,0.034,20,0.006,32,0.056,42,0.005,43,0.005,46,1.236,77,1.217,79,1.936,80,1.236,82,0.985,104,3.466,105,3.309,154,2.007,285,0.756,288,2.855,289,3.639,290,3.639,292,2.892,294,1.052,296,1.805,298,1.495,299,2.865,300,2.865,301,4.104,303,1.805,305,2.939,307,2.939,308,2.604,310,2.939,313,2.939,314,2.939,450,1.213,528,1.002,1368,2.083,1414,2.865,1418,3.29,1419,3.29,1420,4.056,1421,5.088,1422,2.801,1423,2.801,1424,2.801,1425,2.801]],["title/interfaces/MangolControllersTileloadOptions.html",[285,0.374,1420,2.601]],["body/interfaces/MangolControllersTileloadOptions.html",[2,0.05,3,0.042,4,0.034,20,0.006,32,0.056,42,0.005,43,0.005,46,1.236,77,1.217,79,1.936,80,1.236,82,0.985,104,3.466,105,3.309,154,2.007,285,0.756,288,2.597,289,3.639,290,3.639,292,2.892,294,1.052,296,1.805,298,1.495,299,2.865,300,2.865,301,4.104,303,1.805,305,2.939,307,2.939,308,2.604,310,2.939,313,2.939,314,2.939,450,1.213,528,1.002,1368,2.083,1414,2.865,1418,3.29,1419,3.29,1420,4.458,1421,5.088,1422,2.801,1423,2.801,1424,2.801,1425,2.801]],["title/interfaces/MangolControllersZoomDictionary.html",[285,0.374,1422,1.796]],["body/interfaces/MangolControllersZoomDictionary.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.301,13,0.203,20,0.006,22,0.604,32,0.056,42,0.005,43,0.005,46,1.193,77,1.174,79,1.868,80,1.193,82,0.95,104,3.387,105,3.234,154,1.936,285,0.753,288,2.538,289,3.557,290,3.557,292,2.82,294,1.015,296,1.741,298,1.476,299,4.153,300,4.153,301,4.035,303,1.741,305,2.835,307,2.835,308,2.513,310,2.835,313,2.835,314,2.835,450,1.243,528,0.989,1368,2.009,1414,2.764,1418,3.174,1419,3.174,1420,3.964,1421,4.986,1422,3.028,1423,2.738,1424,2.738,1425,2.738]],["title/interfaces/MangolControllersZoomOptions.html",[104,2.222,285,0.374]],["body/interfaces/MangolControllersZoomOptions.html",[2,0.048,3,0.04,4,0.033,8,0.149,9,0.3,13,0.202,20,0.006,22,0.603,32,0.056,42,0.005,43,0.005,46,1.189,77,1.17,79,1.861,80,1.189,82,0.947,104,3.739,105,3.226,154,1.929,285,0.753,288,2.532,289,3.548,290,3.548,292,2.866,294,1.011,296,1.735,298,1.588,299,2.753,300,2.753,301,4.508,303,1.735,305,2.825,307,2.825,308,2.503,310,2.825,313,2.825,314,2.825,450,1.204,528,1.046,1368,2.002,1414,2.753,1418,3.162,1419,3.162,1420,3.955,1421,5.048,1422,3.192,1423,2.731,1424,2.731,1425,2.731]],["title/classes/MangolLayer.html",[0,0.003,16,1.421]],["body/classes/MangolLayer.html",[0,0.005,2,0.046,3,0.039,4,0.032,8,0.144,9,0.294,10,2.205,13,0.256,14,0.694,16,2.112,17,1.132,19,0.772,20,0.006,21,0.9,22,0.505,27,0.232,32,0.032,34,1.734,42,0.005,43,0.005,106,2.008,292,2.224,400,3.654,450,1.253,493,4.312,528,0.919,858,5.015,1032,3.639,1394,3.507,1402,5.196,1403,5.397,1404,5.397,1408,5.833,1411,4.018,1413,3.822,1439,5.542,1440,5.933,1441,7.229,1442,5.542,1443,5.542,1444,5.542,1445,5.542,1446,5.542,1447,5.542,1448,4.943,1449,4.943,1450,4.943,1451,5.542,1452,4.943,1453,4.943,1454,5.542,1455,5.542,1456,5.542,1457,5.542,1458,5.542,1459,5.542,1460,5.542,1461,5.542]],["title/classes/MangolLayerGroup.html",[0,0.003,1195,2.394]],["body/classes/MangolLayerGroup.html",[0,0.005,2,0.052,3,0.044,4,0.036,8,0.164,9,0.319,10,2.142,13,0.245,14,0.79,16,2.614,17,1.081,19,0.879,20,0.006,21,0.936,22,0.548,27,0.226,32,0.036,34,1.167,42,0.005,43,0.005,106,2.286,450,1.197,1032,3.818,1102,5.261,1195,4.531,1405,5.45,1413,4.35,1440,6.442,1449,5.625,1450,5.625,1452,5.625,1453,5.625,1462,6.307,1463,7.85,1464,6.307,1465,6.307,1466,6.307,1467,6.307]],["title/interfaces/MangolLayerGroupOptions.html",[285,0.374,1405,2.963]],["body/interfaces/MangolLayerGroupOptions.html",[2,0.047,3,0.06,4,0.032,8,0.146,9,0.297,13,0.222,16,2.509,20,0.006,21,0.957,22,0.511,27,0.247,29,1.767,32,0.053,34,1.646,42,0.005,43,0.005,285,0.723,292,1.736,294,1.675,404,3.571,416,3.511,450,1.263,453,3.511,493,3.699,528,0.981,647,3.571,858,3.319,1032,3.797,1049,3.602,1085,3.11,1102,5.232,1195,4.228,1196,2.933,1368,1.969,1390,4.629,1391,3.72,1392,3.21,1393,4.629,1394,3.571,1395,3.72,1396,3.72,1397,3.913,1398,4.032,1399,4.629,1400,3.72,1401,3.72,1402,3.438,1403,3.571,1404,3.571,1405,4.457]],["title/interfaces/MangolLayerOptions.html",[285,0.374,1402,2.963]],["body/interfaces/MangolLayerOptions.html",[2,0.044,3,0.059,4,0.03,8,0.138,9,0.286,13,0.25,16,2.055,20,0.006,21,0.945,22,0.663,27,0.242,29,1.664,32,0.052,34,1.756,42,0.004,43,0.004,285,0.714,292,2.164,294,1.656,404,3.363,416,3.376,450,1.273,453,3.376,493,4.412,528,1.024,647,3.363,858,4.934,1032,3.724,1049,3.463,1085,2.929,1102,4.136,1195,3.463,1196,2.762,1368,1.855,1390,4.451,1391,3.504,1392,3.023,1393,4.451,1394,3.363,1395,3.504,1396,3.504,1397,3.762,1398,3.877,1399,4.988,1400,3.504,1401,3.504,1402,4.285,1403,5.309,1404,5.309,1405,3.238]],["title/classes/MangolMap.html",[0,0.003,1468,4.336]],["body/classes/MangolMap.html",[0,0.005,2,0.06,3,0.051,4,0.042,13,0.199,14,0.912,17,0.88,19,1.015,20,0.006,21,0.741,22,0.598,27,0.21,32,0.042,42,0.005,43,0.005,46,1.885,50,3.786,292,2.635,1440,7.029,1448,6.495,1468,7.639,1469,7.283,1470,7.283]],["title/modules/MangolModule.html",[249,1.729,1471,3.525]],["body/modules/MangolModule.html",[0,0.003,2,0.042,3,0.035,4,0.029,7,0.849,20,0.006,25,0.849,27,0.282,28,0.705,32,0.051,33,0.793,37,1.878,42,0.004,43,0.004,52,4.696,70,2.844,79,1.642,80,1.049,82,1.124,87,1.8,90,1.155,102,1.295,116,1.871,185,1.338,226,3.335,249,2.421,250,4.937,251,2.632,252,4.377,253,2.791,254,4.377,258,1.703,259,2.493,261,4.005,262,2.88,263,3.874,264,4.937,265,3.671,293,2.114,302,2.632,315,1.908,347,3.753,352,1.908,384,2.88,416,2.43,1101,2.56,1471,6.971,1472,4.516,1473,4.516,1474,4.516,1475,4.516,1476,4.516,1477,6.411,1478,6.411,1479,6.098,1480,4.516,1481,4.516,1482,6.809,1483,5.063,1484,6.809,1485,6.073,1486,4.155,1487,6.073,1488,4.516,1489,6.073,1490,8.228,1491,5.063,1492,6.809,1493,4.155,1494,5.588,1495,5.063,1496,5.063,1497,5.063,1498,5.063,1499,5.063,1500,4.516,1501,4.155,1502,4.516,1503,5.063,1504,5.063,1505,4.155,1506,6.809,1507,5.063]],["title/interfaces/MangolReady.html",[285,0.374,1508,4.336]],["body/interfaces/MangolReady.html",[2,0.061,3,0.051,4,0.042,8,0.189,9,0.348,13,0.2,20,0.006,27,0.21,32,0.042,42,0.005,43,0.005,75,4.511,108,5.027,285,0.66,1170,5.292,1508,7.649,1509,7.3,1510,7.3,1511,7.3]],["title/injectables/MangolService.html",[768,2.394,1512,3.99]],["body/injectables/MangolService.html",[0,0.003,2,0.037,3,0.031,4,0.026,8,0.117,13,0.24,14,0.563,17,1.122,19,1.219,20,0.006,21,0.89,22,0.611,27,0.261,28,0.626,32,0.026,42,0.004,43,0.004,46,0.931,50,2.335,58,2.407,75,3.47,78,3.448,83,2.035,86,1.798,87,3.032,90,2.154,91,3.234,93,3.735,102,1.149,103,1.836,108,4.185,109,2.737,115,1.692,116,1.66,117,2.006,119,3.227,120,3.098,136,4.681,242,1.865,315,2.948,352,1.692,390,2.555,450,1.088,528,1.036,530,1.13,543,2.272,768,3.56,792,3.098,793,2.962,1101,2.272,1333,3.257,1334,4.006,1335,2.403,1336,3.448,1359,3.257,1512,5.148,1513,4.492,1514,7.824,1515,7.824,1516,7.824,1517,4.814,1518,3.689,1519,6.273,1520,6.273,1521,6.273,1522,6.273,1523,6.421,1524,4.492,1525,4.492,1526,6.978,1527,4.492,1528,4.492,1529,6.273,1530,4.492,1531,6.273,1532,4.492,1533,6.273,1534,4.492,1535,6.273,1536,4.492,1537,6.273,1538,4.492,1539,6.273,1540,4.492,1541,4.492,1542,4.006,1543,4.492,1544,4.492,1545,4.492,1546,4.492,1547,4.492,1548,4.492,1549,4.492,1550,4.492]],["title/interfaces/MangolState.html",[285,0.374,1501,3.99]],["body/interfaces/MangolState.html",[2,0.042,3,0.036,4,0.029,7,1.147,8,0.132,9,0.278,13,0.258,20,0.006,24,0.65,27,0.275,28,0.71,32,0.044,33,0.593,34,1.592,38,2.274,42,0.004,43,0.004,46,1.783,52,3.515,58,2.104,59,3.911,70,3.593,75,4.13,90,1.561,139,3.105,201,2.274,222,2.237,242,2.558,285,0.526,315,2.577,318,2.224,319,2.386,320,2.175,347,4.743,702,5.249,999,4.473,1489,6.885,1500,4.545,1501,6.77,1505,4.182,1542,4.545,1551,4.545,1552,7.719,1553,7.719,1554,7.719,1555,7.719,1556,7.719,1557,7.719,1558,7.719,1559,7.719,1560,7.719,1561,7.719,1562,6.839,1563,5.096,1564,5.096,1565,5.096,1566,5.096,1567,5.096,1568,5.096,1569,5.096,1570,5.096,1571,5.096,1572,5.096,1573,5.096,1574,5.096,1575,5.096,1576,5.096,1577,5.096,1578,5.096,1579,5.096,1580,5.096,1581,5.096,1582,5.096,1583,5.096,1584,5.096,1585,5.096,1586,5.096,1587,5.096,1588,5.096,1589,5.096,1590,5.096,1591,5.096,1592,5.096,1593,5.096,1594,5.096,1595,5.096]],["title/components/MapComponent.html",[60,1.024,228,1.697]],["body/components/MapComponent.html",[0,0.001,2,0.017,3,0.014,4,0.012,6,0.472,8,0.054,9,0.14,13,0.235,14,0.432,16,2.715,17,1.054,19,0.919,20,0.006,21,0.731,22,0.461,24,0.734,25,0.869,27,0.242,28,0.288,29,0.647,32,0.012,33,0.603,34,1.682,35,1.308,38,0.911,41,1.499,42,0.002,43,0.002,46,1.488,50,1.075,51,1.587,56,3.139,60,1.212,61,0.721,62,0.749,63,0.764,64,0.764,66,1.548,67,2.244,68,0.749,69,3.21,71,1.204,73,1.226,75,2.985,76,3.975,77,0.422,79,1.868,80,0.428,82,0.341,83,1.119,84,2.619,85,1.807,86,0.828,87,2.705,90,1.776,91,2.26,95,4.199,102,0.529,103,0.845,106,0.749,108,2.771,109,1.26,110,0.845,111,1.697,112,3.278,114,1.587,115,0.779,116,0.764,118,2.647,120,1.426,128,1.697,129,1.697,134,2.647,136,1.845,138,2.101,139,2.101,140,3.331,141,2.83,143,0.735,147,2.101,148,1.981,184,1.587,185,0.546,186,1.25,187,1.226,188,1.274,189,1.914,190,0.764,191,0.764,192,0.721,193,0.764,194,0.721,195,0.764,196,0.721,197,0.764,198,0.721,199,0.764,200,0.721,201,1.172,202,1.274,203,0.721,204,1.274,205,0.721,206,0.749,207,0.764,208,0.721,209,0.764,210,0.764,211,0.695,212,1.639,213,0.721,214,0.764,215,0.721,216,0.764,217,0.721,218,0.764,219,0.721,220,0.764,221,0.721,222,0.537,223,0.764,224,0.721,225,0.764,226,0.721,227,0.764,228,1.807,229,0.764,230,0.721,231,0.764,232,0.721,233,0.721,234,0.721,235,0.764,236,0.721,237,0.764,238,0.721,239,0.721,240,0.764,241,0.721,242,0.615,243,0.721,244,0.764,245,0.721,246,0.764,247,0.721,248,0.764,293,1.44,294,0.782,303,1.043,315,1.299,347,1.14,354,4.368,362,2.524,370,1.26,384,1.176,385,1.046,387,1.14,388,1.426,390,2.524,392,3.336,393,3.336,394,1.844,402,2.028,410,1.844,450,0.734,453,2.486,456,2.771,475,3.755,487,1.14,504,2.647,505,1.499,506,2.5,512,1.308,515,1.587,528,0.507,619,3.641,620,3.076,622,3.076,646,4.375,674,1.308,676,1.499,679,5.206,685,4.619,704,2.83,808,2.83,818,3.076,857,5.674,863,1.697,865,3.076,979,2.379,1085,1.901,1170,5.012,1195,4.089,1196,1.075,1205,1.587,1287,3.076,1288,3.076,1289,3.957,1291,3.076,1293,3.076,1298,4.619,1309,3.076,1310,1.844,1311,1.844,1345,1.844,1363,2.274,1365,1.844,1371,3.278,1412,1.308,1416,4.175,1417,2.274,1430,3.076,1432,2.83,1493,2.83,1596,2.068,1597,3.957,1598,3.449,1599,3.449,1600,5.179,1601,5.179,1602,5.179,1603,4.619,1604,4.619,1605,3.449,1606,3.449,1607,4.619,1608,3.449,1609,2.068,1610,2.068,1611,3.449,1612,2.068,1613,3.449,1614,3.449,1615,3.449,1616,2.068,1617,3.449,1618,3.449,1619,2.068,1620,2.068,1621,2.068,1622,3.449,1623,2.068,1624,2.068,1625,2.068,1626,6.914,1627,6.219,1628,2.068,1629,2.068,1630,2.068,1631,3.449,1632,2.068,1633,2.068,1634,2.068,1635,2.068,1636,2.068,1637,2.068,1638,2.068,1639,2.068,1640,2.068,1641,2.068,1642,1.844,1643,2.068,1644,2.068,1645,2.068,1646,2.068,1647,2.068,1648,1.844,1649,3.076,1650,2.068,1651,3.449,1652,2.068,1653,3.449,1654,2.068,1655,3.449,1656,2.068,1657,2.068,1658,3.449,1659,2.068,1660,2.068,1661,2.068,1662,2.068,1663,3.449,1664,2.068,1665,2.068,1666,2.068,1667,2.068,1668,1.844,1669,2.068,1670,2.068,1671,1.697,1672,3.449,1673,2.068,1674,3.449,1675,2.068,1676,2.068,1677,2.068,1678,2.068,1679,6.219,1680,3.449,1681,2.068,1682,1.844,1683,1.697,1684,2.068,1685,2.068,1686,1.697,1687,2.068,1688,2.068,1689,2.068,1690,3.449,1691,2.068,1692,2.068,1693,2.068,1694,5.179,1695,2.068,1696,2.068,1697,2.068,1698,2.068,1699,2.068]],["title/modules/MapModule.html",[249,1.729,1477,3.525]],["body/modules/MapModule.html",[0,0.004,2,0.056,3,0.047,4,0.039,20,0.006,27,0.264,32,0.052,42,0.005,43,0.005,82,1.352,102,1.728,185,1.786,228,3.472,249,2.913,251,3.514,252,5.014,253,3.726,254,3.845,258,2.274,259,3.329,261,4.818,262,3.845,263,4.66,1477,6.998,1700,6.029,1701,6.029,1702,6.029,1703,6.76,1704,6.76]],["title/injectables/MapService.html",[768,2.394,1170,3.525]],["body/injectables/MapService.html",[0,0.004,2,0.051,3,0.054,4,0.035,8,0.161,13,0.17,14,1.062,16,2.477,17,0.938,20,0.006,21,0.63,27,0.269,29,1.939,32,0.035,34,1.645,42,0.005,43,0.005,46,1.283,82,1.022,83,2.518,90,1.771,102,1.584,148,3.968,302,3.22,450,0.99,646,5.577,768,4.175,792,4.271,793,4.084,1170,5.627,1412,3.92,1416,4.912,1417,5.118,1432,5.083,1435,4.754,1436,5.083,1705,6.194,1706,8.887,1707,6.194,1708,6.194,1709,6.923,1710,5.524,1711,5.524,1712,5.524,1713,6.923,1714,5.524,1715,5.524,1716,5.524,1717,7.762,1718,6.194,1719,5.524,1720,4.754,1721,6.194]],["title/components/MeasureComponent.html",[60,1.024,230,1.697]],["body/components/MeasureComponent.html",[0,0.002,2,0.029,3,0.037,4,0.02,6,0.722,8,0.092,9,0.214,13,0.223,14,0.661,17,1.051,19,0.492,20,0.006,21,0.642,22,0.247,27,0.265,28,0.492,30,2.111,31,1.414,32,0.02,33,0.411,34,1.167,38,1.849,42,0.003,43,0.003,46,1.551,50,1.836,56,3.344,58,1.087,60,1.576,61,1.233,62,1.28,63,1.305,64,1.305,66,2.201,67,3.19,68,1.28,69,3.413,71,1.84,73,1.875,77,0.72,80,0.732,82,0.583,83,1.71,84,3.538,85,2.441,86,1.414,87,2.792,90,1.44,91,2.161,93,3.956,95,3.538,102,0.903,103,1.444,106,1.28,115,1.331,116,1.305,119,2.354,124,2.329,136,3.375,140,2.068,143,1.256,147,2.152,148,2.817,185,0.933,186,1.911,187,1.875,188,1.948,189,2.585,190,1.305,191,1.305,192,1.233,193,1.305,194,1.233,195,1.305,196,1.233,197,1.305,198,1.233,199,1.305,200,1.233,201,1.667,202,1.948,203,1.233,204,1.948,205,1.233,206,1.28,207,1.305,208,1.233,209,1.305,210,1.305,211,1.188,212,2.331,213,1.233,214,1.305,215,1.233,216,1.305,217,1.233,218,1.305,219,1.233,220,1.305,221,1.233,222,0.918,223,1.305,224,1.233,225,1.305,226,1.233,227,1.305,228,1.233,229,1.305,230,2.441,231,1.305,232,1.233,233,1.233,234,1.233,235,1.305,236,1.233,237,1.305,238,1.233,239,1.233,240,1.305,241,1.233,242,1.05,243,1.233,244,1.305,245,1.233,246,1.305,247,1.233,248,1.305,298,1.193,354,3.891,364,2.753,366,1.786,373,1.541,376,4.327,377,2.899,383,2.561,384,2.009,385,1.786,387,1.947,388,2.436,389,2.436,390,2.009,392,2.666,393,2.666,402,2.077,409,3.15,487,1.947,501,2.436,505,2.561,512,2.235,513,2.899,673,2.711,988,1.614,989,4.126,993,1.947,1376,2.077,1383,2.077,1431,2.899,1479,5.611,1642,3.15,1722,3.532,1723,5.272,1724,5.272,1725,6.996,1726,6.996,1727,7.003,1728,6.996,1729,5.272,1730,3.532,1731,3.532,1732,3.532,1733,3.532,1734,3.532,1735,3.532,1736,3.532,1737,3.532,1738,3.532,1739,2.899,1740,3.15,1741,3.532,1742,3.532,1743,3.532,1744,5.272,1745,3.15,1746,3.532,1747,3.15,1748,2.899,1749,5.272,1750,3.532,1751,3.532,1752,3.532,1753,3.532,1754,3.15,1755,3.532,1756,3.532,1757,3.532,1758,3.15,1759,3.532,1760,3.532]],["title/interfaces/MeasureDictionary.html",[285,0.374,988,2.222]],["body/interfaces/MeasureDictionary.html",[2,0.035,3,0.03,4,0.024,7,0.71,8,0.11,9,0.244,13,0.259,20,0.006,22,0.681,24,0.54,27,0.173,32,0.044,33,0.814,38,2.273,42,0.004,43,0.004,46,0.876,57,2.676,58,2.752,90,1.908,140,1.659,148,1.888,285,0.586,295,2.886,297,2.748,298,1.193,308,3.512,309,2.487,315,1.593,318,1.846,319,1.98,320,3.435,328,3.863,352,3.151,450,1.276,496,1.693,519,5.834,520,5.834,528,0.687,529,2.044,530,1.759,538,3.066,539,4.612,854,3.066,983,3.979,988,3.197,989,3.856,993,2.331,1047,5.023,1048,5.023,1761,3.246,1762,6.418,1763,6.747,1764,6.604,1765,7.06,1766,6.604,1767,6.604,1768,6.237,1769,6.237,1770,4.934,1771,3.471,1772,3.471,1773,6.252,1774,6.863,1775,3.246,1776,3.246,1777,3.471,1778,3.246,1779,3.066,1780,3.471,1781,3.471,1782,4.934,1783,3.471,1784,3.471,1785,3.471,1786,3.246,1787,3.471,1788,3.471,1789,3.471,1790,3.471,1791,3.471,1792,4.934,1793,3.471,1794,3.471,1795,3.471,1796,3.471,1797,3.471]],["title/interfaces/MeasureMode.html",[285,0.374,989,2.68]],["body/interfaces/MeasureMode.html",[2,0.039,3,0.033,4,0.027,7,0.785,8,0.121,9,0.262,13,0.256,20,0.006,24,0.597,27,0.186,32,0.045,33,0.86,38,2.339,42,0.004,43,0.004,46,0.97,57,2.963,58,2.816,90,1.971,140,1.836,148,2.09,285,0.613,295,3.099,297,2.951,298,1.26,308,2.817,309,2.753,315,1.764,318,2.043,319,2.192,320,3.566,328,4.01,352,3.254,450,1.253,496,1.874,519,4.68,520,4.68,528,0.738,529,2.159,530,1.858,538,3.394,539,4.872,854,3.394,983,4.203,988,2.951,989,4.39,993,2.581,1047,5.836,1048,5.836,1761,3.593,1762,5.671,1763,6.412,1764,5.298,1765,6.536,1766,5.298,1767,5.298,1768,5.774,1769,5.774,1770,6.536,1771,3.842,1772,3.842,1773,7.264,1774,7.088,1775,3.593,1776,3.593,1777,3.842,1778,3.593,1779,3.394,1780,3.842,1781,3.842,1782,5.298,1783,3.842,1784,3.842,1785,3.842,1786,3.593,1787,3.842,1788,3.842,1789,3.842,1790,3.842,1791,3.842,1792,5.298,1793,3.842,1794,3.842,1795,3.842,1796,3.842,1797,3.842]],["title/modules/MeasureModule.html",[249,1.729,1798,3.525]],["body/modules/MeasureModule.html",[0,0.004,2,0.051,3,0.043,4,0.035,20,0.006,27,0.278,32,0.051,42,0.005,43,0.005,82,1.271,102,1.565,185,1.617,230,3.428,232,3.249,233,3.249,249,2.74,251,3.182,252,4.796,253,3.374,254,3.482,258,2.059,259,3.014,261,4.531,262,3.482,263,4.383,268,5.586,269,4.437,570,6.323,571,5.023,577,6.871,578,5.459,588,5.459,590,5.459,1798,7.086,1799,5.459,1800,5.459,1801,5.459,1802,6.121,1803,7.704,1804,5.459,1805,6.121,1806,5.459]],["title/components/MeasureResultsComponent.html",[60,1.024,232,1.697]],["body/components/MeasureResultsComponent.html",[0,0.002,2,0.021,3,0.028,4,0.014,6,0.554,8,0.065,9,0.164,13,0.229,14,0.507,17,1.026,19,0.708,20,0.006,21,0.65,22,0.355,24,0.648,25,0.853,27,0.25,28,0.35,30,2.874,31,1.006,32,0.014,33,0.898,34,1.638,38,1.973,42,0.004,43,0.003,46,1.735,50,1.307,56,3.224,60,1.345,61,0.877,62,0.911,63,0.929,64,0.929,66,1.774,67,2.571,68,0.911,69,3.294,71,1.413,73,1.44,77,0.513,80,0.521,82,0.415,83,1.314,84,2.947,85,2.034,86,1.006,87,2.428,90,1.33,91,1.996,93,3.574,95,2.947,102,0.643,103,1.028,115,0.947,116,0.929,119,1.123,136,1.345,140,3.232,143,0.894,147,3.551,148,2.853,185,0.664,186,1.467,187,1.44,188,1.496,189,2.153,190,0.929,191,0.929,192,0.877,193,0.929,194,0.877,195,0.929,196,0.877,197,0.929,198,0.877,199,0.929,200,0.877,201,1.343,202,1.496,203,0.877,204,1.496,205,0.877,206,0.911,207,0.929,208,0.877,209,0.929,210,0.929,211,0.846,212,1.878,213,0.877,214,0.929,215,0.877,216,0.929,217,0.877,218,0.929,219,0.877,220,0.929,221,0.877,222,0.653,223,0.929,224,0.877,225,0.929,226,0.877,227,0.929,228,0.877,229,0.929,230,0.877,231,0.929,232,2.034,233,0.877,234,0.877,235,0.929,236,0.877,237,0.929,238,0.877,239,0.877,240,0.929,241,0.877,242,0.747,243,0.877,244,0.929,245,0.877,246,0.929,247,0.877,248,0.929,298,0.867,312,1.851,318,1.097,320,2.17,347,3.212,350,4.783,352,2.572,354,3.882,362,1.43,364,2.98,366,1.271,373,1.097,381,3.418,383,2.936,384,1.43,385,1.271,387,1.386,388,1.734,389,2.792,390,1.43,392,2.947,393,2.947,400,3.352,402,1.479,406,2.063,412,3.323,418,2.063,450,0.916,456,3.117,487,1.386,505,1.823,512,2.562,513,3.323,599,2.242,600,3.611,601,3.611,615,2.242,648,2.242,650,2.242,651,2.242,652,2.242,654,2.242,664,5.198,665,4.534,666,5.198,673,1.93,681,2.063,682,2.063,683,1.93,702,3.108,704,3.323,862,2.105,988,2.324,989,4.117,1376,2.381,1435,1.93,1479,4.951,1683,2.063,1740,2.242,1745,2.242,1747,3.611,1748,2.063,1754,2.242,1758,2.242,1762,4.473,1763,1.93,1768,1.823,1769,2.936,1775,3.108,1776,3.108,1778,3.108,1806,7.668,1807,7.668,1808,5.828,1809,7.709,1810,7.709,1811,5.828,1812,4.049,1813,4.049,1814,4.049,1815,2.514,1816,4.049,1817,2.514,1818,4.049,1819,2.514,1820,2.514,1821,2.514,1822,2.514,1823,2.514,1824,2.514,1825,2.514,1826,2.514,1827,2.514,1828,2.514,1829,2.514,1830,2.514,1831,2.514,1832,2.514,1833,5.828,1834,2.514,1835,2.514,1836,2.514,1837,2.514,1838,4.049,1839,2.514,1840,4.049,1841,2.514,1842,2.514,1843,2.514,1844,2.514,1845,2.514,1846,2.514,1847,2.514,1848,5.828,1849,4.049,1850,2.514,1851,2.514,1852,6.389,1853,2.514,1854,2.514,1855,2.514,1856,2.514,1857,2.242,1858,5.083,1859,2.514,1860,2.514,1861,2.514,1862,2.514,1863,2.514,1864,2.514,1865,2.514,1866,2.514,1867,4.049,1868,2.514,1869,2.514,1870,2.514,1871,2.514,1872,2.514,1873,3.611,1874,4.049,1875,2.514,1876,2.514,1877,2.514,1878,5.083,1879,2.514,1880,2.514,1881,2.514,1882,2.514,1883,2.514,1884,2.514,1885,2.514,1886,2.514,1887,2.514]],["title/components/MeasureSelectComponent.html",[60,1.024,233,1.697]],["body/components/MeasureSelectComponent.html",[0,0.003,2,0.034,3,0.029,4,0.023,6,0.805,8,0.106,9,0.239,13,0.218,14,0.513,17,1,19,0.819,20,0.006,21,0.764,22,0.41,27,0.245,28,0.571,32,0.023,33,0.477,34,1.087,38,2.304,42,0.004,43,0.004,56,3.387,57,3.718,60,1.674,61,1.429,62,1.484,63,1.513,64,1.513,66,2.398,68,1.484,69,3.456,71,2.05,73,2.089,77,0.835,80,0.849,82,0.676,83,1.906,85,2.62,86,1.639,87,2.942,90,1.341,91,2.013,93,3.637,102,1.047,103,1.674,115,1.543,116,1.513,117,1.829,119,2.623,136,3.143,138,2.495,139,2.495,143,1.456,185,1.082,186,2.129,187,2.089,188,2.171,189,2.774,190,1.513,191,1.513,192,1.429,193,1.513,194,1.429,195,1.513,196,1.429,197,1.513,198,1.429,199,1.513,200,1.429,201,1.816,202,2.171,203,1.429,204,2.171,205,1.429,206,1.484,207,1.513,208,1.429,209,1.513,210,1.513,211,1.377,212,2.539,213,1.429,214,1.513,215,1.429,216,1.513,217,1.429,218,1.513,219,1.429,220,1.513,221,1.429,222,1.064,223,1.513,224,1.429,225,1.513,226,1.429,227,1.513,228,1.429,229,1.513,230,1.429,231,1.513,232,1.429,233,2.62,234,1.429,235,1.513,236,1.429,237,1.513,238,1.429,239,1.429,240,1.513,241,1.429,242,1.217,243,1.429,244,1.513,245,1.429,246,1.513,247,1.429,248,1.513,298,1.172,352,2.995,362,2.33,396,3.653,456,4.016,496,2.352,655,2.495,752,3.653,753,5.24,754,5.24,755,5.24,756,5.24,760,5.24,761,6.696,764,5.24,766,5.24,988,3.141,989,3.239,993,2.257,1376,2.409,1739,3.361,1748,4.822,1804,7.6,1807,7.6,1888,7.507,1889,4.095,1890,4.095,1891,4.095,1892,4.095,1893,4.095,1894,4.095,1895,4.095,1896,5.876]],["title/injectables/MeasureService.html",[768,2.394,1479,3.353]],["body/injectables/MeasureService.html",[0,0.004,2,0.052,3,0.044,4,0.036,8,0.163,13,0.234,14,1.069,17,1.079,19,1.189,20,0.006,21,0.868,22,0.596,25,1.431,27,0.274,32,0.036,42,0.005,43,0.005,83,2.54,90,2.038,102,1.606,294,1.62,364,3.898,366,3.96,373,2.741,378,4.821,379,5.155,380,3.694,381,3.36,382,5.155,450,1.088,768,4.202,792,4.332,793,4.142,1236,6.984,1479,5.4,1897,6.282,1898,7.831,1899,7.831,1900,6.282,1901,7.831,1902,6.282,1903,6.282,1904,6.282,1905,6.282,1906,6.282,1907,5.602,1908,5.602,1909,5.602,1910,5.602]],["title/interfaces/OlxLayerLayerOptions.html",[285,0.374,1399,3.077]],["body/interfaces/OlxLayerLayerOptions.html",[2,0.044,3,0.066,4,0.03,8,0.136,9,0.283,13,0.249,16,2.036,20,0.006,21,0.884,22,0.678,27,0.24,29,1.642,32,0.052,34,1.608,42,0.004,43,0.004,285,0.712,292,1.613,294,1.762,404,5.281,416,4.17,450,1.233,453,3.345,493,3.524,528,1.021,647,5.281,858,3.083,1032,2.975,1049,4.278,1085,2.89,1102,4.099,1195,3.432,1196,2.725,1368,1.83,1390,4.411,1391,3.457,1392,2.982,1393,4.411,1394,3.318,1395,3.457,1396,3.457,1397,3.728,1398,3.842,1399,4.955,1400,5.502,1401,5.502,1402,3.194,1403,3.318,1404,3.318,1405,3.194]],["title/components/PositionComponent.html",[60,1.024,234,1.697]],["body/components/PositionComponent.html",[0,0.002,2,0.031,3,0.026,4,0.021,6,0.753,8,0.097,9,0.223,10,1.442,13,0.227,14,0.689,17,1.081,19,0.521,20,0.006,21,0.664,22,0.261,24,0.918,25,1.207,27,0.239,28,0.521,32,0.021,33,0.64,34,1.018,38,1.454,42,0.003,43,0.003,56,3.378,60,1.614,61,1.305,62,1.356,63,1.382,64,1.382,66,2.277,67,3.3,68,1.356,69,3.43,71,1.92,73,1.956,77,0.763,79,2.815,80,0.775,82,0.617,83,1.785,84,3.638,85,2.511,86,1.497,87,2.851,90,1.489,91,2.235,95,4.191,102,0.956,103,1.529,112,4.553,114,2.871,115,1.409,116,1.382,128,3.07,129,3.07,140,2.821,143,1.33,157,4.906,185,0.988,186,1.994,187,2.32,188,2.032,189,2.658,190,1.382,191,1.382,192,1.305,193,1.382,194,1.305,195,1.382,196,1.305,197,1.382,198,1.305,199,1.382,200,1.305,201,1.724,202,2.032,203,1.305,204,2.032,205,1.305,206,1.356,207,1.382,208,1.305,209,1.382,210,1.382,211,1.258,212,2.411,213,1.305,214,1.382,215,1.305,216,1.382,217,1.305,218,1.382,219,1.305,220,1.382,221,1.305,222,0.972,223,1.382,224,1.305,225,1.382,226,1.305,227,1.382,228,1.305,229,1.382,230,1.305,231,1.382,232,1.305,233,1.305,234,2.511,235,1.382,236,1.305,237,1.382,238,1.305,239,1.305,240,1.382,241,1.305,242,1.112,243,1.305,244,1.382,245,1.305,246,1.382,247,1.305,248,1.382,297,2.514,354,1.944,381,2.943,392,1.891,393,1.891,450,0.702,475,5.216,604,7.392,613,7.15,655,2.279,718,3.336,721,2.871,722,3.07,1038,2.579,1603,6.417,1604,6.417,1682,4.906,1683,3.07,1873,3.336,1911,3.74,1912,5.501,1913,5.501,1914,7.194,1915,7.194,1916,7.194,1917,5.501,1918,3.74,1919,3.74,1920,3.74,1921,3.74,1922,3.74,1923,3.74,1924,3.74,1925,3.74,1926,3.74,1927,4.222,1928,2.871,1929,3.74,1930,3.74,1931,3.74,1932,3.74,1933,5.501,1934,3.74,1935,3.74,1936,3.74,1937,3.74,1938,3.74,1939,3.74,1940,5.501,1941,5.501]],["title/components/PrintComponent.html",[60,1.024,236,1.697]],["body/components/PrintComponent.html",[0,0.003,2,0.042,3,0.035,4,0.029,6,0.932,8,0.131,14,0.964,17,0.823,20,0.006,21,0.693,27,0.146,32,0.029,34,1.26,38,1.799,42,0.004,43,0.004,56,3.44,60,1.808,61,1.767,62,1.835,63,1.871,64,1.871,66,2.685,68,1.835,69,3.508,71,2.376,73,2.421,77,1.032,80,1.049,82,0.836,83,2.209,85,2.871,90,1.155,91,1.734,102,1.295,143,1.8,185,1.338,186,2.468,187,2.421,188,2.516,189,3.04,190,1.871,191,1.871,192,1.767,193,1.871,194,1.767,195,1.871,196,1.767,197,1.871,198,1.767,199,1.871,200,1.767,201,2.033,202,2.516,203,1.767,204,2.516,205,1.767,206,1.835,207,1.871,208,1.767,209,1.871,210,1.871,211,1.703,212,2.843,213,1.767,214,1.871,215,1.767,216,1.871,217,1.767,218,1.871,219,1.767,220,1.871,221,1.767,222,1.316,223,1.871,224,1.767,225,1.871,226,1.767,227,1.871,228,1.767,229,1.871,230,1.767,231,1.871,232,1.767,233,1.767,234,1.767,235,1.871,236,2.871,237,1.871,238,1.767,239,1.767,240,1.871,241,1.767,242,1.505,243,1.767,244,1.871,245,1.767,246,1.871,247,1.767,248,1.871,465,5.226,999,4.277,1942,5.063,1943,6.809,1944,6.809,1945,5.063,1946,5.063]],["title/modules/PrintModule.html",[249,1.729,1947,3.525]],["body/modules/PrintModule.html",[0,0.004,2,0.056,3,0.047,4,0.039,20,0.006,27,0.264,32,0.052,42,0.005,43,0.005,82,1.352,102,1.728,185,1.786,236,3.472,249,2.913,251,3.514,252,5.014,253,3.726,254,3.845,258,2.274,259,3.329,261,4.818,262,3.845,263,4.66,1947,6.998,1948,6.029,1949,6.029,1950,6.029,1951,6.76,1952,6.76]],["title/classes/Reset.html",[0,0.003,258,1.635]],["body/classes/Reset.html",[0,0.006,2,0.031,3,0.026,4,0.021,6,1.286,7,1.585,8,0.096,9,0.222,11,2.222,12,2.226,13,0.261,14,0.812,17,0.659,20,0.006,24,0.472,25,0.916,27,0.157,28,0.516,32,0.056,33,1.087,37,2.117,39,2.222,42,0.003,43,0.003,46,0.767,70,3.9,77,1.322,79,2.322,80,1.483,82,1.07,106,1.341,107,1.367,110,1.513,154,1.244,258,2.778,288,1.869,293,1.545,294,1.261,296,2.498,298,1.221,303,1.119,528,0.944,1422,2.016,1423,2.016,1424,2.016,1425,2.016,1953,1.776,1954,5.458,1955,2.688,1956,2.688,1957,2.688,1958,3.193,1959,2.688,1960,2.688,1961,2.688,1962,2.688,1963,2.688,1964,2.688,1965,2.688,1966,2.688,1967,2.688,1968,2.688,1969,2.688,1970,2.688,1971,2.555,1972,2.555,1973,2.555,1974,2.555,1975,2.555,1976,2.555,1977,2.555,1978,2.555,1979,2.555,1980,2.555,1981,2.555,1982,2.555,1983,2.555,1984,2.555,1985,2.555]],["title/classes/ResetMode.html",[0,0.003,1986,3.353]],["body/classes/ResetMode.html",[0,0.006,2,0.049,3,0.041,4,0.033,6,1.231,7,1.543,8,0.152,9,0.304,11,1.977,12,2.168,13,0.259,14,1.034,17,0.904,20,0.006,24,0.746,25,0.98,27,0.238,28,0.814,30,2.995,31,2.34,32,0.055,33,1.013,34,1.082,37,1.883,39,1.977,42,0.005,43,0.005,258,1.966,347,4.796,352,3.109,370,4.559,386,4.03,387,3.221,416,2.805,528,0.668,955,3.889,965,3.591,991,3.684,992,3.341,1986,5.691,1987,4.237,1988,7.482,1989,6.333,1990,5.742,1991,5.16]],["title/components/RotationButtonComponent.html",[60,1.024,238,1.697]],["body/components/RotationButtonComponent.html",[0,0.002,2,0.028,3,0.024,4,0.019,6,0.695,8,0.087,9,0.206,13,0.211,14,0.421,17,1.038,19,0.852,20,0.006,21,0.745,22,0.427,24,0.647,25,0.851,27,0.243,28,0.468,32,0.019,33,0.712,34,0.939,38,1.341,42,0.003,43,0.003,56,3.328,60,1.542,61,1.171,62,1.216,63,1.24,64,1.24,66,2.135,67,3.094,68,1.216,69,3.397,71,1.771,73,1.804,77,0.684,80,1.854,82,0.554,83,1.646,84,3.448,85,2.38,86,1.344,87,2.739,90,1.758,91,2.336,93,2.91,95,3.448,102,0.858,103,1.372,110,1.372,111,2.754,113,2.213,114,2.576,115,1.265,116,1.24,117,1.499,119,1.499,130,2.994,131,2.994,140,3.021,143,2.175,147,3.092,148,2.266,185,0.887,186,1.839,187,1.804,188,1.875,189,2.519,190,1.24,191,1.24,192,1.171,193,1.24,194,1.171,195,1.24,196,1.171,197,1.24,198,1.171,199,1.24,200,1.171,201,1.617,202,1.875,203,1.171,204,1.875,205,1.171,206,1.216,207,1.24,208,1.171,209,1.24,210,1.24,211,1.129,212,2.26,213,1.171,214,1.24,215,1.171,216,1.24,217,1.171,218,1.24,219,1.171,220,1.24,221,1.171,222,0.872,223,1.24,224,1.171,225,1.24,226,1.171,227,1.24,228,1.171,229,1.24,230,1.171,231,1.24,232,1.171,233,1.171,234,1.171,235,1.24,236,1.171,237,1.24,238,2.38,239,1.171,240,1.24,241,1.171,242,0.998,243,1.171,244,1.24,245,1.171,246,1.24,247,1.171,248,1.24,278,7.786,294,1.291,312,2.319,354,3.18,362,2.887,384,1.909,385,1.697,390,3.48,392,3.094,393,3.094,402,3.598,450,0.428,475,4.944,487,1.85,504,3.894,505,2.433,506,4.435,515,2.576,646,3.728,674,3.211,676,3.679,721,2.576,744,4.164,862,1.745,909,2.433,920,3.679,921,3.679,1038,2.315,1412,2.124,1686,4.164,1857,2.994,1927,3.894,1928,2.576,1992,8.73,1993,6.082,1994,6.819,1995,5.074,1996,5.074,1997,6.819,1998,5.074,1999,5.074,2000,3.356,2001,5.074,2002,3.356,2003,4.526,2004,3.356,2005,3.356,2006,3.356,2007,3.356,2008,2.994,2009,3.356,2010,5.074,2011,3.356,2012,7.323,2013,3.356,2014,3.356,2015,3.356,2016,3.356,2017,3.356,2018,3.356,2019,4.526,2020,2.754,2021,3.356,2022,3.356,2023,3.356,2024,3.356]],["title/components/ScalebarComponent.html",[60,1.024,239,1.697]],["body/components/ScalebarComponent.html",[0,0.003,2,0.034,3,0.028,4,0.023,6,0.8,8,0.105,9,0.237,13,0.205,14,0.509,17,1.027,19,0.566,20,0.006,21,0.696,22,0.284,24,0.745,25,0.98,27,0.245,28,0.566,32,0.023,33,0.473,34,1.081,38,1.544,42,0.004,43,0.004,46,1.802,50,2.112,56,3.385,60,1.669,61,1.418,62,1.473,63,1.501,64,1.501,66,2.387,67,3.459,68,1.473,69,3.453,71,2.039,73,2.077,77,0.828,80,0.842,82,0.671,83,1.895,84,3.783,85,2.61,86,1.627,87,2.934,90,1.561,91,2.343,95,3.783,102,1.039,103,1.661,115,1.531,116,1.501,117,1.814,140,3.108,143,1.445,148,1.814,154,1.965,185,1.074,186,2.117,187,2.077,188,2.159,189,2.764,190,1.501,191,1.501,192,1.418,193,1.501,194,1.418,195,1.501,196,1.418,197,1.501,198,1.418,199,1.501,200,1.418,201,1.808,202,2.159,203,1.418,204,2.159,205,1.418,206,1.473,207,1.501,208,1.418,209,1.501,210,1.501,211,1.367,212,2.528,213,1.418,214,1.501,215,1.418,216,1.501,217,1.418,218,1.501,219,1.418,220,1.501,221,1.418,222,1.056,223,1.501,224,1.418,225,1.501,226,1.418,227,1.501,228,1.418,229,1.501,230,1.418,231,1.501,232,1.418,233,1.418,234,1.418,235,1.501,236,1.418,237,1.501,238,1.418,239,2.61,240,1.501,241,1.418,242,1.208,243,1.418,244,1.501,245,1.418,246,1.501,247,1.418,248,1.501,312,1.857,384,2.311,385,2.055,389,2.802,390,2.311,392,2.055,393,2.055,402,3.436,450,0.873,475,5.423,487,2.24,504,3.118,506,2.946,515,3.118,674,2.571,676,2.946,1416,5.015,1597,6.101,1607,6.671,1649,3.624,1686,3.335,1768,2.946,2020,3.335,2025,4.063,2026,5.842,2027,5.842,2028,5.842,2029,4.063,2030,4.063,2031,4.063,2032,4.063,2033,4.063,2034,5.842,2035,4.063,2036,4.063,2037,4.063,2038,4.063,2039,4.063,2040,4.063,2041,4.063,2042,4.063]],["title/classes/SetCollapsible.html",[0,0.003,2043,2.963]],["body/classes/SetCollapsible.html",[0,0.006,2,0.042,3,0.035,4,0.029,6,1.257,7,1.561,8,0.131,9,0.276,10,1.503,11,2.252,12,2.192,13,0.263,14,0.852,15,1.271,17,0.929,19,0.704,20,0.006,21,0.514,22,0.353,24,0.645,25,0.848,27,0.146,28,0.704,32,0.055,33,1.051,37,2.017,39,2.117,42,0.004,43,0.004,242,2.729,249,1.797,352,1.905,450,0.981,496,2.024,528,1.032,530,1.271,543,2.556,952,2.465,963,2.207,991,3.35,992,3.037,1101,2.556,1110,4.882,1335,2.704,1518,4,2043,4.684,2044,3.199,2045,6.802,2046,5.055,2047,5.069,2048,4.485,2049,4.485,2050,4.485,2051,4.144,2052,4.144]],["title/classes/SetConfig.html",[0,0.003,1517,3.732]],["body/classes/SetConfig.html",[0,0.005,2,0.054,3,0.046,4,0.037,6,1.097,7,1.455,8,0.169,9,0.325,10,1.77,11,2.225,12,2.045,13,0.262,14,0.817,15,1.64,17,1.048,19,0.908,20,0.006,21,0.663,22,0.455,24,0.832,25,1.094,27,0.231,28,0.908,32,0.05,33,0.759,37,1.488,39,1.562,42,0.005,43,0.005,75,3.846,108,5.059,109,3.972,1333,4.726,1517,6.658,2053,5.814,2054,8.012,2055,6.519,2056,8.675]],["title/classes/SetDictionary.html",[0,0.003,969,1.988]],["body/classes/SetDictionary.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,4.163,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.231,953,3.62,954,2.487,955,3.199,956,3.62,957,3.62,958,3.62,959,2.047,960,3.181,961,3.62,962,2.319,963,1.997,964,3.393,965,2.954,966,3.393,967,3.393,968,3.393,969,2.912,970,3.393,2057,6.155,2058,4.372]],["title/classes/SetDictionary-1.html",[0,0.003,862,2.113,969,1.662]],["body/classes/SetDictionary-1.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.816,39,2.103,42,0.004,43,0.004,222,2.343,296,1.638,298,0.924,450,0.691,528,0.909,529,1.583,530,1.362,951,2.974,952,2.581,960,3.553,962,2.683,963,2.31,969,3.252,971,4.188,972,3.735,975,5.163,976,5.127,977,3.927,978,5.163,979,3.735,980,3.927,981,4.339,982,3.3,2059,7.122,2060,5.416]],["title/classes/SetDictionary-2.html",[0,0.003,304,2.477,969,1.662]],["body/classes/SetDictionary-2.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.929,38,2.382,39,2.103,42,0.004,43,0.004,298,0.924,352,2.041,450,0.691,528,0.814,529,1.583,530,1.362,951,2.974,952,2.581,960,3.553,962,2.683,963,2.31,969,3.252,983,4.051,984,3.735,987,5.163,988,4.12,989,3.925,990,3.927,991,3.507,992,3.18,993,2.986,2061,7.122,2062,5.416]],["title/classes/SetDisabled.html",[0,0.003,962,1.832]],["body/classes/SetDisabled.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.112,528,0.966,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.975,952,2.231,953,3.62,954,2.487,955,3.199,956,3.62,957,3.62,958,3.62,959,2.047,960,2.748,961,3.62,962,2.684,963,1.997,964,3.393,965,2.954,966,3.393,967,3.393,968,3.393,969,2.516,970,3.393,2063,6.155,2064,4.372]],["title/classes/SetDisabled-1.html",[0,0.003,862,2.113,962,1.532]],["body/classes/SetDisabled-1.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.816,39,2.103,42,0.004,43,0.004,222,2.343,296,1.638,298,0.924,450,0.691,528,1.05,529,1.583,530,1.362,951,3.323,952,2.581,960,3.18,962,2.998,963,2.31,969,2.911,971,4.188,972,3.735,975,5.163,976,4.051,977,3.927,978,5.163,979,3.735,980,3.927,981,4.339,982,3.3,2065,7.122,2066,5.416]],["title/classes/SetDisabled-2.html",[0,0.003,304,2.477,962,1.532]],["body/classes/SetDisabled-2.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.929,38,2.382,39,2.103,42,0.004,43,0.004,298,0.924,352,2.041,450,0.691,528,1.03,529,1.583,530,1.362,951,3.323,952,2.581,960,3.18,962,2.998,963,2.31,969,2.911,983,4.051,984,3.735,987,5.163,988,3.255,989,3.925,990,3.927,991,3.507,992,3.18,993,2.986,2067,7.122,2068,5.416]],["title/classes/SetDisabled-3.html",[0,0.003,962,1.532,2069,3.12]],["body/classes/SetDisabled-3.html",[0,0.006,2,0.05,3,0.042,4,0.034,6,1.201,7,1.519,8,0.155,9,0.308,10,1.677,11,2.252,12,2.135,13,0.263,14,0.749,15,1.504,17,1.008,19,0.833,20,0.006,21,0.608,22,0.418,24,0.763,25,1.003,27,0.172,28,0.833,32,0.054,33,0.971,37,1.732,39,1.998,42,0.005,43,0.005,450,0.763,528,1.058,529,1.747,530,1.504,951,3.483,952,2.751,962,3.143,963,2.463,994,5.005,995,4.589,998,6.23,999,4.561,1000,4.123,2070,7.591,2071,5.979]],["title/classes/SetFullscreenDictionary.html",[0,0.003,1985,2.277]],["body/classes/SetFullscreenDictionary.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,0.937,1422,1.983,1423,2.927,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,3.151,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.996,2072,5.368,2073,3.618]],["title/classes/SetHasSidebar.html",[0,0.003,1518,2.86]],["body/classes/SetHasSidebar.html",[0,0.006,2,0.042,3,0.035,4,0.029,6,1.257,7,1.561,8,0.131,9,0.276,10,1.503,11,2.252,12,2.192,13,0.263,14,0.852,15,1.271,17,0.929,19,0.704,20,0.006,21,0.514,22,0.353,24,0.645,25,0.848,27,0.146,28,0.704,32,0.055,33,1.051,37,2.017,39,2.117,42,0.004,43,0.004,242,2.729,249,1.797,352,1.905,450,0.981,496,2.024,528,1.032,530,1.271,543,2.556,952,2.465,963,2.207,991,3.35,992,3.037,1101,2.556,1110,4.882,1335,2.704,1518,4.521,2043,4.144,2044,3.199,2047,4.485,2048,5.069,2049,4.485,2050,4.485,2051,4.144,2052,4.144,2074,6.802,2075,5.055]],["title/classes/SetHoverColor.html",[0,0.003,970,2.68]],["body/classes/SetHoverColor.html",[0,0.006,2,0.036,3,0.03,4,0.025,6,1.262,7,1.561,8,0.112,9,0.248,10,1.349,11,2.263,12,2.193,13,0.262,14,0.542,15,1.087,16,2.069,17,0.855,19,0.602,20,0.006,21,0.44,22,0.302,24,0.552,25,0.725,27,0.234,28,0.602,29,1.354,30,2.445,31,1.731,32,0.056,33,1.061,34,1.31,37,2.052,39,2.183,42,0.005,43,0.004,201,2.435,294,1.684,298,0.737,364,3.09,373,1.887,427,2.247,450,0.552,489,2.075,491,3.007,496,1.731,527,3.088,528,0.698,529,1.263,530,1.087,637,2.459,946,2.459,949,3.591,950,2.543,951,2.55,952,2.213,953,3.591,954,2.459,955,3.174,956,3.591,957,3.591,958,3.591,959,2.024,960,2.727,961,4.164,962,2.301,963,1.981,964,3.366,965,2.931,966,3.366,967,3.366,968,3.366,969,2.496,970,3.903,2076,6.107,2077,4.323]],["title/classes/SetLayer.html",[0,0.003,965,2.334]],["body/classes/SetLayer.html",[0,0.006,2,0.047,3,0.04,4,0.032,6,1.218,7,1.529,8,0.146,9,0.297,10,1.616,11,2.222,12,2.148,13,0.262,14,0.916,15,1.419,17,0.981,19,0.786,20,0.006,21,0.574,22,0.394,24,0.72,25,0.947,27,0.234,28,0.786,30,3.649,31,2.259,32,0.054,33,1,34,1.044,37,1.852,39,1.944,42,0.005,43,0.005,258,1.898,347,4.733,352,3.058,370,4.457,386,3.891,387,3.11,416,2.708,528,0.645,955,4.219,965,3.896,991,3.602,992,3.266,1986,5.044,1987,4.091,1989,5.614,1990,5.614,1991,5.044,2078,7.314,2079,5.643]],["title/classes/SetLayers.html",[0,0.003,965,2.334]],["body/classes/SetLayers.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.538,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.231,953,3.62,954,2.487,955,3.703,956,3.62,957,3.62,958,3.62,959,2.047,960,2.748,961,3.62,962,2.319,963,1.997,964,3.393,965,3.419,966,3.393,967,3.393,968,3.393,969,2.516,970,3.393,2080,6.155,2081,4.372]],["title/classes/SetMaxFeatures.html",[0,0.003,964,2.68]],["body/classes/SetMaxFeatures.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.563,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.231,953,4.189,954,2.487,955,3.199,956,3.62,957,3.62,958,3.62,959,2.047,960,2.748,961,3.62,962,2.319,963,1.997,964,3.926,965,2.954,966,3.393,967,3.393,968,3.393,969,2.516,970,3.393,2082,6.155,2083,4.372]],["title/classes/SetMeasureLayer.html",[0,0.003,40,3.732]],["body/classes/SetMeasureLayer.html",[0,0.005,1,5.935,2,0.051,3,0.043,4,0.035,5,5.053,6,1.158,7,1.488,8,0.16,9,0.314,10,1.709,11,2.234,12,2.09,13,0.262,14,0.771,15,1.549,16,2.259,17,1.021,19,0.858,20,0.006,21,0.626,22,0.43,24,0.785,25,1.033,26,6.897,27,0.244,28,0.858,29,1.928,30,3.733,31,2.465,32,0.052,33,0.9,34,1.641,35,3.896,36,7.54,37,1.405,38,1.627,39,1.852,40,6.489,41,4.464,42,0.005,43,0.005,2084,7.733,2085,6.157]],["title/classes/SetMode.html",[0,0.003,992,2.171]],["body/classes/SetMode.html",[0,0.006,2,0.047,3,0.04,4,0.032,6,1.218,7,1.529,8,0.146,9,0.297,10,1.616,11,2.222,12,2.148,13,0.262,14,0.916,15,1.419,17,0.981,19,0.786,20,0.006,21,0.574,22,0.394,24,0.72,25,0.947,27,0.234,28,0.786,30,2.928,31,2.259,32,0.054,33,1,34,1.044,37,1.852,39,1.944,42,0.005,43,0.005,258,1.898,347,4.733,352,3.058,370,5.554,386,3.891,387,3.11,416,2.708,528,0.645,955,3.802,965,3.511,991,3.997,992,3.624,1986,5.044,1987,4.091,1989,5.614,1990,5.614,1991,5.044,2086,7.314,2087,5.643]],["title/classes/SetMode-1.html",[0,0.003,862,2.113,992,1.815]],["body/classes/SetMode-1.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.929,38,2.382,39,2.103,42,0.004,43,0.004,298,0.924,352,2.041,450,0.691,528,0.814,529,1.583,530,1.362,951,2.974,952,2.581,960,3.18,962,2.683,963,2.31,969,2.911,983,4.051,984,3.735,987,5.163,988,3.255,989,4.968,990,3.927,991,3.918,992,3.553,993,2.986,2088,7.122,2089,5.416]],["title/classes/SetMode-2.html",[0,0.003,304,2.477,992,1.815]],["body/classes/SetMode-2.html",[0,0.006,2,0.042,3,0.035,4,0.029,6,1.257,7,1.561,8,0.131,9,0.276,10,1.503,11,2.252,12,2.192,13,0.263,14,0.852,15,1.271,17,0.929,19,0.704,20,0.006,21,0.514,22,0.353,24,0.645,25,0.848,27,0.146,28,0.704,32,0.055,33,1.051,37,2.017,39,2.117,42,0.004,43,0.004,242,2.729,249,1.797,352,1.905,450,1.152,496,2.024,528,0.878,530,1.271,543,2.556,952,2.465,963,2.207,991,3.786,992,3.432,1101,2.556,1110,4.882,1335,2.704,1518,4,2043,4.144,2044,3.199,2047,4.485,2048,4.485,2049,4.485,2050,4.485,2051,4.144,2052,4.144,2090,6.802,2091,5.055]],["title/classes/SetOpened.html",[0,0.003,2051,2.963]],["body/classes/SetOpened.html",[0,0.006,2,0.042,3,0.035,4,0.029,6,1.257,7,1.561,8,0.131,9,0.276,10,1.503,11,2.252,12,2.192,13,0.263,14,0.852,15,1.271,17,0.929,19,0.704,20,0.006,21,0.514,22,0.353,24,0.645,25,0.848,27,0.146,28,0.704,32,0.055,33,1.051,37,2.017,39,2.117,42,0.004,43,0.004,242,2.729,249,1.797,352,1.905,450,0.981,496,2.024,528,1.032,530,1.271,543,2.556,952,2.465,963,2.207,991,3.35,992,3.037,1101,2.556,1110,4.882,1335,2.704,1518,4,2043,4.144,2044,3.199,2047,4.485,2048,4.485,2049,5.069,2050,4.485,2051,4.684,2052,4.144,2092,6.802,2093,5.055]],["title/classes/SetPositionCoordinates.html",[0,0.003,1977,2.277]],["body/classes/SetPositionCoordinates.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.281,7,1.578,8,0.093,9,0.217,10,1.182,11,2.265,12,2.217,13,0.262,14,0.67,15,0.906,17,0.771,19,0.502,20,0.006,21,0.366,22,0.252,24,0.459,25,0.897,27,0.154,28,0.502,32,0.056,33,1.083,37,2.107,39,2.212,42,0.003,43,0.003,46,0.746,70,3.883,77,1.301,79,2.291,80,1.463,82,1.053,106,1.305,107,1.331,110,1.472,154,1.211,258,2.538,288,1.832,293,1.504,294,1.583,296,2.476,298,1.205,303,1.089,528,0.936,1422,1.976,1423,1.976,1424,1.976,1425,1.976,1953,1.729,1955,2.634,1956,2.634,1957,2.634,1958,3.143,1959,2.634,1960,2.634,1961,2.634,1962,3.143,1963,2.634,1964,2.634,1965,2.634,1966,2.634,1967,2.634,1968,2.634,1969,2.634,1970,2.634,1971,2.505,1972,2.505,1973,2.505,1974,2.505,1975,2.505,1976,2.505,1977,2.988,1978,2.505,1979,2.505,1980,2.505,1981,2.505,1982,2.505,1983,2.505,1984,2.505,1985,2.505,2094,5.35,2095,3.602]],["title/classes/SetPositionDictionary.html",[0,0.003,1978,2.277]],["body/classes/SetPositionDictionary.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,0.937,1422,1.983,1423,1.983,1424,2.927,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,3.151,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.996,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2096,5.368,2097,3.618]],["title/classes/SetPositionPrecision.html",[0,0.003,1976,2.277]],["body/classes/SetPositionPrecision.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.484,296,2.48,298,1.207,303,1.094,528,0.937,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,3.151,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.996,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2098,5.368,2099,3.618]],["title/classes/SetResultsItems.html",[0,0.003,968,2.68]],["body/classes/SetResultsItems.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.79,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.231,953,3.62,954,2.487,955,3.199,956,3.62,957,3.62,958,4.189,959,2.047,960,2.748,961,3.62,962,2.319,963,1.997,964,3.393,965,2.954,966,3.393,967,3.393,968,3.926,969,2.516,970,3.393,2100,6.155,2101,4.372]],["title/classes/SetResultsLayer.html",[0,0.003,967,2.68]],["body/classes/SetResultsLayer.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,3.384,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.231,953,3.62,954,2.487,955,3.199,956,3.62,957,4.189,958,3.62,959,2.047,960,2.748,961,3.62,962,2.319,963,1.997,964,3.393,965,2.954,966,3.393,967,3.926,968,3.393,969,2.516,970,3.393,2102,6.155,2103,4.372]],["title/classes/SetRotationDictionary.html",[0,0.003,1980,2.277]],["body/classes/SetRotationDictionary.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,0.937,1422,1.983,1423,1.983,1424,1.983,1425,2.927,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,3.151,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.996,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2104,5.368,2105,3.618]],["title/classes/SetRotationValue.html",[0,0.003,1982,2.277]],["body/classes/SetRotationValue.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.484,296,2.48,298,1.207,303,1.094,528,0.937,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,3.151,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.996,1983,2.513,1984,2.513,1985,2.513,2106,5.368,2107,3.618]],["title/classes/SetScalebar.html",[0,0.003,1974,2.277]],["body/classes/SetScalebar.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,2.714,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,0.937,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,3.151,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.996,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2108,5.368,2109,3.618]],["title/classes/SetSelectedLayer.html",[0,0.003,966,2.68]],["body/classes/SetSelectedLayer.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.538,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,0.558,489,2.099,491,3.031,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.231,953,3.62,954,2.487,955,3.199,956,4.189,957,3.62,958,3.62,959,2.047,960,2.748,961,3.62,962,2.319,963,1.997,964,3.393,965,2.954,966,3.926,967,3.393,968,3.393,969,2.516,970,3.393,2110,6.155,2111,4.372]],["title/classes/SetSelectedModule.html",[0,0.003,2052,2.963]],["body/classes/SetSelectedModule.html",[0,0.006,2,0.042,3,0.035,4,0.029,6,1.257,7,1.561,8,0.131,9,0.276,10,1.503,11,2.252,12,2.192,13,0.263,14,0.852,15,1.271,17,0.929,19,0.704,20,0.006,21,0.514,22,0.353,24,0.645,25,0.848,27,0.146,28,0.704,32,0.055,33,1.051,37,2.017,39,2.117,42,0.004,43,0.004,242,2.729,249,1.797,352,1.905,450,1.152,496,2.024,528,0.878,530,1.271,543,2.556,952,2.465,963,2.207,991,3.35,992,3.037,1101,2.556,1110,4.882,1335,2.704,1518,4,2043,4.144,2044,3.199,2047,4.485,2048,4.485,2049,4.485,2050,5.069,2051,4.144,2052,4.684,2112,6.802,2113,5.055]],["title/classes/SetShowFullscreen.html",[0,0.003,1983,2.277]],["body/classes/SetShowFullscreen.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,3.151,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.996,1984,2.513,1985,2.513,2114,5.368,2115,3.618]],["title/classes/SetShowFullscreenTooltip.html",[0,0.003,1984,2.277]],["body/classes/SetShowFullscreenTooltip.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,3.151,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.996,1985,2.513,2116,5.368,2117,3.618]],["title/classes/SetShowPosition.html",[0,0.003,1975,2.277]],["body/classes/SetShowPosition.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,3.151,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.996,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2118,5.368,2119,3.618]],["title/classes/SetShowRotation.html",[0,0.003,1979,2.277]],["body/classes/SetShowRotation.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,3.151,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.996,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2120,5.368,2121,3.618]],["title/classes/SetShowRotationTooltip.html",[0,0.003,1981,2.277]],["body/classes/SetShowRotationTooltip.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,3.151,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.996,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2122,5.368,2123,3.618]],["title/classes/SetShowTooltip.html",[0,0.003,1973,2.277]],["body/classes/SetShowTooltip.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,2.643,1957,3.151,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.513,1973,2.996,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2124,5.368,2125,3.618]],["title/classes/SetShowZoom.html",[0,0.003,1971,2.277]],["body/classes/SetShowZoom.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,1.015,1422,1.983,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,3.151,1956,2.643,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.996,1972,2.513,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2126,5.368,2127,3.618]],["title/classes/SetTitle.html",[0,0.003,963,1.577]],["body/classes/SetTitle.html",[0,0.006,2,0.036,3,0.031,4,0.025,6,1.265,7,1.564,8,0.113,9,0.25,10,1.36,11,2.267,12,2.198,13,0.262,14,0.548,15,1.1,16,2.081,17,0.861,19,0.609,20,0.006,21,0.445,22,0.305,24,0.558,25,0.733,27,0.235,28,0.609,29,1.369,30,2.464,31,1.75,32,0.056,33,1.064,34,1.318,37,2.057,39,2.188,42,0.005,43,0.004,201,2.441,294,1.363,298,0.746,364,3.109,373,1.908,427,2.273,450,1.04,489,2.099,491,3.031,496,1.75,527,3.112,528,0.703,529,1.277,530,1.1,637,2.487,946,2.487,949,3.62,950,2.571,951,2.57,952,2.582,953,3.62,954,2.487,955,3.199,956,3.62,957,3.62,958,3.62,959,2.047,960,2.748,961,3.62,962,2.319,963,2.311,964,3.393,965,2.954,966,3.393,967,3.393,968,3.393,969,2.516,970,3.393,2128,6.155,2129,4.372]],["title/classes/SetTitle-1.html",[0,0.003,862,2.113,963,1.319]],["body/classes/SetTitle-1.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.816,39,2.103,42,0.004,43,0.004,222,2.343,296,1.638,298,0.924,450,1.12,528,0.909,529,1.583,530,1.362,951,2.974,952,2.884,960,3.18,962,2.683,963,2.581,969,2.911,971,4.188,972,3.735,975,5.163,976,4.051,977,3.927,978,5.163,979,3.735,980,3.927,981,4.339,982,3.3,2130,7.122,2131,5.416]],["title/classes/SetTitle-2.html",[0,0.003,304,2.477,963,1.319]],["body/classes/SetTitle-2.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.929,38,2.382,39,2.103,42,0.004,43,0.004,298,0.924,352,2.041,450,1.12,528,0.814,529,1.583,530,1.362,951,2.974,952,2.884,960,3.18,962,2.683,963,2.581,969,2.911,983,4.051,984,3.735,987,5.163,988,3.255,989,3.925,990,3.927,991,3.507,992,3.18,993,2.986,2132,7.122,2133,5.416]],["title/classes/SetTitle-3.html",[0,0.003,963,1.319,2069,3.12]],["body/classes/SetTitle-3.html",[0,0.006,2,0.05,3,0.042,4,0.034,6,1.201,7,1.519,8,0.155,9,0.308,10,1.677,11,2.252,12,2.135,13,0.263,14,0.749,15,1.504,17,1.008,19,0.833,20,0.006,21,0.608,22,0.418,24,0.763,25,1.003,27,0.172,28,0.833,32,0.054,33,0.971,37,1.732,39,1.998,42,0.005,43,0.005,450,1.155,528,0.867,529,1.747,530,1.504,951,3.17,952,3.023,962,2.86,963,2.706,994,5.005,995,4.589,998,6.23,999,4.561,1000,4.123,2134,7.591,2135,5.979]],["title/classes/SetTitle-4.html",[0,0.003,963,1.319,1720,3.12]],["body/classes/SetTitle-4.html",[0,0.006,2,0.042,3,0.035,4,0.029,6,1.257,7,1.561,8,0.131,9,0.276,10,1.503,11,2.252,12,2.192,13,0.263,14,0.852,15,1.271,17,0.929,19,0.704,20,0.006,21,0.514,22,0.353,24,0.645,25,0.848,27,0.146,28,0.704,32,0.055,33,1.051,37,2.017,39,2.117,42,0.004,43,0.004,242,2.729,249,1.797,352,1.905,450,1.152,496,2.024,528,0.878,530,1.271,543,2.556,952,2.786,963,2.494,991,3.35,992,3.037,1101,2.556,1110,4.882,1335,2.704,1518,4,2043,4.144,2044,3.199,2047,4.485,2048,4.485,2049,4.485,2050,4.485,2051,4.144,2052,4.144,2136,6.802,2137,5.055]],["title/classes/SetVisible.html",[0,0.003,1991,3.353]],["body/classes/SetVisible.html",[0,0.006,2,0.047,3,0.04,4,0.032,6,1.218,7,1.529,8,0.146,9,0.297,10,1.616,11,2.222,12,2.148,13,0.262,14,0.916,15,1.419,17,0.981,19,0.786,20,0.006,21,0.574,22,0.394,24,0.72,25,0.947,27,0.234,28,0.786,30,2.928,31,2.259,32,0.054,33,1,34,1.044,37,1.852,39,1.944,42,0.005,43,0.005,258,1.898,347,4.733,352,3.058,370,4.457,386,3.891,387,3.11,416,2.708,528,1.016,955,3.802,965,3.511,991,3.602,992,3.266,1986,5.044,1987,4.091,1989,5.614,1990,6.229,1991,5.597,2138,7.314,2139,5.643]],["title/classes/SetZoomDictionary.html",[0,0.003,1972,2.277]],["body/classes/SetZoomDictionary.html",[0,0.006,2,0.03,3,0.025,4,0.021,6,1.282,7,1.579,8,0.094,9,0.218,10,1.186,11,2.266,12,2.219,13,0.262,14,0.673,15,0.91,17,0.773,19,0.504,20,0.006,21,0.368,22,0.253,24,0.462,25,0.901,27,0.155,28,0.504,32,0.056,33,1.083,37,2.109,39,2.213,42,0.003,43,0.003,46,0.75,70,3.886,77,1.305,79,2.297,80,1.467,82,1.056,106,1.311,107,1.337,110,1.479,154,1.217,258,2.543,288,1.839,293,1.511,294,1.248,296,2.48,298,1.207,303,1.094,528,0.937,1422,2.927,1423,1.983,1424,1.983,1425,1.983,1953,1.737,1955,2.643,1956,3.151,1957,2.643,1958,3.151,1959,2.643,1960,2.643,1961,2.643,1962,2.643,1963,2.643,1964,2.643,1965,2.643,1966,2.643,1967,2.643,1968,2.643,1969,2.643,1970,2.643,1971,2.513,1972,2.996,1973,2.513,1974,2.513,1975,2.513,1976,2.513,1977,2.513,1978,2.513,1979,2.513,1980,2.513,1981,2.513,1982,2.513,1983,2.513,1984,2.513,1985,2.513,2140,5.368,2141,3.618]],["title/modules/SharedModule.html",[249,1.729,564,3.353]],["body/modules/SharedModule.html",[0,0.004,2,0.054,3,0.046,4,0.037,20,0.006,27,0.268,32,0.052,42,0.005,43,0.005,82,1.324,102,1.67,185,1.726,249,2.853,251,3.396,252,4.939,253,3.601,254,4.939,258,2.197,259,3.217,261,4.718,262,3.716,263,4.564,478,6.86,564,6.726,2142,5.826,2143,5.826,2144,5.826,2145,5.826,2146,7.602,2147,6.533,2148,6.533,2149,6.533]],["title/pipes/ShortenPipe.html",[674,3.077,2146,3.732]],["body/pipes/ShortenPipe.html",[0,0.004,2,0.056,3,0.047,4,0.039,6,0.924,13,0.185,17,0.815,19,0.94,20,0.006,21,0.896,22,0.471,25,1.373,27,0.194,32,0.039,42,0.005,43,0.005,68,2.445,83,2.188,90,2.01,102,1.725,294,1.552,450,1.123,674,5.573,2003,6.016,2146,6.279,2150,6.745,2151,8.181,2152,8.181,2153,9.379,2154,6.745,2155,8.181,2156,6.745,2157,6.745]],["title/classes/ShowLayergroupBadges.html",[0,0.003,981,2.963]],["body/classes/ShowLayergroupBadges.html",[0,0.006,2,0.045,3,0.038,4,0.031,6,1.234,7,1.541,8,0.141,9,0.289,10,1.574,11,2.259,12,2.165,13,0.263,14,0.679,15,1.362,17,0.961,19,0.755,20,0.006,21,0.551,22,0.378,24,0.691,25,0.909,27,0.205,28,0.755,32,0.055,33,1.022,37,1.816,39,2.103,42,0.004,43,0.004,222,2.343,296,1.638,298,0.924,450,0.691,528,1.05,529,1.583,530,1.362,951,2.974,952,2.581,960,3.18,962,2.683,963,2.31,969,2.911,971,4.188,972,3.735,975,5.163,976,4.051,977,3.927,978,5.768,979,3.735,980,3.927,981,4.848,982,3.3,2158,7.122,2159,5.416]],["title/components/SidebarButtonComponent.html",[60,1.024,241,1.697]],["body/components/SidebarButtonComponent.html",[0,0.003,2,0.037,3,0.031,4,0.026,6,0.856,8,0.116,9,0.254,13,0.171,14,0.56,17,0.943,19,0.623,20,0.006,21,0.734,22,0.312,27,0.245,28,0.623,32,0.026,34,1.157,38,1.653,42,0.004,43,0.004,56,3.41,60,1.73,61,1.561,62,1.621,63,1.653,64,1.653,66,2.517,68,1.621,69,3.479,71,2.182,73,2.224,77,0.912,80,0.927,82,0.738,83,2.029,85,2.725,86,1.79,87,3.028,90,1.427,91,2.142,93,3.333,102,1.144,103,1.828,115,1.685,116,1.653,117,1.997,119,1.997,136,2.393,143,2.564,185,1.182,186,2.267,187,2.224,188,2.311,189,2.885,190,1.653,191,1.653,192,1.561,193,1.653,194,1.561,195,1.653,196,1.561,197,1.653,198,1.561,199,1.653,200,1.561,201,1.906,202,2.311,203,1.561,204,2.311,205,1.561,206,1.621,207,1.653,208,1.561,209,1.653,210,1.653,211,1.504,212,2.664,213,1.561,214,1.653,215,1.561,216,1.653,217,1.561,218,1.653,219,1.561,220,1.653,221,1.561,222,1.163,223,1.653,224,1.561,225,1.653,226,1.561,227,1.653,228,1.561,229,1.653,230,1.561,231,1.653,232,1.561,233,1.561,234,1.561,235,1.653,236,1.561,237,1.653,238,1.561,239,1.561,240,1.653,241,2.725,242,2.598,243,1.561,244,1.653,245,1.561,246,1.653,247,1.561,248,1.653,281,7.329,909,3.243,920,4.534,921,4.534,1038,3.085,1321,6.965,1335,2.393,1336,3.433,1339,3.989,1340,3.989,1359,3.243,1523,6.409,1927,4.8,1928,3.433,2008,5.578,2160,8.218,2161,4.473,2162,4.473,2163,6.254,2164,5.578]],["title/interfaces/State.html",[58,1.496,285,0.374]],["body/interfaces/State.html",[2,0.056,3,0.047,4,0.039,7,1.132,8,0.175,9,0.332,13,0.185,20,0.006,24,0.86,27,0.236,32,0.047,33,0.785,42,0.005,43,0.005,58,2.933,75,4.576,90,1.867,108,4.898,109,4.11,140,2.645,285,0.629,295,3.927,315,2.541,318,2.944,319,3.158,320,2.879,328,3.238,1333,4.89,2165,6.016,2166,6.745,2167,6.016,2168,6.745,2169,6.745]],["title/interfaces/State-1.html",[58,1.251,285,0.313,862,2.113]],["body/interfaces/State-1.html",[2,0.033,3,0.028,4,0.023,7,0.665,8,0.103,9,0.233,13,0.215,20,0.006,24,0.506,27,0.165,32,0.045,33,0.462,42,0.004,43,0.004,46,0.821,58,2.969,77,1.796,79,2.939,80,1.943,82,1.511,90,2.165,104,3.587,105,3.228,106,1.437,107,1.465,110,1.621,112,4.967,113,5.175,137,2.874,154,2.907,259,1.952,285,0.604,286,2.874,287,2.874,288,2.688,289,2.755,290,2.755,291,3.043,292,1.766,293,3.088,294,1.012,295,2.755,296,2.663,297,3.587,298,1.474,299,1.903,300,1.903,301,4.029,302,3.507,303,1.736,304,2.416,305,1.952,306,4.405,307,1.952,308,1.73,309,2.332,310,1.952,311,3.043,312,1.812,313,2.827,314,2.827,315,1.494,316,2.874,317,3.043,318,1.73,319,1.856,320,4.028,321,3.043,322,3.043,323,3.043,324,3.043,325,3.043,326,3.043,327,5.178,328,4.502,329,3.043,330,3.043,331,3.043,332,3.043,333,5.676,334,3.043,335,3.043,336,3.043,337,3.043,338,5.676,339,3.043,340,3.043,341,3.043,342,3.043,343,5.178,344,3.043,345,3.043]],["title/interfaces/State-2.html",[58,1.251,285,0.313,304,2.477]],["body/interfaces/State-2.html",[2,0.048,3,0.041,4,0.033,7,0.973,8,0.151,9,0.302,13,0.225,20,0.006,24,0.95,27,0.237,30,3.473,31,2.322,32,0.043,33,0.957,34,1.75,42,0.005,43,0.005,58,2.939,90,2.048,140,3.403,285,0.573,295,3.574,297,2.651,315,2.185,318,2.532,319,2.716,320,3.703,328,3.947,347,3.197,352,3.563,370,5.286,381,3.103,386,4,387,3.197,416,4.407,528,0.94,2170,5.173,2171,5.801,2172,5.173,2173,5.801,2174,5.801,2175,7.446,2176,7.446,2177,5.801,2178,5.801,2179,5.801,2180,5.801,2181,5.801,2182,5.801]],["title/interfaces/State-3.html",[58,1.251,285,0.313,2069,3.12]],["body/interfaces/State-3.html",[2,0.036,3,0.03,4,0.025,7,0.728,8,0.113,9,0.249,13,0.252,16,2.533,20,0.006,24,0.554,27,0.222,29,1.359,30,3.085,31,1.738,32,0.044,33,0.505,34,1.638,42,0.004,43,0.004,46,1.269,57,2.747,58,2.926,82,0.716,90,2.105,140,2.402,285,0.546,294,1.685,295,2.94,297,2.8,298,1.438,308,2.673,309,2.553,312,1.984,315,1.636,318,1.895,319,2.033,320,3.893,328,4.379,364,3.928,373,1.895,450,1.198,476,6.473,477,6.473,489,2.084,491,3.796,493,2.195,496,2.452,517,3.563,518,5.462,519,4.44,520,4.44,521,5.462,522,5.462,523,5.462,524,5.462,525,5.026,526,3.872,527,4.265,528,0.964,529,2.464,530,2.121,531,4.96,532,7.522,533,6.67,534,6.922,535,3.332,536,3.563,537,5.462,538,3.148,539,2.863,540,3.563,541,3.563,542,3.563,543,2.195,544,3.148,545,3.872,546,3.563,547,3.872,548,3.872,549,3.872,550,3.872,551,3.872,552,3.872,553,3.872,554,3.872,555,3.872,556,3.872,557,3.872]],["title/interfaces/State-4.html",[58,1.251,285,0.313,1720,3.12]],["body/interfaces/State-4.html",[2,0.053,3,0.045,4,0.037,7,1.08,8,0.167,9,0.323,13,0.218,16,2.632,20,0.006,24,0.821,27,0.248,29,2.016,30,3.607,31,2.577,32,0.045,33,0.75,34,1.745,41,4.667,42,0.005,43,0.005,58,2.94,90,1.969,140,2.525,285,0.612,295,3.816,315,2.426,318,2.81,319,3.014,320,3.393,328,3.816,1727,8.409,2183,5.742,2184,6.438,2185,5.742,2186,6.438,2187,6.438,2188,6.438]],["title/interfaces/State-5.html",[58,1.251,285,0.313,436,3.336]],["body/interfaces/State-5.html",[2,0.045,3,0.038,4,0.031,7,0.91,8,0.141,9,0.29,13,0.24,20,0.006,24,0.692,27,0.156,32,0.045,33,0.632,34,1.669,42,0.004,43,0.004,58,2.93,90,2.058,222,1.41,285,0.613,295,3.422,297,3.259,298,1.538,302,2.82,315,2.044,318,2.368,319,2.541,320,3.749,328,4.217,450,1.224,453,2.604,528,1.078,529,2.635,530,2.268,971,5.303,976,4.811,981,5.494,982,3.306,1045,3.934,1085,4.389,1089,5.851,1100,4.453,1101,2.744,1214,4.453,1215,6.359,1216,6.359,1217,6.359,1218,6.359,1219,6.359,1220,4.839,1221,6.359,1222,4.453,1223,4.839,1224,4.839,1225,4.839,1226,4.839,1227,4.839,1228,4.839]],["title/interfaces/State-6.html",[58,1.251,285,0.313,2189,3.626]],["body/interfaces/State-6.html",[2,0.056,3,0.047,4,0.039,7,1.137,8,0.176,9,0.333,13,0.185,20,0.006,24,0.864,27,0.236,32,0.047,33,0.789,42,0.005,43,0.005,46,2.044,50,3.521,51,5.199,58,2.936,90,1.872,140,2.657,285,0.631,295,3.937,315,2.552,318,2.957,319,3.172,320,2.891,328,3.252,2190,6.042,2191,6.775,2192,6.042,2193,6.775,2194,6.775]],["title/interfaces/State-7.html",[58,1.251,285,0.313,2195,3.626]],["body/interfaces/State-7.html",[2,0.038,3,0.032,4,0.026,7,0.769,8,0.119,9,0.258,13,0.253,20,0.006,24,0.585,27,0.183,32,0.045,33,0.851,38,2.325,42,0.004,43,0.004,46,0.95,57,2.902,58,2.838,90,1.958,140,1.798,148,2.047,285,0.607,295,3.054,297,2.908,298,1.464,308,2.777,309,2.697,315,1.727,318,2.001,319,2.147,320,3.539,328,3.98,352,3.542,450,1.234,496,1.835,519,4.613,520,4.613,528,0.981,529,2.507,530,2.159,538,3.324,539,4.818,854,3.324,983,4.882,988,3.608,989,4.851,993,2.527,1047,5.205,1048,5.205,1761,3.519,1762,5.608,1763,6.364,1764,5.222,1765,6.478,1766,5.222,1767,5.222,1768,5.723,1769,5.723,1770,5.222,1771,3.763,1772,3.763,1773,6.478,1774,7.043,1775,3.519,1776,3.519,1777,3.763,1778,3.519,1779,3.324,1780,3.763,1781,3.763,1782,5.222,1783,3.763,1784,3.763,1785,3.763,1786,3.519,1787,3.763,1788,3.763,1789,3.763,1790,3.763,1791,3.763,1792,5.222,1793,3.763,1794,3.763,1795,3.763,1796,3.763,1797,3.763]],["title/interfaces/State-8.html",[58,1.251,285,0.313,437,3.336]],["body/interfaces/State-8.html",[2,0.052,3,0.044,4,0.036,7,1.056,8,0.163,9,0.318,13,0.234,20,0.006,24,0.803,27,0.181,32,0.045,33,0.733,42,0.005,43,0.005,58,2.957,90,2.04,285,0.603,295,3.763,297,3.584,315,2.371,318,2.747,319,2.947,320,3.645,328,4.099,450,1.089,528,1.071,529,2.739,530,2.358,994,6.182,999,3.272,1000,4.341,2196,5.614,2197,6.294,2198,5.614,2199,6.294,2200,6.294,2201,6.294,2202,6.294]],["title/interfaces/State-9.html",[58,1.251,285,0.313,2203,4.066]],["body/interfaces/State-9.html",[2,0.046,3,0.039,4,0.032,7,0.933,8,0.144,9,0.294,13,0.249,20,0.006,24,0.71,27,0.16,32,0.041,33,0.648,42,0.005,43,0.005,58,2.982,78,6.968,90,2.14,140,2.842,285,0.557,295,3.478,297,3.312,302,2.891,315,2.095,318,2.427,319,2.604,320,3.946,328,4.358,352,3.421,450,1.209,528,1.083,530,2.284,543,4.676,662,7.451,1101,4.591,1335,2.975,1359,4.032,1428,4.96,2204,4.96,2205,5.562,2206,4.96,2207,5.562,2208,5.562,2209,5.562,2210,5.562,2211,5.562,2212,5.562,2213,5.562,2214,5.562]],["title/injectables/StyleService.html",[478,3.525,768,2.394]],["body/injectables/StyleService.html",[0,0.003,2,0.043,3,0.036,4,0.03,8,0.134,9,0.28,13,0.227,14,0.648,17,1.003,19,1.084,20,0.006,21,0.791,22,0.543,27,0.274,28,0.721,32,0.03,42,0.004,43,0.004,83,2.241,86,2.071,87,3.164,90,1.775,102,1.323,115,1.949,116,1.911,117,2.31,148,3.973,294,1.739,354,4.043,364,3.774,366,3.493,373,2.258,378,6.637,379,4.245,380,3.042,381,2.767,382,4.245,385,2.616,392,2.616,393,2.616,427,4.722,478,5.008,487,2.851,534,6.811,535,3.97,768,3.83,792,3.567,793,3.411,862,2.689,1049,4.087,1058,5.669,1373,4.372,1769,3.75,1907,7.713,1908,4.614,1909,6.161,1910,4.614,2195,4.614,2215,5.173,2216,7.777,2217,6.908,2218,5.173,2219,5.173,2220,6.908,2221,5.173,2222,5.173,2223,5.173,2224,5.173,2225,5.173,2226,5.173,2227,8.3,2228,5.173,2229,5.173,2230,5.173,2231,5.173,2232,5.173,2233,5.173,2234,5.173,2235,5.173]],["title/components/TabsComponent.html",[60,1.024,243,1.697]],["body/components/TabsComponent.html",[0,0.004,2,0.021,3,0.017,4,0.014,6,0.547,8,0.064,9,0.162,13,0.242,14,0.31,17,1.096,19,0.557,20,0.006,21,0.587,22,0.279,24,0.51,25,0.67,27,0.24,28,0.344,32,0.014,33,0.864,34,0.739,38,1.674,42,0.003,43,0.003,56,3.236,58,2.085,60,1.334,61,0.863,62,0.896,63,0.913,64,0.913,66,1.754,67,2.542,68,0.896,69,3.287,71,1.394,73,1.42,75,3.679,76,4.429,77,0.504,80,0.512,82,0.408,83,1.296,84,2.918,85,2.014,86,0.99,87,2.409,90,1.317,91,1.977,93,4.128,95,2.918,102,0.632,103,1.011,106,1.448,108,2.137,109,1.506,115,0.931,116,0.913,117,1.104,119,3.314,120,1.705,124,4.467,134,3.066,136,4.1,138,3.516,139,3.516,140,2.484,143,0.879,147,4.128,148,3.025,184,1.897,185,0.653,186,1.448,187,1.42,188,1.476,189,2.132,190,0.913,191,0.913,192,0.863,193,0.913,194,0.863,195,0.913,196,0.863,197,0.913,198,0.863,199,0.913,200,0.863,201,1.961,202,1.476,203,0.863,204,1.476,205,0.863,206,0.896,207,0.913,208,0.863,209,0.913,210,0.913,211,0.831,212,1.857,213,0.863,214,0.913,215,0.863,216,0.913,217,0.863,218,0.913,219,0.863,220,0.913,221,0.863,222,1.761,223,0.913,224,0.863,225,0.913,226,0.863,227,0.913,228,0.863,229,0.913,230,0.863,231,0.913,232,0.863,233,0.863,234,0.863,235,0.913,236,0.863,237,0.913,238,0.863,239,0.863,240,0.913,241,0.863,242,0.735,243,2.014,244,0.913,245,0.863,246,0.913,247,0.863,248,0.913,312,1.13,384,1.406,385,1.25,392,1.25,393,1.25,450,0.864,460,3.278,489,1.187,490,1.897,527,3.426,530,1.704,605,5.147,659,2.029,662,4.736,745,3.563,959,2.702,971,3.985,982,1.506,983,3.854,993,1.363,994,4.467,999,3.293,1000,1.705,1079,2.205,1205,1.897,1323,4.482,1335,1.322,1336,1.897,1338,2.205,1359,1.792,1367,2.434,1381,2.434,1383,2.349,1388,2.434,1431,3.278,1523,4.736,1739,2.029,2164,3.563,2236,2.472,2237,3.994,2238,3.994,2239,5.771,2240,5.771,2241,5.771,2242,5.771,2243,5.771,2244,5.771,2245,5.771,2246,5.771,2247,3.994,2248,3.994,2249,2.472,2250,2.472,2251,2.472,2252,3.994,2253,2.472,2254,2.472,2255,2.472,2256,2.472,2257,2.472,2258,2.472,2259,2.472,2260,2.472,2261,2.472,2262,3.994,2263,2.472,2264,2.472,2265,2.472,2266,2.472,2267,2.472,2268,2.472,2269,2.472,2270,2.472,2271,2.472,2272,2.472,2273,2.472,2274,2.472,2275,2.472,2276,2.472,2277,2.472,2278,2.472,2279,2.472,2280,2.472,2281,2.472,2282,2.472,2283,2.472,2284,2.472,2285,2.472,2286,2.472,2287,2.472,2288,2.472,2289,2.472,2290,2.472,2291,2.472,2292,2.472,2293,2.472,2294,2.472,2295,2.472,2296,2.472,2297,2.472,2298,2.472,2299,2.472,2300,2.472,2301,2.472,2302,5.147,2303,5.147,2304,3.563,2305,2.472,2306,2.472,2307,2.472,2308,2.472,2309,2.472,2310,2.472,2311,3.994,2312,2.472,2313,2.472,2314,2.472,2315,2.472,2316,2.472,2317,2.472,2318,3.994,2319,2.472,2320,2.472,2321,2.472,2322,2.472,2323,2.472,2324,2.472,2325,3.994,2326,2.472,2327,2.472,2328,2.472,2329,2.472,2330,2.472,2331,2.472,2332,2.472,2333,2.472,2334,2.472]],["title/modules/TabsModule.html",[249,1.729,1478,3.525]],["body/modules/TabsModule.html",[0,0.003,2,0.046,3,0.039,4,0.031,20,0.006,27,0.283,32,0.049,42,0.005,43,0.005,82,1.187,102,1.407,185,1.454,243,3.377,249,2.559,251,2.86,252,4.561,253,3.033,254,3.13,258,1.851,259,2.71,261,4.232,262,3.13,263,4.093,264,5.217,265,3.989,268,5.217,269,3.989,273,5.522,274,4.223,466,6.563,558,6.563,583,5.905,584,4.516,1260,6.563,1478,7.199,1798,6.858,1947,6.563,2335,4.908,2336,4.908,2337,5.503,2338,4.908,2339,5.503,2340,7.196,2341,5.503,2342,5.503,2343,5.503,2344,5.503,2345,5.503,2346,5.503,2347,5.503]],["title/classes/Toggle.html",[0,0.003,1110,2.766]],["body/classes/Toggle.html",[0,0.006,2,0.043,3,0.037,4,0.03,6,1.266,7,1.571,8,0.135,9,0.282,11,2.136,12,2.206,13,0.261,14,0.979,17,0.839,20,0.006,24,0.665,25,0.875,27,0.15,28,0.727,32,0.056,33,1.06,37,2.035,39,2.136,42,0.004,43,0.004,242,2.748,249,1.855,352,1.965,450,0.996,496,2.088,528,0.892,530,1.312,543,2.638,952,2.517,963,2.253,991,3.421,992,3.102,1101,2.638,1110,5.178,1335,2.79,1518,4.085,2043,4.232,2044,3.301,2047,4.58,2048,4.58,2049,4.58,2050,4.58,2051,4.232,2052,4.232,2348,6.946]],["title/components/TransparencyComponent.html",[60,1.024,245,1.697]],["body/components/TransparencyComponent.html",[0,0.002,2,0.031,3,0.026,4,0.021,6,0.745,8,0.096,9,0.221,13,0.232,14,0.461,16,1.889,17,1.077,19,0.758,20,0.006,21,0.727,22,0.38,24,0.911,25,1.42,27,0.238,28,0.513,29,1.153,32,0.021,33,0.429,34,1.41,38,1.437,42,0.003,43,0.003,56,3.356,60,1.604,61,1.285,62,1.335,63,1.361,64,1.361,66,2.256,67,3.27,68,1.335,69,3.426,71,1.898,73,1.934,76,5.48,77,0.751,80,0.763,82,0.608,83,1.764,84,3.611,85,2.492,86,1.474,87,2.835,90,1.476,91,2.215,95,3.611,102,0.942,103,1.505,108,2.909,109,2.244,115,1.388,116,1.361,117,1.644,120,2.54,134,4.174,143,1.309,184,2.826,185,0.973,186,1.971,187,1.934,188,2.009,189,2.638,190,1.361,191,1.361,192,1.285,193,1.361,194,1.285,195,1.361,196,1.285,197,1.361,198,1.285,199,1.361,200,1.285,201,1.709,202,2.009,203,1.285,204,2.009,205,1.285,206,1.335,207,1.361,208,1.285,209,1.361,210,1.361,211,1.239,212,2.389,213,1.285,214,1.361,215,1.285,216,1.361,217,1.285,218,1.361,219,1.285,220,1.361,221,1.285,222,0.957,223,1.361,224,1.285,225,1.361,226,1.285,227,1.361,228,1.285,229,1.361,230,1.285,231,1.361,232,1.285,233,1.285,234,1.285,235,1.361,236,1.285,237,1.361,238,1.285,239,1.285,240,1.361,241,1.285,242,1.095,243,1.285,244,1.361,245,2.492,246,1.361,247,1.285,248,1.361,294,1.523,302,2.827,312,2.486,362,2.095,392,1.862,393,1.862,451,6.542,456,3.82,655,2.244,679,2.67,862,2.827,954,4.062,1024,6.369,1045,3.943,1205,2.826,1379,4.519,1380,4.519,2302,3.285,2303,3.285,2304,3.285,2349,3.683,2350,5.438,2351,5.438,2352,7.141,2353,5.438,2354,5.438,2355,3.683,2356,3.683,2357,3.683,2358,5.438,2359,7.141,2360,3.683,2361,3.683,2362,3.683,2363,3.683,2364,3.683,2365,3.683,2366,3.683,2367,5.438,2368,5.438,2369,3.683,2370,5.438,2371,3.683,2372,3.683,2373,3.683,2374,3.683]],["title/components/ZoomButtonsComponent.html",[60,1.024,247,1.697]],["body/components/ZoomButtonsComponent.html",[0,0.003,2,0.034,3,0.028,4,0.023,6,0.796,8,0.105,9,0.236,13,0.187,14,0.506,17,0.995,19,0.562,20,0.006,21,0.694,22,0.282,24,0.515,25,0.677,27,0.25,28,0.562,32,0.023,34,1.076,35,3.68,38,1.537,42,0.004,43,0.004,46,1.545,50,2.098,56,3.383,60,1.664,61,1.409,62,1.463,63,1.491,64,1.491,66,2.379,68,1.463,69,3.452,71,2.029,73,2.068,77,0.823,80,0.836,82,1.53,83,1.886,85,2.602,86,1.616,87,2.927,90,1.555,91,2.335,93,3.183,102,1.032,103,1.65,104,1.845,106,1.463,107,1.491,115,1.521,116,1.491,117,1.802,119,1.802,126,3.6,127,3.6,143,2.424,185,1.067,186,2.107,187,2.068,188,2.148,189,2.755,190,1.491,191,1.491,192,1.409,193,1.491,194,1.409,195,1.491,196,1.409,197,1.491,198,1.409,199,1.491,200,1.409,201,1.801,202,2.148,203,1.409,204,2.148,205,1.409,206,1.463,207,1.491,208,1.409,209,1.491,210,1.491,211,1.358,212,2.518,213,1.409,214,1.491,215,1.409,216,1.491,217,1.409,218,1.491,219,1.409,220,1.491,221,1.409,222,1.049,223,1.491,224,1.409,225,1.491,226,1.409,227,1.491,228,1.409,229,1.491,230,1.409,231,1.491,232,1.409,233,1.409,234,1.409,235,1.491,236,1.409,237,1.491,238,1.409,239,1.409,240,1.491,241,1.409,242,1.2,243,1.409,244,1.491,245,1.409,246,1.491,247,2.602,248,1.491,282,7.568,294,1.025,299,3.58,300,3.58,385,2.041,390,3.308,392,2.941,393,2.941,487,2.225,509,4.772,512,3.68,721,4.463,744,4.772,862,3.023,1038,2.784,1360,5.186,1927,4.463,1928,3.098,1993,6.651,2019,5.186,2375,8.485,2376,4.037,2377,5.815,2378,5.815,2379,5.815,2380,4.037,2381,4.037,2382,4.037,2383,4.037,2384,5.815,2385,5.815]],["title/dependencies.html",[251,3.038,2386,4.066]],["body/dependencies.html",[4,0.04,20,0.006,28,0.965,42,0.005,43,0.005,87,2.463,102,1.771,251,4.321,262,3.94,655,4.22,1481,6.177,1493,5.684,1494,5.684,1671,5.684,2387,6.926,2388,8.907,2389,6.926,2390,8.313,2391,6.926,2392,8.313,2393,6.926,2394,6.926,2395,6.926,2396,6.926,2397,6.926,2398,6.926,2399,6.926,2400,6.926,2401,6.926,2402,6.926,2403,6.926,2404,6.926,2405,6.926,2406,6.926,2407,6.926,2408,6.926]],["title/miscellaneous/functions.html",[315,2.202,2409,3.12]],["body/miscellaneous/functions.html",[7,1.671,8,0.144,19,1.35,20,0.006,21,0.986,22,0.677,42,0.005,43,0.005,52,4.991,58,2.941,139,5.904,287,4.025,315,2.092,316,5.247,517,4.556,546,5.94,1214,4.556,1222,5.94,1480,4.952,1494,5.94,1502,4.952,1505,5.94,1551,4.952,1761,4.261,1786,5.555,2165,4.952,2167,6.455,2170,4.952,2172,6.455,2183,4.952,2185,6.455,2190,4.952,2192,6.455,2196,4.952,2198,6.455,2204,4.952,2206,6.455,2409,4.261,2410,5.552,2411,5.552,2412,5.552,2413,5.552,2414,5.552,2415,5.552,2416,5.552,2417,5.552,2418,5.552,2419,5.552,2420,5.552,2421,5.552,2422,5.552,2423,5.552,2424,5.552,2425,5.552,2426,5.552,2427,5.552,2428,5.552,2429,5.552,2430,5.552,2431,5.552,2432,5.552]],["title/index.html",[8,0.106,784,3.336,1779,2.948]],["body/index.html",[0,0.004,3,0.044,4,0.039,6,0.767,9,0.185,10,1.005,13,0.125,16,1.33,19,0.406,20,0.006,21,0.296,22,0.318,24,0.714,27,0.269,28,0.634,32,0.032,34,1.271,35,4.812,37,1.038,38,0.77,42,0.003,43,0.003,46,1.423,56,3.296,58,1.723,60,1.803,62,2.294,66,2.209,69,1.954,71,1.016,75,1.398,82,0.481,85,1.588,87,1.036,93,1.243,102,1.618,103,1.191,108,4.325,117,1.301,118,2.235,148,2.826,186,1.056,222,0.757,242,2.458,251,2.365,253,1.606,259,1.434,263,1.657,285,0.224,297,1.331,302,3.569,309,1.713,315,1.097,352,1.097,366,2.301,378,2.235,416,1.398,427,1.514,456,1.558,460,2.39,465,2.235,530,1.592,536,2.39,540,2.39,541,5.194,543,3.472,619,5.973,646,3.412,683,2.235,715,2.39,768,1.434,779,2.598,784,2.39,793,1.92,808,3.734,817,2.598,1032,1.942,1058,5.194,1097,2.235,1101,1.473,1110,2.588,1348,2.598,1412,1.843,1416,1.843,1417,1.92,1427,2.598,1435,2.235,1436,6.457,1471,4.06,1485,4.058,1486,3.734,1487,4.994,1488,2.598,1512,5.973,1526,6.491,1648,2.598,1668,2.598,1671,3.734,1709,4.058,1710,2.598,1711,4.058,1712,2.598,1713,4.994,1714,2.598,1715,2.598,1716,4.058,1719,2.598,1720,2.235,1779,2.112,2020,3.734,2069,2.235,2433,6.867,2434,5.6,2435,8.27,2436,6.33,2437,2.913,2438,4.55,2439,5.6,2440,2.913,2441,2.913,2442,2.913,2443,2.913,2444,2.913,2445,2.913,2446,2.913,2447,2.913,2448,4.55,2449,4.55,2450,6.33,2451,6.33,2452,4.55,2453,2.913,2454,2.913,2455,7.278,2456,2.913,2457,4.55,2458,7.278,2459,6.33,2460,6.33,2461,2.913,2462,2.913,2463,2.913,2464,5.6,2465,4.55,2466,6.867,2467,2.913,2468,2.913,2469,2.913,2470,2.913,2471,4.55,2472,2.913,2473,2.913,2474,2.913,2475,4.55,2476,2.913,2477,2.913,2478,2.913,2479,2.913,2480,2.913,2481,2.913,2482,2.913,2483,2.913,2484,5.6,2485,4.55,2486,4.55,2487,2.913,2488,2.913,2489,2.913,2490,2.913,2491,2.913,2492,2.913,2493,4.55,2494,2.913,2495,2.913,2496,2.913,2497,2.913,2498,2.913,2499,5.6,2500,2.913,2501,2.913,2502,2.913,2503,2.913,2504,2.913,2505,4.55,2506,2.913,2507,2.913,2508,2.913,2509,2.913,2510,2.913,2511,2.913,2512,4.55,2513,4.55,2514,2.913,2515,2.913,2516,2.913,2517,2.913,2518,2.913,2519,2.913,2520,5.6,2521,2.913,2522,2.913,2523,2.913,2524,2.913,2525,5.6,2526,2.913,2527,2.913,2528,2.913,2529,2.913,2530,2.913,2531,6.33,2532,5.6,2533,4.55,2534,2.913,2535,2.913,2536,4.55,2537,4.55,2538,5.6,2539,2.913,2540,2.913,2541,4.55,2542,2.913,2543,2.913,2544,2.913,2545,2.913,2546,2.913,2547,4.55,2548,4.55,2549,4.55,2550,2.913,2551,4.55,2552,2.913,2553,2.913,2554,2.913,2555,2.913,2556,2.913,2557,2.913,2558,2.913,2559,2.913,2560,2.913,2561,2.913,2562,2.913,2563,2.913,2564,4.55,2565,4.55,2566,2.913,2567,2.913,2568,2.913,2569,2.913,2570,2.913,2571,2.913,2572,2.913,2573,2.913,2574,2.913,2575,2.913,2576,5.6,2577,5.6,2578,5.6,2579,2.913,2580,4.55,2581,2.913,2582,2.913,2583,6.867,2584,2.913,2585,5.6,2586,2.913,2587,2.913,2588,2.913,2589,2.913,2590,2.913,2591,2.913,2592,2.913,2593,2.913,2594,4.55,2595,4.55,2596,2.913,2597,2.913,2598,2.913,2599,2.913,2600,2.913,2601,4.55,2602,2.913,2603,2.913,2604,2.913,2605,2.913,2606,2.913,2607,2.913,2608,2.913,2609,2.913,2610,2.913,2611,2.913,2612,2.913,2613,2.913,2614,2.913,2615,2.913,2616,2.913,2617,2.913,2618,2.913]],["title/modules.html",[249,2.356]],["body/modules.html",[20,0.005,42,0.005,43,0.005,249,2.479,250,5.055,466,5.055,558,5.055,564,4.808,715,8.131,1260,5.055,1471,5.055,1477,5.055,1478,5.055,1486,8.131,1798,5.055,1947,5.055,2619,9.908,2620,9.908]],["title/overview.html",[2621,5.909]],["body/overview.html",[0,0.003,20,0.006,32,0.023,42,0.004,43,0.004,60,0.848,61,2.959,82,0.958,185,1.064,192,2.375,194,2.375,196,2.959,198,2.959,200,2.375,203,2.375,205,2.375,208,2.375,211,2.289,213,2.375,215,2.375,217,2.375,219,2.959,221,2.375,224,2.375,226,2.959,228,2.959,230,2.959,232,2.375,233,2.375,234,2.375,236,2.959,238,2.375,239,2.375,241,2.375,243,2.959,245,2.375,247,2.375,249,2.064,250,6.956,251,2.093,252,2.29,253,2.219,254,2.29,255,3.591,256,3.591,257,3.591,258,1.354,259,1.983,285,0.31,466,5.964,467,3.591,468,3.591,469,3.591,478,4.934,535,3.09,558,6.927,559,3.591,560,3.591,561,3.591,562,3.591,563,3.591,564,6.097,565,4.934,674,2.548,768,1.983,862,2.093,1260,7.03,1261,3.591,1262,3.591,1264,3.591,1471,6.588,1472,3.591,1473,3.591,1474,3.591,1475,3.591,1476,3.591,1477,5.964,1478,6.927,1479,4.694,1700,3.591,1701,3.591,1702,3.591,1798,6.588,1799,3.591,1800,3.591,1801,3.591,1947,5.964,1948,3.591,1949,3.591,1950,3.591,2142,3.591,2143,3.591,2144,3.591,2145,3.591,2146,6.507,2189,3.591,2335,3.591,2336,3.591,2338,3.591,2621,3.591,2622,4.026,2623,4.026,2624,4.026]],["title/miscellaneous/typealiases.html",[2409,3.12,2625,5.845]],["body/miscellaneous/typealiases.html",[1,4.315,5,4.614,8,0.146,13,0.154,20,0.006,40,4.315,41,5.874,42,0.005,43,0.005,44,4.614,45,5.014,51,6.218,52,3.877,53,5.014,59,6.218,110,3.312,258,1.891,387,4.466,489,3.889,527,2.843,946,3.198,962,3.231,963,2.882,964,3.099,965,3.503,966,3.099,967,3.099,968,3.099,969,3.312,970,3.099,971,3.307,972,3.877,981,3.426,982,4.936,983,3.198,984,3.877,992,3.617,993,4.466,994,3.707,995,4.315,1000,5.587,1110,3.198,1333,5.874,1335,4.334,1517,4.315,1518,3.307,1953,2.699,1971,2.632,1972,2.632,1973,2.632,1974,2.632,1975,2.632,1976,2.632,1977,2.632,1978,2.632,1979,2.632,1980,2.632,1981,2.632,1982,2.632,1983,2.632,1984,2.632,1985,2.632,1986,3.877,1987,4.076,1991,3.877,2043,3.426,2044,3.558,2051,3.426,2052,3.426,2053,5.014,2409,4.315,2626,5.622,2627,5.622,2628,5.622,2629,5.622,2630,5.622,2631,5.622,2632,5.622,2633,5.622,2634,5.622,2635,5.622,2636,5.622,2637,5.622]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":312,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["0.2.2",{"_index":2404,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2228,"title":{},"body":{"injectables/StyleService.html":{}}}],["0.5",{"_index":2229,"title":{},"body":{"injectables/StyleService.html":{}}}],["0.6",{"_index":434,"title":{},"body":{"components/CursorComponent.html":{}}}],["0.7",{"_index":2231,"title":{},"body":{"injectables/StyleService.html":{}}}],["0.9",{"_index":2232,"title":{},"body":{"injectables/StyleService.html":{}}}],["1",{"_index":862,"title":{"interfaces/MangolConfigLayerGroup-1.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-1.html":{},"interfaces/State-1.html":{}},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"injectables/StyleService.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["1.1.31",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["1.3.8",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":2564,"title":{},"body":{"index.html":{}}}],["10",{"_index":535,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"injectables/StyleService.html":{},"overview.html":{}}}],["100",{"_index":1024,"title":{},"body":{"components/LayerComponent.html":{},"components/TransparencyComponent.html":{}}}],["1000",{"_index":405,"title":{},"body":{"components/CursorComponent.html":{}}}],["12px",{"_index":422,"title":{},"body":{"components/CursorComponent.html":{}}}],["1500",{"_index":2569,"title":{},"body":{"index.html":{}}}],["180",{"_index":1878,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["19.3956393810065",{"_index":2542,"title":{},"body":{"index.html":{}}}],["2",{"_index":304,"title":{"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-2.html":{},"classes/SetTitle-2.html":{},"interfaces/State-2.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["2.0.8",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":440,"title":{},"body":{"components/CursorComponent.html":{}}}],["2000",{"_index":1939,"title":{},"body":{"components/PositionComponent.html":{}}}],["250px",{"_index":2599,"title":{},"body":{"index.html":{}}}],["255",{"_index":537,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["29",{"_index":2622,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2069,"title":{"classes/SetDisabled-3.html":{},"classes/SetTitle-3.html":{},"interfaces/State-3.html":{}},"body":{"index.html":{}}}],["30",{"_index":1251,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["3000",{"_index":536,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"index.html":{}}}],["360",{"_index":1880,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["4",{"_index":1720,"title":{"classes/SetTitle-4.html":{},"interfaces/State-4.html":{}},"body":{"injectables/MapService.html":{},"index.html":{}}}],["4.6.2",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":2597,"title":{},"body":{"index.html":{}}}],["450px",{"_index":2598,"title":{},"body":{"index.html":{}}}],["47.168464955013",{"_index":1719,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["5",{"_index":436,"title":{"interfaces/State-5.html":{}},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["5.2.0",{"_index":2405,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1059,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["500",{"_index":744,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["57",{"_index":2624,"title":{},"body":{"overview.html":{}}}],["59",{"_index":2623,"title":{},"body":{"overview.html":{}}}],["6",{"_index":2189,"title":{"interfaces/State-6.html":{}},"body":{"overview.html":{}}}],["6.1.0",{"_index":2392,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1060,"title":{},"body":{"components/LayerComponent.html":{}}}],["7",{"_index":2195,"title":{"interfaces/State-7.html":{}},"body":{"injectables/StyleService.html":{}}}],["7946.0.4",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":437,"title":{"interfaces/State-8.html":{}},"body":{"components/CursorComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{}}}],["9",{"_index":2203,"title":{"interfaces/State-9.html":{}},"body":{}}],["90",{"_index":736,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["_",{"_index":1182,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["_')}_${new",{"_index":889,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["_activatedraw",{"_index":1812,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["_activatedraw(map",{"_index":1816,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["_cleanup",{"_index":1728,"title":{},"body":{"components/MeasureComponent.html":{}}}],["_colorwithopac",{"_index":2216,"title":{},"body":{"injectables/StyleService.html":{}}}],["_colorwithopacity(color",{"_index":2218,"title":{},"body":{"injectables/StyleService.html":{}}}],["_createclickfunct",{"_index":606,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["_createclickfunction(evt",{"_index":617,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["_createpointermovefunct",{"_index":1605,"title":{},"body":{"components/MapComponent.html":{}}}],["_createpointermovefunction(evt",{"_index":1611,"title":{},"body":{"components/MapComponent.html":{}}}],["_createrotationfunct",{"_index":1995,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["_createrotationfunction(evt",{"_index":1999,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["_deactivatedraw",{"_index":1813,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["_deactivatedraw(map",{"_index":1818,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["_formatcoordin",{"_index":1606,"title":{},"body":{"components/MapComponent.html":{}}}],["_formatcoordinates(coord",{"_index":1615,"title":{},"body":{"components/MapComponent.html":{}}}],["_materi",{"_index":2446,"title":{},"body":{"index.html":{}}}],["_opensnackbar",{"_index":607,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["_opensnackbar(hit",{"_index":623,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["_removeclickfunct",{"_index":608,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["_shared/shared/services/style.servic",{"_index":488,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["_shared/shared/shared.modul",{"_index":585,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{}}}],["accent",{"_index":2577,"title":{},"body":{"index.html":{}}}],["access",{"_index":2549,"title":{},"body":{"index.html":{}}}],["action",{"_index":7,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"interfaces/MangolState.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"classes/Toggle.html":{},"miscellaneous/functions.html":{}}}],["action.payload",{"_index":328,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["action.payload.hasownproperty(key",{"_index":1794,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["action.payload[key",{"_index":1796,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["action.typ",{"_index":319,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolState.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["actionreduc",{"_index":1489,"title":{},"body":{"modules/MangolModule.html":{},"interfaces/MangolState.html":{}}}],["actionreducermap",{"_index":1562,"title":{},"body":{"interfaces/MangolState.html":{}}}],["activ",{"_index":1377,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["actual_compon",{"_index":248,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["ad",{"_index":865,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/MapComponent.html":{}}}],["add",{"_index":35,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/MapComponent.html":{},"classes/SetMeasureLayer.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["add/extend",{"_index":2605,"title":{},"body":{"index.html":{}}}],["add_lay",{"_index":26,"title":{},"body":{"classes/AddLayers.html":{},"classes/SetMeasureLayer.html":{}}}],["add_map",{"_index":49,"title":{},"body":{"classes/AddMap.html":{}}}],["addlay",{"_index":1,"title":{"classes/AddLayers.html":{}},"body":{"classes/AddLayers.html":{},"classes/SetMeasureLayer.html":{},"miscellaneous/typealiases.html":{}}}],["addmap",{"_index":44,"title":{"classes/AddMap.html":{}},"body":{"classes/AddMap.html":{},"miscellaneous/typealiases.html":{}}}],["afterviewinit",{"_index":1597,"title":{},"body":{"components/MapComponent.html":{},"components/ScalebarComponent.html":{}}}],["ahead",{"_index":2523,"title":{},"body":{"index.html":{}}}],["alert",{"_index":714,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["alias",{"_index":2626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":864,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["alter",{"_index":2574,"title":{},"body":{"index.html":{}}}],["ang",{"_index":2447,"title":{},"body":{"index.html":{}}}],["angl",{"_index":1762,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State-7.html":{}}}],["angular",{"_index":2433,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":2493,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":1191,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["angular/cdk/tre",{"_index":1192,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["angular/cli",{"_index":2491,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":262,"title":{},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":569,"title":{},"body":{"modules/FeatureinfoModule.html":{},"injectables/FeatureinfoService.html":{}}}],["angular/cor",{"_index":102,"title":{},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/materi",{"_index":655,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/TransparencyComponent.html":{},"dependencies.html":{}}}],["angular/material/badg",{"_index":1267,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["angular/material/button",{"_index":265,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/TabsModule.html":{}}}],["angular/material/chip",{"_index":267,"title":{},"body":{"modules/ControllersModule.html":{}}}],["angular/material/dialog",{"_index":1269,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["angular/material/divid",{"_index":571,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MeasureModule.html":{}}}],["angular/material/expans",{"_index":573,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{}}}],["angular/material/form",{"_index":575,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["angular/material/icon",{"_index":269,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MeasureModule.html":{},"modules/TabsModule.html":{}}}],["angular/material/list",{"_index":1271,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["angular/material/menu",{"_index":1273,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["angular/material/select",{"_index":578,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/MeasureModule.html":{}}}],["angular/material/sidenav",{"_index":1483,"title":{},"body":{"modules/MangolModule.html":{}}}],["angular/material/slid",{"_index":1275,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["angular/material/snack",{"_index":271,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{}}}],["angular/material/sort",{"_index":580,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["angular/material/t",{"_index":582,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["angular/material/tab",{"_index":2341,"title":{},"body":{"modules/TabsModule.html":{}}}],["angular/material/them",{"_index":2581,"title":{},"body":{"index.html":{}}}],["angular/material/toolbar",{"_index":584,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/TabsModule.html":{}}}],["angular/material/tooltip",{"_index":274,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/TabsModule.html":{}}}],["angular/material/tre",{"_index":1193,"title":{},"body":{"components/LayertreeComponent.html":{},"modules/LayertreeModule.html":{}}}],["angular/platform",{"_index":1485,"title":{},"body":{"modules/MangolModule.html":{},"index.html":{}}}],["anim",{"_index":1038,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["animationdur",{"_index":1993,"title":{},"body":{"components/RotationButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["aot",{"_index":2525,"title":{},"body":{"index.html":{}}}],["api",{"_index":2545,"title":{},"body":{"index.html":{}}}],["app",{"_index":2531,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":2562,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":2482,"title":{},"body":{"index.html":{}}}],["app/app.modul",{"_index":2516,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":2532,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":800,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["appmodul",{"_index":2515,"title":{},"body":{"index.html":{}}}],["appreci",{"_index":2614,"title":{},"body":{"index.html":{}}}],["appropri",{"_index":2560,"title":{},"body":{"index.html":{}}}],["area",{"_index":1763,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State-7.html":{}}}],["array",{"_index":1627,"title":{},"body":{"components/MapComponent.html":{}}}],["array.isarray(group.children",{"_index":1304,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["array.isarray(node.children",{"_index":1184,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["arriv",{"_index":2608,"title":{},"body":{"index.html":{}}}],["async",{"_index":745,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/TabsComponent.html":{}}}],["async).group",{"_index":1147,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["async).lay",{"_index":1253,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["async).length",{"_index":747,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["async).nolay",{"_index":516,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["attrcolumn",{"_index":1392,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["attribut",{"_index":859,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["author",{"_index":2615,"title":{},"body":{"index.html":{}}}],["autofocu",{"_index":738,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{}}}],["backgroundfil",{"_index":431,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/CursorMode.html":{}}}],["badg",{"_index":980,"title":{},"body":{"classes/HasLayertree.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{}}}],["bar",{"_index":272,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{}}}],["base",{"_index":1107,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["baselay",{"_index":1408,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{}}}],["basic",{"_index":1348,"title":{},"body":{"components/MangolComponent.html":{},"index.html":{}}}],["becom",{"_index":2610,"title":{},"body":{"index.html":{}}}],["befor",{"_index":2580,"title":{},"body":{"index.html":{}}}],["begin",{"_index":2497,"title":{},"body":{"index.html":{}}}],["blacklist",{"_index":1504,"title":{},"body":{"modules/MangolModule.html":{}}}],["blob",{"_index":882,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["blob([csvcont",{"_index":883,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["bodi",{"_index":813,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["boolean",{"_index":528,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"classes/LayertreeItemNode.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/OlxLayerLayerOptions.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"classes/Toggle.html":{}}}],["bootstrap",{"_index":253,"title":{},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"index.html":{},"overview.html":{}}}],["bootstrapmodule(appmodul",{"_index":2517,"title":{},"body":{"index.html":{}}}],["break",{"_index":702,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/MangolState.html":{},"components/MeasureResultsComponent.html":{}}}],["brows",{"_index":2620,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1486,"title":{},"body":{"modules/MangolModule.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":1488,"title":{},"body":{"modules/MangolModule.html":{},"index.html":{}}}],["browseranimationsmodul",{"_index":1487,"title":{},"body":{"modules/MangolModule.html":{},"index.html":{}}}],["browsermodul",{"_index":1484,"title":{},"body":{"modules/MangolModule.html":{}}}],["build",{"_index":2520,"title":{},"body":{"index.html":{}}}],["built",{"_index":2462,"title":{},"body":{"index.html":{}}}],["button",{"_index":143,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["button'},{'nam",{"_index":212,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["button.compon",{"_index":279,"title":{},"body":{"modules/ControllersModule.html":{}}}],["button.component.html",{"_index":920,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["button.component.scss",{"_index":921,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["button.component.t",{"_index":909,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["button.component.ts:19",{"_index":2008,"title":{},"body":{"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["button.component.ts:20",{"_index":2009,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:21",{"_index":2007,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:23",{"_index":1998,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:25",{"_index":2161,"title":{},"body":{"components/SidebarButtonComponent.html":{}}}],["button.component.ts:26",{"_index":941,"title":{},"body":{"components/FullscreenButtonComponent.html":{}}}],["button.component.ts:27",{"_index":2162,"title":{},"body":{"components/SidebarButtonComponent.html":{}}}],["button.component.ts:32",{"_index":943,"title":{},"body":{"components/FullscreenButtonComponent.html":{}}}],["button.component.ts:34",{"_index":944,"title":{},"body":{"components/FullscreenButtonComponent.html":{}}}],["button.component.ts:44",{"_index":2005,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:46",{"_index":2004,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:60",{"_index":942,"title":{},"body":{"components/FullscreenButtonComponent.html":{}}}],["button.component.ts:61",{"_index":2006,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:79",{"_index":2002,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button.component.ts:83",{"_index":2000,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["button/fullscreen",{"_index":284,"title":{},"body":{"modules/ControllersModule.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["button/rot",{"_index":278,"title":{},"body":{"modules/ControllersModule.html":{},"components/RotationButtonComponent.html":{}}}],["button/sidebar",{"_index":281,"title":{},"body":{"modules/ControllersModule.html":{},"components/SidebarButtonComponent.html":{}}}],["buttons.compon",{"_index":283,"title":{},"body":{"modules/ControllersModule.html":{}}}],["buttons.component.html",{"_index":2378,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.scss",{"_index":2377,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.t",{"_index":2376,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.ts:18",{"_index":2383,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.ts:19",{"_index":2379,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.ts:25",{"_index":2380,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.ts:27",{"_index":2381,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons.component.ts:39",{"_index":2382,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["buttons/zoom",{"_index":282,"title":{},"body":{"modules/ControllersModule.html":{},"components/ZoomButtonsComponent.html":{}}}],["bz",{"_index":1618,"title":{},"body":{"components/MapComponent.html":{}}}],["c",{"_index":1309,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["c.check",{"_index":1143,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["c.children",{"_index":1145,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["c.layer",{"_index":1142,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["c.layer.layer.setvisible(vis",{"_index":1144,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["call",{"_index":2484,"title":{},"body":{"index.html":{}}}],["canva",{"_index":1715,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["case",{"_index":320,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolState.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["catch",{"_index":682,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["catch(err",{"_index":2518,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":791,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["catcherror(error",{"_index":822,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["center",{"_index":1435,"title":{},"body":{"interfaces/MangolConfigView.html":{},"injectables/MapService.html":{},"components/MeasureResultsComponent.html":{},"index.html":{}}}],["center[0",{"_index":1869,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["center[1",{"_index":1872,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["chang",{"_index":808,"title":{},"body":{"injectables/FeatureinfoService.html":{},"components/MapComponent.html":{},"index.html":{}}}],["check",{"_index":1097,"title":{},"body":{"components/LayerGroupComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"index.html":{}}}],["checklistselect",{"_index":1161,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["children",{"_index":1102,"title":{},"body":{"components/LayerGroupComponent.html":{},"classes/LayertreeItemNode.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["choos",{"_index":538,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{}}}],["chooselay",{"_index":518,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["choosemod",{"_index":1764,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["circl",{"_index":1778,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State-7.html":{}}}],["circle.getcent",{"_index":1866,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["circlestyl",{"_index":1909,"title":{},"body":{"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["class",{"_index":0,"title":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/LayertreeItemNode.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"classes/MangolMap.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{}},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{},"overview.html":{}}}],["class=\"mangol",{"_index":1148,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["classes/lay",{"_index":29,"title":{},"body":{"classes/AddLayers.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"classes/HasFeatureinfo.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayertreeComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"components/TransparencyComponent.html":{}}}],["classes/layergroup",{"_index":1196,"title":{},"body":{"components/LayertreeComponent.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["classes/layertre",{"_index":1029,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{}}}],["clear",{"_index":57,"title":{},"body":{"classes/ClearState.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoSelectComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureSelectComponent.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{}}}],["clear_stat",{"_index":55,"title":{},"body":{"classes/ClearState.html":{}}}],["clearselect",{"_index":519,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{}}}],["clearstat",{"_index":52,"title":{"classes/ClearState.html":{}},"body":{"classes/ClearState.html":{},"modules/MangolModule.html":{},"interfaces/MangolState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["clearstate(reduc",{"_index":2422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["click",{"_index":539,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{}}}],["click,\\nfinish",{"_index":1783,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["clickfunct",{"_index":602,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["clickonmap",{"_index":520,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{}}}],["clockwis",{"_index":1881,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["close",{"_index":309,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{},"index.html":{}}}],["closesnackbar",{"_index":308,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{}}}],["cluster_controllersmodul",{"_index":255,"title":{},"body":{"modules/ControllersModule.html":{},"overview.html":{}}}],["cluster_controllersmodule_declar",{"_index":256,"title":{},"body":{"modules/ControllersModule.html":{},"overview.html":{}}}],["cluster_controllersmodule_export",{"_index":257,"title":{},"body":{"modules/ControllersModule.html":{},"overview.html":{}}}],["cluster_editmodul",{"_index":467,"title":{},"body":{"modules/EditModule.html":{},"overview.html":{}}}],["cluster_editmodule_declar",{"_index":468,"title":{},"body":{"modules/EditModule.html":{},"overview.html":{}}}],["cluster_editmodule_export",{"_index":469,"title":{},"body":{"modules/EditModule.html":{},"overview.html":{}}}],["cluster_featureinfomodul",{"_index":559,"title":{},"body":{"modules/FeatureinfoModule.html":{},"overview.html":{}}}],["cluster_featureinfomodule_declar",{"_index":560,"title":{},"body":{"modules/FeatureinfoModule.html":{},"overview.html":{}}}],["cluster_featureinfomodule_export",{"_index":562,"title":{},"body":{"modules/FeatureinfoModule.html":{},"overview.html":{}}}],["cluster_featureinfomodule_import",{"_index":561,"title":{},"body":{"modules/FeatureinfoModule.html":{},"overview.html":{}}}],["cluster_featureinfomodule_provid",{"_index":563,"title":{},"body":{"modules/FeatureinfoModule.html":{},"overview.html":{}}}],["cluster_layertreemodul",{"_index":1261,"title":{},"body":{"modules/LayertreeModule.html":{},"overview.html":{}}}],["cluster_layertreemodule_declar",{"_index":1262,"title":{},"body":{"modules/LayertreeModule.html":{},"overview.html":{}}}],["cluster_layertreemodule_export",{"_index":1264,"title":{},"body":{"modules/LayertreeModule.html":{},"overview.html":{}}}],["cluster_layertreemodule_import",{"_index":1263,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["cluster_mangolmodul",{"_index":1472,"title":{},"body":{"modules/MangolModule.html":{},"overview.html":{}}}],["cluster_mangolmodule_declar",{"_index":1473,"title":{},"body":{"modules/MangolModule.html":{},"overview.html":{}}}],["cluster_mangolmodule_export",{"_index":1475,"title":{},"body":{"modules/MangolModule.html":{},"overview.html":{}}}],["cluster_mangolmodule_import",{"_index":1474,"title":{},"body":{"modules/MangolModule.html":{},"overview.html":{}}}],["cluster_mangolmodule_provid",{"_index":1476,"title":{},"body":{"modules/MangolModule.html":{},"overview.html":{}}}],["cluster_mapmodul",{"_index":1700,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1701,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1702,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_measuremodul",{"_index":1799,"title":{},"body":{"modules/MeasureModule.html":{},"overview.html":{}}}],["cluster_measuremodule_declar",{"_index":1800,"title":{},"body":{"modules/MeasureModule.html":{},"overview.html":{}}}],["cluster_measuremodule_export",{"_index":1801,"title":{},"body":{"modules/MeasureModule.html":{},"overview.html":{}}}],["cluster_printmodul",{"_index":1948,"title":{},"body":{"modules/PrintModule.html":{},"overview.html":{}}}],["cluster_printmodule_declar",{"_index":1949,"title":{},"body":{"modules/PrintModule.html":{},"overview.html":{}}}],["cluster_printmodule_export",{"_index":1950,"title":{},"body":{"modules/PrintModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":2142,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":2143,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":2144,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_provid",{"_index":2145,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tabsmodul",{"_index":2335,"title":{},"body":{"modules/TabsModule.html":{},"overview.html":{}}}],["cluster_tabsmodule_declar",{"_index":2336,"title":{},"body":{"modules/TabsModule.html":{},"overview.html":{}}}],["cluster_tabsmodule_export",{"_index":2338,"title":{},"body":{"modules/TabsModule.html":{},"overview.html":{}}}],["cluster_tabsmodule_import",{"_index":2337,"title":{},"body":{"modules/TabsModule.html":{}}}],["collaps",{"_index":1101,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolConfigSidebar.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"classes/Toggle.html":{},"index.html":{}}}],["collapse_al",{"_index":1125,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{}}}],["collapseal",{"_index":1215,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["collect",{"_index":1409,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{}}}],["color",{"_index":427,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"injectables/StyleService.html":{},"index.html":{}}}],["color[0",{"_index":2233,"title":{},"body":{"injectables/StyleService.html":{}}}],["color[1",{"_index":2234,"title":{},"body":{"injectables/StyleService.html":{}}}],["color[2",{"_index":2235,"title":{},"body":{"injectables/StyleService.html":{}}}],["column",{"_index":827,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["combin",{"_index":2440,"title":{},"body":{"index.html":{}}}],["combinedsubscript",{"_index":350,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["combinelatest",{"_index":383,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["combinelatest(this.lay",{"_index":733,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["combinelatest(this.map",{"_index":1758,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["combinelatest(this.tab",{"_index":660,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["command",{"_index":2469,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":261,"title":{},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{}}}],["compon",{"_index":60,"title":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":190,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["components/featureinfo",{"_index":586,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["components/featurenfo",{"_index":593,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["components/lay",{"_index":1277,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["components/layer/layer.compon",{"_index":1281,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["components/layertre",{"_index":1282,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["components/measur",{"_index":1803,"title":{},"body":{"modules/MeasureModule.html":{}}}],["config",{"_index":75,"title":{},"body":{"components/ControllersComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"classes/SetConfig.html":{},"interfaces/State.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["config.act",{"_index":2166,"title":{},"body":{"interfaces/State.html":{}}}],["config.hasownproperty('dictionari",{"_index":1751,"title":{},"body":{"components/MeasureComponent.html":{}}}],["config.interfac",{"_index":1510,"title":{},"body":{"interfaces/MangolReady.html":{}}}],["config.map",{"_index":141,"title":{},"body":{"components/ControllersComponent.html":{},"components/LayertreeComponent.html":{},"components/MapComponent.html":{}}}],["config.map.control",{"_index":142,"title":{},"body":{"components/ControllersComponent.html":{}}}],["config.map.controllers.fullscreen",{"_index":174,"title":{},"body":{"components/ControllersComponent.html":{}}}],["config.map.controllers.posit",{"_index":158,"title":{},"body":{"components/ControllersComponent.html":{}}}],["config.map.controllers.rot",{"_index":166,"title":{},"body":{"components/ControllersComponent.html":{}}}],["config.map.controllers.scalebar",{"_index":155,"title":{},"body":{"components/ControllersComponent.html":{}}}],["config.map.controllers.zoom",{"_index":144,"title":{},"body":{"components/ControllersComponent.html":{}}}],["config.map.lay",{"_index":1206,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["config.map.layers.slice().revers",{"_index":1207,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["config.sidebar",{"_index":2302,"title":{},"body":{"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["config.sidebar.toolbar",{"_index":2303,"title":{},"body":{"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["config.sidebar.toolbar.featureinfo",{"_index":2311,"title":{},"body":{"components/TabsComponent.html":{}}}],["config.sidebar.toolbar.layertre",{"_index":2304,"title":{},"body":{"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["config.sidebar.toolbar.layertree.detail",{"_index":2366,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["config.sidebar.toolbar.layertree.details.opac",{"_index":2367,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["config.sidebar.toolbar.measur",{"_index":2318,"title":{},"body":{"components/TabsComponent.html":{}}}],["config.sidebar.toolbar.print",{"_index":2325,"title":{},"body":{"components/TabsComponent.html":{}}}],["config/config.reduc",{"_index":1564,"title":{},"body":{"interfaces/MangolState.html":{}}}],["configact",{"_index":1333,"title":{},"body":{"components/MangolComponent.html":{},"injectables/MangolService.html":{},"classes/SetConfig.html":{},"interfaces/State.html":{},"miscellaneous/typealiases.html":{}}}],["configactions.configact",{"_index":2168,"title":{},"body":{"interfaces/State.html":{}}}],["configactions.set_config",{"_index":2169,"title":{},"body":{"interfaces/State.html":{}}}],["configactions.setconfig(config",{"_index":1544,"title":{},"body":{"injectables/MangolService.html":{}}}],["configactions.setconfig(this.config",{"_index":1344,"title":{},"body":{"components/MangolComponent.html":{}}}],["configmap",{"_index":1654,"title":{},"body":{"components/MapComponent.html":{}}}],["configmap.lay",{"_index":1656,"title":{},"body":{"components/MapComponent.html":{}}}],["configmap.view",{"_index":1655,"title":{},"body":{"components/MapComponent.html":{}}}],["configreduc",{"_index":2167,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["configreducer(st",{"_index":2423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["configsubscript",{"_index":76,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["configur",{"_index":541,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"index.html":{}}}],["consol",{"_index":2506,"title":{},"body":{"index.html":{}}}],["console.log('i",{"_index":2571,"title":{},"body":{"index.html":{}}}],["console.log(err));product",{"_index":2519,"title":{},"body":{"index.html":{}}}],["console.log(error",{"_index":701,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{}}}],["console.log(nod",{"_index":1213,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["const",{"_index":33,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["constructor(dialog",{"_index":1011,"title":{},"body":{"components/LayerComponent.html":{}}}],["constructor(dialogref",{"_index":832,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["constructor(opt",{"_index":1440,"title":{},"body":{"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"classes/MangolMap.html":{}}}],["constructor(payload",{"_index":15,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{}}}],["constructor(priv",{"_index":117,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MeasureSelectComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["constructor(publ",{"_index":39,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{}}}],["constructor(stor",{"_index":86,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["control",{"_index":70,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"modules/MangolModule.html":{},"interfaces/MangolState.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["controllers'},{'nam",{"_index":191,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["controllers.act",{"_index":291,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllers.anim",{"_index":1928,"title":{},"body":{"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["controllers.compon",{"_index":275,"title":{},"body":{"modules/ControllersModule.html":{}}}],["controllers.component.html",{"_index":74,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllers.component.scss",{"_index":72,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllers.interfac",{"_index":107,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{},"components/ZoomButtonsComponent.html":{}}}],["controllers.interface.t",{"_index":1418,"title":{},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{}}}],["controllers/controllers.reduc",{"_index":1566,"title":{},"body":{"interfaces/MangolState.html":{}}}],["controllersact",{"_index":110,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"components/RotationButtonComponent.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{},"miscellaneous/typealiases.html":{}}}],["controllersactions.controllersact",{"_index":317,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.reset",{"_index":137,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_fullscreen_dictionari",{"_index":345,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_position_coordin",{"_index":335,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_position_dictionari",{"_index":336,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_position_precis",{"_index":334,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_rotation_dictionari",{"_index":339,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_rotation_valu",{"_index":341,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_scalebar",{"_index":331,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_fullscreen",{"_index":342,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_fullscreen_tooltip",{"_index":344,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_posit",{"_index":332,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_rot",{"_index":337,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_rotation_tooltip",{"_index":340,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_tooltip",{"_index":330,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_show_zoom",{"_index":326,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.set_zoom_dictionari",{"_index":329,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["controllersactions.setfullscreendictionari",{"_index":179,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setpositioncoordinates(coord",{"_index":1689,"title":{},"body":{"components/MapComponent.html":{}}}],["controllersactions.setpositiondictionari",{"_index":165,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setpositionprecis",{"_index":163,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setrotationdictionari",{"_index":171,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setrotationvalue(targetview.getrot",{"_index":2024,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["controllersactions.setrotationvalue(view.getrot",{"_index":2011,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["controllersactions.setscalebar(config.map.controllers.scalebar",{"_index":156,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowfullscreen(fullscreenoptions.show",{"_index":177,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowfullscreentooltip",{"_index":182,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowposition(positionoptions.show",{"_index":161,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowrotation(rotationoptions.show",{"_index":169,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowrotationtooltip",{"_index":173,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowtooltip(zoomoptions.showtooltip",{"_index":153,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setshowzoom(zoomoptions.show",{"_index":149,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllersactions.setzoomdictionary(zoomoptions.dictionari",{"_index":151,"title":{},"body":{"components/ControllersComponent.html":{}}}],["controllerscompon",{"_index":61,"title":{"components/ControllersComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["controllersmodul",{"_index":250,"title":{"modules/ControllersModule.html":{}},"body":{"modules/ControllersModule.html":{},"modules/MangolModule.html":{},"modules.html":{},"overview.html":{}}}],["controllersreduc",{"_index":316,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["controllersreducer(st",{"_index":2424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controllersstatemodel",{"_index":286,"title":{"interfaces/ControllersStateModel.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["coord",{"_index":685,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MapComponent.html":{}}}],["coordin",{"_index":293,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"injectables/FeatureinfoService.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{}}}],["coords.foreach((coord",{"_index":1691,"title":{},"body":{"components/MapComponent.html":{}}}],["copi",{"_index":306,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["copycoordin",{"_index":307,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["copycoordinatestoclipboard",{"_index":1916,"title":{},"body":{"components/PositionComponent.html":{}}}],["copyiconid",{"_index":1914,"title":{},"body":{"components/PositionComponent.html":{}}}],["core",{"_index":2584,"title":{},"body":{"index.html":{}}}],["creat",{"_index":619,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["crosshair",{"_index":666,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["csv",{"_index":545,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["csv;charset=utf",{"_index":884,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["csvcontent",{"_index":874,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["current",{"_index":540,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"index.html":{}}}],["cursor",{"_index":347,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/FeatureinfoResultsComponent.html":{},"modules/MangolModule.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureResultsComponent.html":{},"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{}}}],["cursor'},{'nam",{"_index":193,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["cursor.act",{"_index":2171,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursor.component.html",{"_index":349,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursor.component.scss",{"_index":348,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursor/cursor.compon",{"_index":276,"title":{},"body":{"modules/ControllersModule.html":{}}}],["cursor/cursor.reduc",{"_index":1568,"title":{},"body":{"interfaces/MangolState.html":{}}}],["cursoract",{"_index":387,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayertreeComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{},"miscellaneous/typealiases.html":{}}}],["cursoractions.cursoract",{"_index":2173,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursoractions.reset_mod",{"_index":2178,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursoractions.resetmod",{"_index":673,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayertreeComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["cursoractions.set_lay",{"_index":2182,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursoractions.set_mod",{"_index":2174,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursoractions.set_vis",{"_index":2181,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursoractions.setlayer(lay",{"_index":408,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursoractions.setmod",{"_index":664,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["cursoractions.setvisible(ent",{"_index":1699,"title":{},"body":{"components/MapComponent.html":{}}}],["cursoractions.setvisible(tru",{"_index":667,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["cursorcompon",{"_index":192,"title":{"components/CursorComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["cursorlay",{"_index":2175,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursorlayer.getsource().refresh",{"_index":2177,"title":{},"body":{"interfaces/State-2.html":{}}}],["cursormod",{"_index":370,"title":{"interfaces/CursorMode.html":{}},"body":{"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/MapComponent.html":{},"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{}}}],["cursormode.cursor",{"_index":1678,"title":{},"body":{"components/MapComponent.html":{}}}],["cursormode.hasownproperty('cursor",{"_index":1677,"title":{},"body":{"components/MapComponent.html":{}}}],["cursormodesubscript",{"_index":1600,"title":{},"body":{"components/MapComponent.html":{}}}],["cursorreduc",{"_index":2172,"title":{},"body":{"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["cursorreducer(st",{"_index":2425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cursorstyl",{"_index":1371,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/MapComponent.html":{}}}],["cursortext",{"_index":1808,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["custom",{"_index":2573,"title":{},"body":{"index.html":{}}}],["d.hasownproperty(c",{"_index":880,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["d[c",{"_index":881,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["data",{"_index":739,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"injectables/LayertreeService.html":{}}}],["data.foreach(d",{"_index":877,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["data.item",{"_index":1080,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["data.lay",{"_index":1081,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["data.layer.nam",{"_index":891,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["data.push(item",{"_index":1302,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["dataproject",{"_index":776,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["datasourc",{"_index":828,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["date().gettime()}.csv",{"_index":890,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["declar",{"_index":252,"title":{},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"overview.html":{}}}],["decor",{"_index":838,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["deep",{"_index":2588,"title":{},"body":{"index.html":{}}}],["default",{"_index":24,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["defaultdataproject",{"_index":819,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["defaultmap",{"_index":1601,"title":{},"body":{"components/MapComponent.html":{}}}],["defin",{"_index":17,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["deg",{"_index":1877,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["delet",{"_index":863,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/MapComponent.html":{}}}],["demo",{"_index":2459,"title":{},"body":{"index.html":{}}}],["depend",{"_index":251,"title":{"dependencies.html":{}},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":453,"title":{},"body":{"components/DescriptionComponent.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"interfaces/OlxLayerLayerOptions.html":{},"interfaces/State-5.html":{}}}],["description'},{'nam",{"_index":195,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["description.component.html",{"_index":455,"title":{},"body":{"components/DescriptionComponent.html":{}}}],["description.component.scss",{"_index":454,"title":{},"body":{"components/DescriptionComponent.html":{}}}],["descriptioncompon",{"_index":194,"title":{"components/DescriptionComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["design",{"_index":2437,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1032,"title":{},"body":{"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{},"index.html":{}}}],["detailitem",{"_index":1004,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["details'},{'nam",{"_index":216,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["details.compon",{"_index":1037,"title":{},"body":{"components/LayerComponent.html":{},"modules/LayertreeModule.html":{}}}],["details.component.html",{"_index":1074,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details.component.scss",{"_index":1073,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details.component.t",{"_index":1072,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":1078,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1075,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1077,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1076,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["details/description/description.compon",{"_index":1285,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["details/description/description.component.t",{"_index":452,"title":{},"body":{"components/DescriptionComponent.html":{}}}],["details/description/description.component.ts:13",{"_index":458,"title":{},"body":{"components/DescriptionComponent.html":{}}}],["details/description/description.component.ts:9",{"_index":457,"title":{},"body":{"components/DescriptionComponent.html":{}}}],["details/lay",{"_index":1036,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"modules/LayertreeModule.html":{}}}],["details/legend/legend.compon",{"_index":1278,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["details/legend/legend.component.t",{"_index":1312,"title":{},"body":{"components/LegendComponent.html":{}}}],["details/legend/legend.component.ts:12",{"_index":1316,"title":{},"body":{"components/LegendComponent.html":{}}}],["details/legend/legend.component.ts:8",{"_index":1315,"title":{},"body":{"components/LegendComponent.html":{}}}],["details/transparency/transparency.compon",{"_index":1279,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["details/transparency/transparency.component.t",{"_index":2349,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:17",{"_index":2355,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:19",{"_index":2362,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:20",{"_index":2361,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:21",{"_index":2363,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:22",{"_index":2364,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:23",{"_index":2365,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:25",{"_index":2354,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:49",{"_index":2357,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:53",{"_index":2356,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["details/transparency/transparency.component.ts:59",{"_index":2360,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["develop",{"_index":2548,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":544,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/LayerComponent.html":{},"interfaces/State-3.html":{}}}],["dialog'},{'nam",{"_index":207,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["dialog.compon",{"_index":592,"title":{},"body":{"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["dialog.component.html",{"_index":826,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.scss",{"_index":825,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.t",{"_index":824,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":841,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":837,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":834,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":842,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":839,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":836,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog.component.ts:57",{"_index":835,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["dialog/featureinfo",{"_index":591,"title":{},"body":{"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{}}}],["dialogref",{"_index":829,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1062,"title":{},"body":{"components/LayerComponent.html":{}}}],["dict",{"_index":1792,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["dict.collapseal",{"_index":1126,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["dict.expandal",{"_index":1123,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["dict.showlayerdescript",{"_index":1051,"title":{},"body":{"components/LayerComponent.html":{}}}],["dict.showlayertranspar",{"_index":1046,"title":{},"body":{"components/LayerComponent.html":{}}}],["dict.turnlayersoff",{"_index":1131,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["dict.turnlayerson",{"_index":1129,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["dict[key",{"_index":1795,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["dictionari",{"_index":298,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"classes/Reset.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{}}}],["dictionary.clearselect",{"_index":766,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["dictionary.showallresult",{"_index":751,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["dictionary.zoomtofeatur",{"_index":749,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["dictionary[mode.typ",{"_index":1896,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["dictionarysubscript",{"_index":1005,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["direct",{"_index":188,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["disabl",{"_index":529,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["displaylimit",{"_index":1006,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["displayvalu",{"_index":1809,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["distanc",{"_index":1765,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["doc",{"_index":2546,"title":{},"body":{"index.html":{}}}],["document",{"_index":924,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["document.createrang",{"_index":1930,"title":{},"body":{"components/PositionComponent.html":{}}}],["document.documentelement.getelementsbytagname('mangol')[0",{"_index":927,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["document.execcommand('copi",{"_index":1935,"title":{},"body":{"components/PositionComponent.html":{}}}],["document.getelementbyid(this.copyiconid",{"_index":1931,"title":{},"body":{"components/PositionComponent.html":{}}}],["document.getelementbyid(this.target",{"_index":2039,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["dom",{"_index":63,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["don't",{"_index":856,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["doubl",{"_index":1784,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["down",{"_index":2473,"title":{},"body":{"index.html":{}}}],["draw",{"_index":1810,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["drawstarttext",{"_index":1766,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["drawstarttextradiu",{"_index":1767,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["durat",{"_index":721,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["dx",{"_index":1867,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["dy",{"_index":1870,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["dynam",{"_index":2514,"title":{},"body":{"index.html":{}}}],["e",{"_index":1854,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["e.featur",{"_index":1855,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["e.feature.setproperti",{"_index":1883,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["easili",{"_index":2538,"title":{},"body":{"index.html":{}}}],["east",{"_index":1882,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["edit",{"_index":460,"title":{},"body":{"components/EditComponent.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["edit'},{'nam",{"_index":197,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["edit.compon",{"_index":471,"title":{},"body":{"modules/EditModule.html":{}}}],["edit.component.html",{"_index":462,"title":{},"body":{"components/EditComponent.html":{}}}],["edit.component.scss",{"_index":461,"title":{},"body":{"components/EditComponent.html":{}}}],["edit/edit.modul",{"_index":2342,"title":{},"body":{"modules/TabsModule.html":{}}}],["editcompon",{"_index":196,"title":{"components/EditComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["editmodul",{"_index":466,"title":{"modules/EditModule.html":{}},"body":{"modules/EditModule.html":{},"modules/TabsModule.html":{},"modules.html":{},"overview.html":{}}}],["element",{"_index":187,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["element.textcontent.trim",{"_index":1937,"title":{},"body":{"components/PositionComponent.html":{}}}],["element[column",{"_index":893,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["empti",{"_index":2563,"title":{},"body":{"index.html":{}}}],["enabl",{"_index":2510,"title":{},"body":{"index.html":{}}}],["enableprodmod",{"_index":2512,"title":{},"body":{"index.html":{}}}],["enablerot",{"_index":1721,"title":{},"body":{"injectables/MapService.html":{}}}],["enter",{"_index":1624,"title":{},"body":{"components/MapComponent.html":{}}}],["entrycompon",{"_index":567,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{}}}],["epsg:3857",{"_index":1717,"title":{},"body":{"injectables/MapService.html":{}}}],["epsg:900913",{"_index":2541,"title":{},"body":{"index.html":{}}}],["error",{"_index":683,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/MeasureResultsComponent.html":{},"index.html":{}}}],["event",{"_index":622,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MapComponent.html":{}}}],["everyth",{"_index":2552,"title":{},"body":{"index.html":{}}}],["evt",{"_index":362,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/RotationButtonComponent.html":{},"components/TransparencyComponent.html":{}}}],["evt.coordin",{"_index":686,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["evt.drag",{"_index":1687,"title":{},"body":{"components/MapComponent.html":{}}}],["evt.pixel",{"_index":708,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["evt.target",{"_index":1857,"title":{},"body":{"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{}}}],["evt.typ",{"_index":1134,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["evt.valu",{"_index":764,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["exampl",{"_index":2455,"title":{},"body":{"index.html":{}}}],["exchangemetersandkilomet",{"_index":1898,"title":{},"body":{"injectables/MeasureService.html":{}}}],["exchangemetersandkilometers(valu",{"_index":1901,"title":{},"body":{"injectables/MeasureService.html":{}}}],["exchangesqmetersandsqkilomet",{"_index":1899,"title":{},"body":{"injectables/MeasureService.html":{}}}],["exchangesqmetersandsqkilometers(valu",{"_index":1903,"title":{},"body":{"injectables/MeasureService.html":{}}}],["expand",{"_index":1100,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["expand_al",{"_index":1122,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{}}}],["expandal",{"_index":1089,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["expandall(group",{"_index":1096,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{},"overview.html":{}}}],["exportcsv",{"_index":831,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["exporttocsv",{"_index":521,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":2507,"title":{},"body":{"index.html":{}}}],["extend",{"_index":292,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"interfaces/OlxLayerLayerOptions.html":{},"interfaces/State-1.html":{}}}],["extent",{"_index":647,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["fals",{"_index":297,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/PositionComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"index.html":{}}}],["feat",{"_index":406,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["feat.getgeometri",{"_index":1858,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["featur",{"_index":364,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"classes/HasFeatureinfo.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{},"injectables/StyleService.html":{}}}],["feature.getproperti",{"_index":729,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{}}}],["feature.on('chang",{"_index":1856,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["feature_count",{"_index":801,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["featurecollect",{"_index":786,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["featureinfo",{"_index":201,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["featureinfo'},{'nam",{"_index":199,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["featureinfo.act",{"_index":526,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfo.compon",{"_index":596,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["featureinfo.component.html",{"_index":474,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["featureinfo.component.scss",{"_index":473,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["featureinfo.hasownproperty('dis",{"_index":2314,"title":{},"body":{"components/TabsComponent.html":{}}}],["featureinfo.hasownproperty('titl",{"_index":2316,"title":{},"body":{"components/TabsComponent.html":{}}}],["featureinfo.reduc",{"_index":950,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["featureinfo.servic",{"_index":597,"title":{},"body":{"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["featureinfo/featureinfo.modul",{"_index":2346,"title":{},"body":{"modules/TabsModule.html":{}}}],["featureinfo/featureinfo.reduc",{"_index":1570,"title":{},"body":{"interfaces/MangolState.html":{}}}],["featureinfoact",{"_index":489,"title":{},"body":{"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["featureinfoactions.featureinfoact",{"_index":547,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.has_featureinfo",{"_index":548,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.hasfeatureinfo(hasfeatureinfo",{"_index":2312,"title":{},"body":{"components/TabsComponent.html":{}}}],["featureinfoactions.set_dictionari",{"_index":556,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_dis",{"_index":549,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_hover_color",{"_index":557,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_lay",{"_index":552,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_max_featur",{"_index":551,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_results_item",{"_index":555,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_results_lay",{"_index":554,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_selected_lay",{"_index":553,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.set_titl",{"_index":550,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["featureinfoactions.setdisabled(featureinfo.dis",{"_index":2315,"title":{},"body":{"components/TabsComponent.html":{}}}],["featureinfoactions.setresultsitem",{"_index":663,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["featureinfoactions.setresultsitems(featur",{"_index":699,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["featureinfoactions.setresultsitems(vectorfeatur",{"_index":712,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["featureinfoactions.setresultslayer(resultslay",{"_index":508,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["featureinfoactions.setselectedlayer(lay",{"_index":765,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{}}}],["featureinfoactions.setselectedlayer(nul",{"_index":763,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{}}}],["featureinfoactions.settitle(featureinfo.titl",{"_index":2317,"title":{},"body":{"components/TabsComponent.html":{}}}],["featureinfocompon",{"_index":198,"title":{"components/FeatureinfoComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["featureinfodictionari",{"_index":491,"title":{"interfaces/FeatureinfoDictionary.html":{}},"body":{"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{}}}],["featureinfodis",{"_index":2239,"title":{},"body":{"components/TabsComponent.html":{}}}],["featureinfomodul",{"_index":558,"title":{"modules/FeatureinfoModule.html":{}},"body":{"modules/FeatureinfoModule.html":{},"modules/TabsModule.html":{},"modules.html":{},"overview.html":{}}}],["featureinforeduc",{"_index":546,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"miscellaneous/functions.html":{}}}],["featureinforeducer(st",{"_index":2426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["featureinforesultscompon",{"_index":200,"title":{"components/FeatureinfoResultsComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["featureinfoselectcompon",{"_index":203,"title":{"components/FeatureinfoSelectComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["featureinfoservic",{"_index":565,"title":{"injectables/FeatureinfoService.html":{}},"body":{"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"overview.html":{}}}],["featureinfotabledialogcompon",{"_index":205,"title":{"components/FeatureinfoTableDialogComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["featureinfotitl",{"_index":2240,"title":{},"body":{"components/TabsComponent.html":{}}}],["featurenfo",{"_index":209,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["featurenfotablecompon",{"_index":208,"title":{"components/FeaturenfoTableComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["featureproject",{"_index":777,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["field",{"_index":576,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["file_copi",{"_index":1941,"title":{},"body":{"components/PositionComponent.html":{}}}],["fill",{"_index":378,"title":{},"body":{"components/CursorComponent.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{},"index.html":{}}}],["fillcolor",{"_index":1384,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["filter",{"_index":384,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayertreeComponent.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/TabsComponent.html":{}}}],["filter(m",{"_index":1686,"title":{},"body":{"components/MapComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["filter(r",{"_index":675,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["find",{"_index":1647,"title":{},"body":{"components/MapComponent.html":{}}}],["fine",{"_index":2529,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1785,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["first",{"_index":2476,"title":{},"body":{"index.html":{}}}],["fix",{"_index":2508,"title":{},"body":{"index.html":{}}}],["follow",{"_index":2492,"title":{},"body":{"index.html":{}}}],["font",{"_index":421,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["fonticon",{"_index":1048,"title":{},"body":{"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["fontset",{"_index":1047,"title":{},"body":{"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["foreach((c",{"_index":1308,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["foreach(l",{"_index":1837,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["form",{"_index":2561,"title":{},"body":{"index.html":{}}}],["format",{"_index":818,"title":{},"body":{"injectables/FeatureinfoService.html":{},"components/MapComponent.html":{}}}],["format.readfeatures(featurecollect",{"_index":821,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["formattedcoord",{"_index":1690,"title":{},"body":{"components/MapComponent.html":{}}}],["formattedcoords.push(coord",{"_index":1693,"title":{},"body":{"components/MapComponent.html":{}}}],["found",{"_index":542,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"interfaces/State-3.html":{}}}],["fromconfig",{"_index":1563,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromconfig.configreduc",{"_index":1583,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromconfig.st",{"_index":1552,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromcontrol",{"_index":1565,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromcontrollers.controllersreduc",{"_index":1584,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromcontrollers.st",{"_index":1553,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromcursor",{"_index":1567,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromcursor.cursorreduc",{"_index":1585,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromcursor.st",{"_index":1554,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromfeatureinfo",{"_index":1569,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromfeatureinfo.featureinforeduc",{"_index":1586,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromfeatureinfo.st",{"_index":1555,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlay",{"_index":1571,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlayers.layersreduc",{"_index":1587,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlayers.st",{"_index":1556,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlayertre",{"_index":1573,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlayertree.layertreereduc",{"_index":1588,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlayertree.st",{"_index":1557,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromlonlat",{"_index":1711,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["fromlonlat([19.3956393810065",{"_index":1718,"title":{},"body":{"injectables/MapService.html":{}}}],["frommangol",{"_index":115,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["frommap",{"_index":1576,"title":{},"body":{"interfaces/MangolState.html":{}}}],["frommap.mapreduc",{"_index":1589,"title":{},"body":{"interfaces/MangolState.html":{}}}],["frommap.st",{"_index":1558,"title":{},"body":{"interfaces/MangolState.html":{}}}],["frommeasur",{"_index":1578,"title":{},"body":{"interfaces/MangolState.html":{}}}],["frommeasure.measurereduc",{"_index":1590,"title":{},"body":{"interfaces/MangolState.html":{}}}],["frommeasure.st",{"_index":1559,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromprint",{"_index":1580,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromprint.printreduc",{"_index":1591,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromprint.st",{"_index":1560,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromsidebar",{"_index":1542,"title":{},"body":{"injectables/MangolService.html":{},"interfaces/MangolState.html":{}}}],["fromsidebar.sidebarreduc",{"_index":1592,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fromsidebar.st",{"_index":1561,"title":{},"body":{"interfaces/MangolState.html":{}}}],["fsdoc",{"_index":923,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.exitfullscreen",{"_index":932,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.fullscreenel",{"_index":937,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.mozcancelfullscreen",{"_index":934,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.mozfullscreenel",{"_index":938,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.msexitfullscreen",{"_index":933,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.msfullscreenel",{"_index":940,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.webkitexitfullscreen",{"_index":935,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdoc.webkitfullscreenel",{"_index":939,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocelem",{"_index":926,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocelem.mozrequestfullscreen",{"_index":930,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocelem.msrequestfullscreen",{"_index":929,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocelem.requestfullscreen",{"_index":928,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocelem.webkitrequestfullscreen",{"_index":931,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocument",{"_index":907,"title":{"interfaces/FsDocument.html":{}},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["fsdocumentel",{"_index":916,"title":{"interfaces/FsDocumentElement.html":{}},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["full",{"_index":641,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["fullscreen",{"_index":77,"title":{},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/Reset.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-1.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["fullscreen_exit",{"_index":945,"title":{},"body":{"components/FullscreenButtonComponent.html":{}}}],["fullscreenbuttoncompon",{"_index":211,"title":{"components/FullscreenButtonComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["fullscreenopt",{"_index":175,"title":{},"body":{"components/ControllersComponent.html":{}}}],["fullscreenoptions.dictionari",{"_index":180,"title":{},"body":{"components/ControllersComponent.html":{}}}],["fullscreenoptions.hasownproperty('dictionari",{"_index":178,"title":{},"body":{"components/ControllersComponent.html":{}}}],["fullscreenoptions.hasownproperty('show",{"_index":176,"title":{},"body":{"components/ControllersComponent.html":{}}}],["fullscreenoptions.hasownproperty('showtooltip",{"_index":181,"title":{},"body":{"components/ControllersComponent.html":{}}}],["fullscreenoptions.showtooltip",{"_index":183,"title":{},"body":{"components/ControllersComponent.html":{}}}],["funciton",{"_index":627,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["function",{"_index":315,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["further",{"_index":2533,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2601,"title":{},"body":{"index.html":{}}}],["g",{"_index":888,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["geojson",{"_index":780,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["geojsonformat",{"_index":770,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["geoloc",{"_index":1777,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["geometri",{"_index":444,"title":{},"body":{"components/CursorComponent.html":{}}}],["geometrynam",{"_index":1773,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["geometrytyp",{"_index":1770,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["gerg",{"_index":2616,"title":{},"body":{"index.html":{}}}],["get",{"_index":784,"title":{"index.html":{}},"body":{"injectables/FeatureinfoService.html":{},"index.html":{}}}],["get(url",{"_index":812,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["getarray",{"_index":1836,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["getchildren",{"_index":1162,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["getcod",{"_index":697,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{}}}],["getconfig",{"_index":1514,"title":{},"body":{"injectables/MangolService.html":{}}}],["getdefaultmap",{"_index":1706,"title":{},"body":{"injectables/MapService.html":{}}}],["getexpansionpaneltitl",{"_index":609,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["getexpansionpaneltitle$(featur",{"_index":630,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["getfeatureinfo",{"_index":692,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{}}}],["getfeatureinfo(url",{"_index":775,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["getfeatureinfourl",{"_index":771,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["getfeatureinfourl$(lay",{"_index":690,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{}}}],["getmap",{"_index":1515,"title":{},"body":{"injectables/MangolService.html":{}}}],["getproject",{"_index":696,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{}}}],["getrotationstyl",{"_index":1996,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["getrotationstyle(rot",{"_index":2001,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["getsidebar",{"_index":1516,"title":{},"body":{"injectables/MangolService.html":{}}}],["getstyl",{"_index":1236,"title":{},"body":{"components/LayertreeItemComponent.html":{},"injectables/MeasureService.html":{}}}],["getstyle(featur",{"_index":1905,"title":{},"body":{"injectables/MeasureService.html":{}}}],["getview",{"_index":695,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{}}}],["given",{"_index":620,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MapComponent.html":{}}}],["group",{"_index":1085,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"interfaces/OlxLayerLayerOptions.html":{},"interfaces/State-5.html":{}}}],["group'",{"_index":1111,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group'},{'nam",{"_index":218,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["group.check",{"_index":1139,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.children",{"_index":1138,"title":{},"body":{"components/LayerGroupComponent.html":{},"injectables/LayertreeService.html":{}}}],["group.children.foreach((c",{"_index":1698,"title":{},"body":{"components/MapComponent.html":{}}}],["group.children.foreach(c",{"_index":1140,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.children.length",{"_index":1305,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["group.compon",{"_index":1280,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["group.component.html",{"_index":1087,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.scss",{"_index":1086,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.t",{"_index":1084,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:112",{"_index":1098,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:128",{"_index":1113,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:19",{"_index":1094,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:21",{"_index":1095,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:23",{"_index":1115,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:24",{"_index":1117,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:25",{"_index":1116,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:27",{"_index":1114,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:28",{"_index":1093,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:37",{"_index":1104,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:71",{"_index":1103,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:80",{"_index":1109,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.component.ts:88",{"_index":1106,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["group.nam",{"_index":1156,"title":{},"body":{"components/LayerGroupComponent.html":{},"injectables/LayertreeService.html":{}}}],["group/lay",{"_index":1083,"title":{},"body":{"components/LayerGroupComponent.html":{},"modules/LayertreeModule.html":{}}}],["groupnod",{"_index":1234,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["gui",{"_index":2443,"title":{},"body":{"index.html":{}}}],["gulyá",{"_index":2618,"title":{},"body":{"index.html":{}}}],["gwc",{"_index":802,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["hammerj",{"_index":1481,"title":{},"body":{"modules/MangolModule.html":{},"dependencies.html":{}}}],["handler",{"_index":1614,"title":{},"body":{"components/MapComponent.html":{}}}],["has_featureinfo",{"_index":949,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["has_layertre",{"_index":975,"title":{},"body":{"classes/HasLayertree.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{}}}],["has_measur",{"_index":987,"title":{},"body":{"classes/HasMeasure.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{}}}],["has_print",{"_index":998,"title":{},"body":{"classes/HasPrint.html":{},"classes/SetDisabled-3.html":{},"classes/SetTitle-3.html":{}}}],["hasbackdrop",{"_index":1061,"title":{},"body":{"components/LayerComponent.html":{}}}],["hasfeatureinfo",{"_index":527,"title":{"classes/HasFeatureinfo.html":{}},"body":{"interfaces/FeatureinfoDictionary.html":{},"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["haslayertre",{"_index":971,"title":{"classes/HasLayertree.html":{}},"body":{"classes/HasLayertree.html":{},"interfaces/LayertreeDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hasmeasur",{"_index":983,"title":{"classes/HasMeasure.html":{}},"body":{"classes/HasMeasure.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hasnestedchild",{"_index":1163,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["hasprint",{"_index":994,"title":{"classes/HasPrint.html":{}},"body":{"classes/HasPrint.html":{},"classes/SetDisabled-3.html":{},"classes/SetTitle-3.html":{},"interfaces/State-8.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hasquerycolumn",{"_index":850,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["hassidebar",{"_index":78,"title":{},"body":{"components/ControllersComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"interfaces/State-9.html":{}}}],["heavi",{"_index":2547,"title":{},"body":{"index.html":{}}}],["height",{"_index":2594,"title":{},"body":{"index.html":{}}}],["helper",{"_index":2537,"title":{},"body":{"index.html":{}}}],["here",{"_index":2457,"title":{},"body":{"index.html":{}}}],["hide",{"_index":636,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["hidefeatureonmap",{"_index":610,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["hidefeatureonmap(featur",{"_index":634,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["highli",{"_index":2543,"title":{},"body":{"index.html":{}}}],["highlightfeatur",{"_index":1372,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["hit",{"_index":625,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["hittoler",{"_index":711,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["hood",{"_index":2452,"title":{},"body":{"index.html":{}}}],["hostbind",{"_index":1323,"title":{},"body":{"components/MangolComponent.html":{},"components/TabsComponent.html":{}}}],["hostbinding('class",{"_index":1338,"title":{},"body":{"components/MangolComponent.html":{},"components/TabsComponent.html":{}}}],["hover",{"_index":637,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["hovercolor",{"_index":534,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"injectables/StyleService.html":{}}}],["hoverstyl",{"_index":1373,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"injectables/StyleService.html":{}}}],["hoverstyle(featur",{"_index":2220,"title":{},"body":{"injectables/StyleService.html":{}}}],["html",{"_index":186,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["htmldocument",{"_index":910,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["htmlelement",{"_index":917,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["http",{"_index":772,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["httpclient",{"_index":773,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["httpclientmodul",{"_index":568,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["i+1}}/{{(resultsfeatur",{"_index":746,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["i.children",{"_index":1246,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["i.lay",{"_index":1248,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["icon",{"_index":2222,"title":{},"body":{"injectables/StyleService.html":{}}}],["imag",{"_index":2230,"title":{},"body":{"injectables/StyleService.html":{}}}],["implement",{"_index":6,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["includ",{"_index":2582,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["individu",{"_index":633,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["info_format",{"_index":799,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["initi",{"_index":2551,"title":{},"body":{"index.html":{}}}],["initialst",{"_index":295,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["initialstate.fullscreen",{"_index":325,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["initialstate.mod",{"_index":2180,"title":{},"body":{"interfaces/State-2.html":{}}}],["initialstate.posit",{"_index":323,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["initialstate.rot",{"_index":324,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["initialstate.scalebar",{"_index":322,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["initialstate.zoom",{"_index":321,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["initialtext",{"_index":1811,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["inject",{"_index":768,"title":{"injectables/FeatureinfoService.html":{},"injectables/LayertreeService.html":{},"injectables/MangolService.html":{},"injectables/MapService.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{}},"body":{"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/LayerDetailsComponent.html":{},"injectables/LayertreeService.html":{},"injectables/MangolService.html":{},"injectables/MapService.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{},"index.html":{},"overview.html":{}}}],["inject(mat_dialog_data",{"_index":849,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["input",{"_index":456,"title":{},"body":{"components/DescriptionComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/TransparencyComponent.html":{},"index.html":{}}}],["insert",{"_index":1780,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["instal",{"_index":2477,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1298,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["instead",{"_index":805,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["intend",{"_index":2604,"title":{},"body":{"index.html":{}}}],["interact",{"_index":2442,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":285,"title":{"interfaces/ControllersStateModel.html":{},"interfaces/CursorMode.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"interfaces/LayerDetailItem.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/MangolReady.html":{},"interfaces/MangolState.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/OlxLayerLayerOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/CursorMode.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"interfaces/LayerDetailItem.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/MangolReady.html":{},"interfaces/MangolState.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/OlxLayerLayerOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"index.html":{},"overview.html":{}}}],["interfaces/config",{"_index":106,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{},"components/TabsComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["interfaces/config.interfac",{"_index":109,"title":{},"body":{"components/ControllersComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"classes/SetConfig.html":{},"interfaces/State.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["interfaces/cursor",{"_index":386,"title":{},"body":{"components/CursorComponent.html":{},"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{}}}],["interfaces/lay",{"_index":1031,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["interfaces/layergroup",{"_index":1119,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["intern",{"_index":2550,"title":{},"body":{"index.html":{}}}],["isaccordionmulti",{"_index":1382,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["isfullscreen",{"_index":936,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["issu",{"_index":2522,"title":{},"body":{"index.html":{}}}],["item",{"_index":959,"title":{},"body":{"classes/HasFeatureinfo.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"components/TabsComponent.html":{}}}],["item'},{'nam",{"_index":223,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["item.children",{"_index":1303,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["item.compon",{"_index":1283,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["item.component.html",{"_index":1233,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.scss",{"_index":1232,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.t",{"_index":1231,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:16",{"_index":1238,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:18",{"_index":1239,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:20",{"_index":1243,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:22",{"_index":1244,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:23",{"_index":1237,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:29",{"_index":1242,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.component.ts:39",{"_index":1240,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["item.fonticon",{"_index":1068,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["item.fontset",{"_index":1067,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["item.interfac",{"_index":1033,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{}}}],["item.interface.t",{"_index":1071,"title":{},"body":{"interfaces/LayerDetailItem.html":{},"interfaces/LayerGroupDetailItem.html":{}}}],["item.text",{"_index":1069,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["item/layertre",{"_index":1230,"title":{},"body":{"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{}}}],["items.foreach((i",{"_index":1297,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["iter",{"_index":1631,"title":{},"body":{"components/MapComponent.html":{}}}],["itself",{"_index":2558,"title":{},"body":{"index.html":{}}}],["j",{"_index":804,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["js",{"_index":2489,"title":{},"body":{"index.html":{}}}],["json",{"_index":815,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["jspdf",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":854,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["keyboard_arrow_left",{"_index":2164,"title":{},"body":{"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{}}}],["known",{"_index":2505,"title":{},"body":{"index.html":{}}}],["l",{"_index":704,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MapComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["l.getzindex",{"_index":1838,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["label",{"_index":1396,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["lay",{"_index":709,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["layer",{"_index":34,"title":{},"body":{"classes/AddLayers.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetVisible.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["layer'},{'nam",{"_index":214,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["layer.component.html",{"_index":1003,"title":{},"body":{"components/LayerComponent.html":{}}}],["layer.component.scss",{"_index":1002,"title":{},"body":{"components/LayerComponent.html":{}}}],["layer.getsourc",{"_index":1846,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["layer.getsource().addfeature(featur",{"_index":741,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["layer.getsource().clear",{"_index":1840,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["layer.getsource().refresh",{"_index":2179,"title":{},"body":{"interfaces/State-2.html":{}}}],["layer.getsource().removefeature(featur",{"_index":742,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["layer.lay",{"_index":705,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["layer.layer.getsourc",{"_index":796,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["layer.layer.getvis",{"_index":1301,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["layer.layer['typ",{"_index":687,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["layer.nam",{"_index":767,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/LayerComponent.html":{},"injectables/LayertreeService.html":{}}}],["layer.query",{"_index":495,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["layer.querycolumn",{"_index":902,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["layer.querycolumns.indexof(key",{"_index":905,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["layer.querycolumns.length",{"_index":903,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["layer.querysr",{"_index":694,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["layer.setvisible(vis",{"_index":417,"title":{},"body":{"components/CursorComponent.html":{}}}],["layer.setzindex(maxzindex",{"_index":1839,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["layer?.nam",{"_index":1082,"title":{},"body":{"components/LayerDetailsComponent.html":{}}}],["layeract",{"_index":1738,"title":{},"body":{"components/MeasureComponent.html":{}}}],["layeractions.setmeasurelayer(lay",{"_index":1755,"title":{},"body":{"components/MeasureComponent.html":{}}}],["layeractions.setmeasurelayer(nul",{"_index":1759,"title":{},"body":{"components/MeasureComponent.html":{}}}],["layercompon",{"_index":213,"title":{"components/LayerComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["layerdetailitem",{"_index":1018,"title":{"interfaces/LayerDetailItem.html":{}},"body":{"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{}}}],["layerdetailscompon",{"_index":215,"title":{"components/LayerDetailsComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["layergroup",{"_index":979,"title":{},"body":{"classes/HasLayertree.html":{},"components/MapComponent.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{}}}],["layergroupcompon",{"_index":217,"title":{"components/LayerGroupComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["layergroupdetailitem",{"_index":1105,"title":{"interfaces/LayerGroupDetailItem.html":{}},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{}}}],["layernod",{"_index":1235,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["layers.act",{"_index":2184,"title":{},"body":{"interfaces/State-4.html":{}}}],["layers.foreach(l",{"_index":1672,"title":{},"body":{"components/MapComponent.html":{}}}],["layers.intefac",{"_index":1413,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{}}}],["layers.inteface.t",{"_index":1391,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["layers.push(lay",{"_index":1697,"title":{},"body":{"components/MapComponent.html":{}}}],["layers/layers.reduc",{"_index":1572,"title":{},"body":{"interfaces/MangolState.html":{}}}],["layers_clear",{"_index":1132,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["layersact",{"_index":41,"title":{},"body":{"classes/AddLayers.html":{},"components/MapComponent.html":{},"classes/SetMeasureLayer.html":{},"interfaces/State-4.html":{},"miscellaneous/typealiases.html":{}}}],["layersactions.add_lay",{"_index":2187,"title":{},"body":{"interfaces/State-4.html":{}}}],["layersactions.addlayers(lay",{"_index":1662,"title":{},"body":{"components/MapComponent.html":{}}}],["layersactions.layersact",{"_index":2186,"title":{},"body":{"interfaces/State-4.html":{}}}],["layersactions.set_measure_lay",{"_index":2188,"title":{},"body":{"interfaces/State-4.html":{}}}],["layersreduc",{"_index":2185,"title":{},"body":{"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["layersreducer(st",{"_index":2427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["layerssubscript",{"_index":1602,"title":{},"body":{"components/MapComponent.html":{}}}],["layersubscript",{"_index":351,"title":{},"body":{"components/CursorComponent.html":{}}}],["layertre",{"_index":222,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasLayertree.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["layertree'},{'nam",{"_index":220,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["layertree.act",{"_index":1220,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertree.anim",{"_index":1035,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["layertree.compon",{"_index":1284,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["layertree.component.html",{"_index":1160,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["layertree.component.scss",{"_index":1159,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["layertree.hasownproperty('dis",{"_index":2307,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertree.hasownproperty('titl",{"_index":2309,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertree.reduc",{"_index":977,"title":{},"body":{"classes/HasLayertree.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{}}}],["layertree.servic",{"_index":1198,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["layertree/layertree.modul",{"_index":2343,"title":{},"body":{"modules/TabsModule.html":{}}}],["layertree/layertree.reduc",{"_index":1574,"title":{},"body":{"interfaces/MangolState.html":{}}}],["layertreeact",{"_index":982,"title":{},"body":{"classes/HasLayertree.html":{},"interfaces/LayertreeDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["layertreeactions.has_layertre",{"_index":1224,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertreeactions.haslayertree(haslayertre",{"_index":2305,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertreeactions.layertreeact",{"_index":1223,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertreeactions.set_dictionari",{"_index":1227,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertreeactions.set_dis",{"_index":1225,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertreeactions.set_titl",{"_index":1226,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertreeactions.setdisabled(layertree.dis",{"_index":2308,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertreeactions.settitle(layertree.titl",{"_index":2310,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertreeactions.show_layergroup_badg",{"_index":1228,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["layertreecompon",{"_index":219,"title":{"components/LayertreeComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["layertreedictionari",{"_index":976,"title":{"interfaces/LayertreeDictionary.html":{}},"body":{"classes/HasLayertree.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-5.html":{}}}],["layertreedis",{"_index":2241,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertreeitemcompon",{"_index":221,"title":{"components/LayertreeItemComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["layertreeitemnod",{"_index":1013,"title":{"classes/LayertreeItemNode.html":{}},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{}}}],["layertreemodul",{"_index":1260,"title":{"modules/LayertreeModule.html":{}},"body":{"modules/LayertreeModule.html":{},"modules/TabsModule.html":{},"modules.html":{},"overview.html":{}}}],["layertreereduc",{"_index":1222,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["layertreereducer(st",{"_index":2428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["layertreeservic",{"_index":1169,"title":{"injectables/LayertreeService.html":{}},"body":{"components/LayertreeComponent.html":{},"injectables/LayertreeService.html":{}}}],["layertreetitl",{"_index":2242,"title":{},"body":{"components/TabsComponent.html":{}}}],["layertreevisibilityiconstatetrigg",{"_index":1034,"title":{},"body":{"components/LayerComponent.html":{}}}],["left",{"_index":443,"title":{},"body":{"components/CursorComponent.html":{},"components/LayertreeItemComponent.html":{}}}],["legend",{"_index":185,"title":{},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"modules/SharedModule.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":225,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["legend.component.html",{"_index":1314,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.scss",{"_index":1313,"title":{},"body":{"components/LegendComponent.html":{}}}],["legendcompon",{"_index":224,"title":{"components/LegendComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["level",{"_index":1092,"title":{},"body":{"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{}}}],["librari",{"_index":2439,"title":{},"body":{"index.html":{}}}],["light",{"_index":2591,"title":{},"body":{"index.html":{}}}],["lime",{"_index":2587,"title":{},"body":{"index.html":{}}}],["limitto",{"_index":2153,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["line",{"_index":1768,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/ScalebarComponent.html":{},"interfaces/State-7.html":{}}}],["linestr",{"_index":1775,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State-7.html":{}}}],["linestring.getlength",{"_index":1861,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["liter",{"_index":1432,"title":{},"body":{"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["live",{"_index":2454,"title":{},"body":{"index.html":{}}}],["load",{"_index":1668,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["localhost",{"_index":2503,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":2468,"title":{},"body":{"index.html":{}}}],["logger",{"_index":1494,"title":{},"body":{"modules/MangolModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["logger(reduc",{"_index":1502,"title":{},"body":{"modules/MangolModule.html":{},"miscellaneous/functions.html":{}}}],["m",{"_index":402,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["m.addlayer(lay",{"_index":409,"title":{},"body":{"components/CursorComponent.html":{},"components/MeasureComponent.html":{}}}],["m.addlayer(resultslay",{"_index":507,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["m.foreachfeatureatpixel",{"_index":707,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["m.getlay",{"_index":1835,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["m.getlayers().getarray",{"_index":1832,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["m.getview",{"_index":2010,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["m.getview().anim",{"_index":2384,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["m.getview().fit(feature.getgeometry().getext",{"_index":743,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["m.getview().getresolut",{"_index":798,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["m.getview().getzoom",{"_index":2385,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["m.getview().un('change:rot",{"_index":2016,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["m.on('pointermov",{"_index":410,"title":{},"body":{"components/CursorComponent.html":{},"components/MapComponent.html":{}}}],["m.on('singleclick",{"_index":671,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["m.removelayer(measurelay",{"_index":1760,"title":{},"body":{"components/MeasureComponent.html":{}}}],["m.removelayer(resultslay",{"_index":514,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["m.un('pointermov",{"_index":1680,"title":{},"body":{"components/MapComponent.html":{}}}],["m.un('singleclick",{"_index":669,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["m.updates",{"_index":1361,"title":{},"body":{"components/MangolComponent.html":{}}}],["m_",{"_index":2444,"title":{},"body":{"index.html":{}}}],["main",{"_index":2498,"title":{},"body":{"index.html":{}}}],["main.t",{"_index":2486,"title":{},"body":{"index.html":{}}}],["make",{"_index":2526,"title":{},"body":{"index.html":{}}}],["manag",{"_index":2453,"title":{},"body":{"index.html":{}}}],["mangol",{"_index":56,"title":{},"body":{"classes/ClearState.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["mangol';and",{"_index":2487,"title":{},"body":{"index.html":{}}}],["mangol'},{'nam",{"_index":227,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["mangol.act",{"_index":1575,"title":{},"body":{"interfaces/MangolState.html":{}}}],["mangol.compon",{"_index":1495,"title":{},"body":{"modules/MangolModule.html":{}}}],["mangol.component.html",{"_index":1319,"title":{},"body":{"components/MangolComponent.html":{}}}],["mangol.component.scss",{"_index":1318,"title":{},"body":{"components/MangolComponent.html":{}}}],["mangol.scss",{"_index":2499,"title":{},"body":{"index.html":{}}}],["mangol/scss/mangol';aft",{"_index":2500,"title":{},"body":{"index.html":{}}}],["mangol/scss/mangol';if",{"_index":2593,"title":{},"body":{"index.html":{}}}],["mangol/scss/mangol';pres",{"_index":2600,"title":{},"body":{"index.html":{}}}],["mangolact",{"_index":59,"title":{},"body":{"classes/ClearState.html":{},"components/MangolComponent.html":{},"interfaces/MangolState.html":{},"miscellaneous/typealiases.html":{}}}],["mangolactions.clear_st",{"_index":1594,"title":{},"body":{"interfaces/MangolState.html":{}}}],["mangolactions.clearst",{"_index":1343,"title":{},"body":{"components/MangolComponent.html":{}}}],["mangolactions.mangolact",{"_index":1593,"title":{},"body":{"interfaces/MangolState.html":{}}}],["mangolcompon",{"_index":226,"title":{"components/MangolComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["mangolconfig",{"_index":108,"title":{"interfaces/MangolConfig.html":{}},"body":{"components/ControllersComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"classes/SetConfig.html":{},"interfaces/State.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"index.html":{}}}],["mangolconfigfeatureinfoitem",{"_index":1367,"title":{"interfaces/MangolConfigFeatureInfoItem.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/TabsComponent.html":{}}}],["mangolconfiglay",{"_index":1390,"title":{"interfaces/MangolConfigLayer.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangolconfiglayer2",{"_index":1406,"title":{"interfaces/MangolConfigLayer2.html":{}},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{}}}],["mangolconfiglayercolumn",{"_index":1393,"title":{"interfaces/MangolConfigLayerColumn.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangolconfiglayergroup",{"_index":1397,"title":{"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangolconfiglayertre",{"_index":1398,"title":{"interfaces/MangolConfigLayertree.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangolconfiglayertreeitem",{"_index":1381,"title":{"interfaces/MangolConfigLayertreeItem.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/TabsComponent.html":{}}}],["mangolconfigmap",{"_index":1363,"title":{"interfaces/MangolConfigMap.html":{}},"body":{"interfaces/MangolConfig.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"components/MapComponent.html":{}}}],["mangolconfigmapcontrol",{"_index":1414,"title":{"interfaces/MangolConfigMapControllers.html":{}},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{}}}],["mangolconfigmapmouseposit",{"_index":1415,"title":{"interfaces/MangolConfigMapMousePosition.html":{}},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{}}}],["mangolconfigmeasureitem",{"_index":1383,"title":{"interfaces/MangolConfigMeasureItem.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/MeasureComponent.html":{},"components/TabsComponent.html":{}}}],["mangolconfigprintitem",{"_index":1388,"title":{"interfaces/MangolConfigPrintItem.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/TabsComponent.html":{}}}],["mangolconfigsidebar",{"_index":1364,"title":{"interfaces/MangolConfigSidebar.html":{}},"body":{"interfaces/MangolConfig.html":{},"interfaces/MangolConfigSidebar.html":{}}}],["mangolconfigtoolbar",{"_index":1389,"title":{"interfaces/MangolConfigToolbar.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["mangolconfigtoolbaritem",{"_index":1370,"title":{"interfaces/MangolConfigToolbarItem.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["mangolconfigtoolbarlayertreedetail",{"_index":1378,"title":{"interfaces/MangolConfigToolbarLayertreeDetails.html":{}},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["mangolconfigview",{"_index":1433,"title":{"interfaces/MangolConfigView.html":{}},"body":{"interfaces/MangolConfigView.html":{}}}],["mangolcontrollersfullscreendictionari",{"_index":1423,"title":{"interfaces/MangolControllersFullScreenDictionary.html":{}},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["mangolcontrollersfullscreenopt",{"_index":105,"title":{"interfaces/MangolControllersFullScreenOptions.html":{}},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["mangolcontrollersopt",{"_index":1421,"title":{"interfaces/MangolControllersOptions.html":{}},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{}}}],["mangolcontrollerspositiondictionari",{"_index":1424,"title":{"interfaces/MangolControllersPositionDictionary.html":{}},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["mangolcontrollerspositionopt",{"_index":289,"title":{"interfaces/MangolControllersPositionOptions.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["mangolcontrollerspositionstatemodel",{"_index":112,"title":{"interfaces/MangolControllersPositionStateModel.html":{}},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"components/MapComponent.html":{},"components/PositionComponent.html":{},"interfaces/State-1.html":{}}}],["mangolcontrollersrotationdictionari",{"_index":1425,"title":{"interfaces/MangolControllersRotationDictionary.html":{}},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["mangolcontrollersrotationopt",{"_index":290,"title":{"interfaces/MangolControllersRotationOptions.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["mangolcontrollersrotationstatemodel",{"_index":113,"title":{"interfaces/MangolControllersRotationStateModel.html":{}},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"components/RotationButtonComponent.html":{},"interfaces/State-1.html":{}}}],["mangolcontrollersscalebaropt",{"_index":288,"title":{"interfaces/MangolControllersScalebarOptions.html":{}},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{}}}],["mangolcontrollerstileloadopt",{"_index":1420,"title":{"interfaces/MangolControllersTileloadOptions.html":{}},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{}}}],["mangolcontrollerszoomdictionari",{"_index":1422,"title":{"interfaces/MangolControllersZoomDictionary.html":{}},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["mangolcontrollerszoomopt",{"_index":104,"title":{"interfaces/MangolControllersZoomOptions.html":{}},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{},"components/ZoomButtonsComponent.html":{}}}],["mangollay",{"_index":16,"title":{"classes/MangolLayer.html":{}},"body":{"classes/AddLayers.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"classes/HasFeatureinfo.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayertreeComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"components/TransparencyComponent.html":{},"index.html":{}}}],["mangollayergroup",{"_index":1195,"title":{"classes/MangolLayerGroup.html":{}},"body":{"components/LayertreeComponent.html":{},"injectables/LayertreeService.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangollayergroupopt",{"_index":1405,"title":{"interfaces/MangolLayerGroupOptions.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangollayeropt",{"_index":1402,"title":{"interfaces/MangolLayerOptions.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["mangolmap",{"_index":1468,"title":{"classes/MangolMap.html":{}},"body":{"classes/MangolMap.html":{}}}],["mangolmapservic",{"_index":1511,"title":{},"body":{"interfaces/MangolReady.html":{}}}],["mangolmetareduc",{"_index":1506,"title":{},"body":{"modules/MangolModule.html":{}}}],["mangolmodul",{"_index":1471,"title":{"modules/MangolModule.html":{}},"body":{"modules/MangolModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mangolor",{"_index":2479,"title":{},"body":{"index.html":{}}}],["mangolreadi",{"_index":1508,"title":{"interfaces/MangolReady.html":{}},"body":{"interfaces/MangolReady.html":{}}}],["mangolreduc",{"_index":1500,"title":{},"body":{"modules/MangolModule.html":{},"interfaces/MangolState.html":{}}}],["mangolservic",{"_index":1512,"title":{"injectables/MangolService.html":{}},"body":{"injectables/MangolService.html":{},"index.html":{}}}],["mangolst",{"_index":1501,"title":{"interfaces/MangolState.html":{}},"body":{"modules/MangolModule.html":{},"interfaces/MangolState.html":{}}}],["mangoly",{"_index":2481,"title":{},"body":{"index.html":{}}}],["map",{"_index":46,"title":{},"body":{"classes/AddMap.html":{},"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"classes/Reset.html":{},"components/ScalebarComponent.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["map'},{'nam",{"_index":229,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["map(maxfeatur",{"_index":795,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["map(respons",{"_index":816,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["map(selectedlay",{"_index":724,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["map.act",{"_index":2191,"title":{},"body":{"interfaces/State-6.html":{}}}],["map.addinteraction(this.draw",{"_index":1885,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["map.addlayer(l.lay",{"_index":1673,"title":{},"body":{"components/MapComponent.html":{}}}],["map.addlayer(lay",{"_index":1844,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["map.compon",{"_index":1704,"title":{},"body":{"modules/MapModule.html":{}}}],["map.component.html",{"_index":1599,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1598,"title":{},"body":{"components/MapComponent.html":{}}}],["map.getlayers().foreach(l",{"_index":1669,"title":{},"body":{"components/MapComponent.html":{}}}],["map.interfac",{"_index":1365,"title":{},"body":{"interfaces/MangolConfig.html":{},"components/MapComponent.html":{}}}],["map.interface.t",{"_index":1407,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{}}}],["map.removeinteraction(this.draw",{"_index":1887,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["map.removelayer(l",{"_index":1670,"title":{},"body":{"components/MapComponent.html":{}}}],["map.removelayer(lay",{"_index":1886,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["map.servic",{"_index":1644,"title":{},"body":{"components/MapComponent.html":{}}}],["map/map.reduc",{"_index":1577,"title":{},"body":{"interfaces/MangolState.html":{}}}],["map/map.servic",{"_index":1197,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["mapact",{"_index":51,"title":{},"body":{"classes/AddMap.html":{},"components/MapComponent.html":{},"interfaces/State-6.html":{},"miscellaneous/typealiases.html":{}}}],["mapactions.add_map",{"_index":2194,"title":{},"body":{"interfaces/State-6.html":{}}}],["mapactions.addmap",{"_index":1659,"title":{},"body":{"components/MapComponent.html":{}}}],["mapactions.mapact",{"_index":2193,"title":{},"body":{"interfaces/State-6.html":{}}}],["mapcompon",{"_index":228,"title":{"components/MapComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["maplay",{"_index":1831,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["maplayers.length",{"_index":1834,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["mapmodul",{"_index":1477,"title":{"modules/MapModule.html":{}},"body":{"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules.html":{},"overview.html":{}}}],["mapreduc",{"_index":2192,"title":{},"body":{"interfaces/State-6.html":{},"miscellaneous/functions.html":{}}}],["mapreducer(st",{"_index":2429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapservic",{"_index":1170,"title":{"injectables/MapService.html":{}},"body":{"components/LayertreeComponent.html":{},"interfaces/MangolReady.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{}}}],["mapsubscript",{"_index":475,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/MapComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["margin",{"_index":1241,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["mat",{"_index":2583,"title":{},"body":{"index.html":{}}}],["mat_dialog_data",{"_index":845,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["matbadge]=\"group.children.length",{"_index":1150,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["matbadgecolor=\"primari",{"_index":1152,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["matbadgemodul",{"_index":1266,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["matbadgeoverlap=\"fals",{"_index":1151,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["matbuttonmodul",{"_index":264,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/TabsModule.html":{}}}],["match",{"_index":43,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matchipsmodul",{"_index":266,"title":{},"body":{"modules/ControllersModule.html":{}}}],["matdialog",{"_index":614,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{}}}],["matdialogmodul",{"_index":1268,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["matdialogref",{"_index":833,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/LayerDetailsComponent.html":{}}}],["matdividermodul",{"_index":570,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MeasureModule.html":{}}}],["materi",{"_index":2436,"title":{},"body":{"index.html":{}}}],["matexpansionmodul",{"_index":572,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{}}}],["matformfieldmodul",{"_index":574,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["math.atan2(di",{"_index":1875,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["math.pi",{"_index":1879,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["maticonmodul",{"_index":268,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MeasureModule.html":{},"modules/TabsModule.html":{}}}],["matlistmodul",{"_index":1270,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["matmenumodul",{"_index":1272,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["matselectchang",{"_index":761,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["matselectmodul",{"_index":577,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/MeasureModule.html":{}}}],["matsidenavmodul",{"_index":1482,"title":{},"body":{"modules/MangolModule.html":{}}}],["matsliderchang",{"_index":2359,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["matslidermodul",{"_index":1274,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["matsnackbar",{"_index":613,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/PositionComponent.html":{}}}],["matsnackbarmodul",{"_index":270,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{}}}],["matsort",{"_index":843,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["matsortmodul",{"_index":579,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["mattabledatasourc",{"_index":840,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["mattabledatasource(sourc",{"_index":870,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["mattablemodul",{"_index":581,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["mattabsmodul",{"_index":2340,"title":{},"body":{"modules/TabsModule.html":{}}}],["mattoolbarmodul",{"_index":583,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/TabsModule.html":{}}}],["mattooltip]=\"group.nam",{"_index":1153,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["mattooltipdisabled]=\"group.name.length",{"_index":1155,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["mattooltipmodul",{"_index":273,"title":{},"body":{"modules/ControllersModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/TabsModule.html":{}}}],["mattooltipposition=\"abov",{"_index":1154,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["mattreemodul",{"_index":1276,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["mattreenesteddatasourc",{"_index":1187,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["max",{"_index":954,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"components/TransparencyComponent.html":{}}}],["maxfeatur",{"_index":531,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"injectables/FeatureinfoService.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/State-3.html":{}}}],["maxheight",{"_index":737,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{}}}],["maxim",{"_index":313,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["maxresolut",{"_index":1401,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["maxwidth",{"_index":735,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["maxzindex",{"_index":1833,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["mean",{"_index":2557,"title":{},"body":{"index.html":{}}}],["measur",{"_index":38,"title":{},"body":{"classes/AddLayers.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasMeasure.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["measure'},{'nam",{"_index":231,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["measure.act",{"_index":1772,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measure.compon",{"_index":1805,"title":{},"body":{"modules/MeasureModule.html":{}}}],["measure.component.html",{"_index":1724,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measure.component.scss",{"_index":1723,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measure.hasownproperty('dis",{"_index":2321,"title":{},"body":{"components/TabsComponent.html":{}}}],["measure.hasownproperty('titl",{"_index":2323,"title":{},"body":{"components/TabsComponent.html":{}}}],["measure.reduc",{"_index":990,"title":{},"body":{"classes/HasMeasure.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{}}}],["measure.servic",{"_index":1740,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["measure/measure.modul",{"_index":2344,"title":{},"body":{"modules/TabsModule.html":{}}}],["measure/measure.reduc",{"_index":1579,"title":{},"body":{"interfaces/MangolState.html":{}}}],["measureact",{"_index":993,"title":{},"body":{"classes/HasMeasure.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureSelectComponent.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["measureactions.has_measur",{"_index":1788,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measureactions.hasmeasure(hasmeasur",{"_index":2319,"title":{},"body":{"components/TabsComponent.html":{}}}],["measureactions.measureact",{"_index":1787,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measureactions.set_dictionari",{"_index":1791,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measureactions.set_dis",{"_index":1789,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measureactions.set_mod",{"_index":1797,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measureactions.set_titl",{"_index":1790,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["measureactions.setdictionary(config.dictionari",{"_index":1752,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measureactions.setdisabled(measure.dis",{"_index":2322,"title":{},"body":{"components/TabsComponent.html":{}}}],["measureactions.setmode(mod",{"_index":1895,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["measureactions.setmode(nul",{"_index":1894,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["measureactions.settitle(measure.titl",{"_index":2324,"title":{},"body":{"components/TabsComponent.html":{}}}],["measurecompon",{"_index":230,"title":{"components/MeasureComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["measureconfig",{"_index":1725,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measureconfigsubscript",{"_index":1726,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measuredictionari",{"_index":988,"title":{"interfaces/MeasureDictionary.html":{}},"body":{"classes/HasMeasure.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{},"interfaces/State-7.html":{}}}],["measuredis",{"_index":2243,"title":{},"body":{"components/TabsComponent.html":{}}}],["measureinfo",{"_index":2262,"title":{},"body":{"components/TabsComponent.html":{}}}],["measurelay",{"_index":1727,"title":{},"body":{"components/MeasureComponent.html":{},"interfaces/State-4.html":{}}}],["measuremod",{"_index":989,"title":{"interfaces/MeasureMode.html":{}},"body":{"classes/HasMeasure.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{},"interfaces/State-7.html":{}}}],["measuremodul",{"_index":1798,"title":{"modules/MeasureModule.html":{}},"body":{"modules/MeasureModule.html":{},"modules/TabsModule.html":{},"modules.html":{},"overview.html":{}}}],["measurereduc",{"_index":1786,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["measurereducer(st",{"_index":2430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["measureresultscompon",{"_index":232,"title":{"components/MeasureResultsComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["measureselectcompon",{"_index":233,"title":{"components/MeasureSelectComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["measureservic",{"_index":1479,"title":{"injectables/MeasureService.html":{}},"body":{"modules/MangolModule.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"overview.html":{}}}],["measuretitl",{"_index":2244,"title":{},"body":{"components/TabsComponent.html":{}}}],["menu",{"_index":1108,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["metadata",{"_index":68,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"pipes/ShortenPipe.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["metareduc",{"_index":1490,"title":{},"body":{"modules/MangolModule.html":{}}}],["method",{"_index":83,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"pipes/ShortenPipe.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["metric",{"_index":2041,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["min",{"_index":2352,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["minim",{"_index":314,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["minresolut",{"_index":1400,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["miscellan",{"_index":2409,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":352,"title":{},"body":{"components/CursorComponent.html":{},"classes/HasMeasure.html":{},"interfaces/MangolConfigSidebar.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetHasSidebar.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"classes/Toggle.html":{},"index.html":{}}}],["mode.geometrynam",{"_index":1847,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["mode.t",{"_index":449,"title":{},"body":{"interfaces/CursorMode.html":{}}}],["mode.typ",{"_index":1849,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["modern",{"_index":2441,"title":{},"body":{"index.html":{}}}],["modesubscript",{"_index":353,"title":{},"body":{"components/CursorComponent.html":{}}}],["modifi",{"_index":1526,"title":{},"body":{"injectables/MangolService.html":{},"index.html":{}}}],["modul",{"_index":249,"title":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"modules.html":{}},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"components/LayertreeComponent.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"modules.html":{},"overview.html":{}}}],["modules/controllers/controllers.modul",{"_index":1496,"title":{},"body":{"modules/MangolModule.html":{}}}],["modules/map/map.modul",{"_index":1497,"title":{},"body":{"modules/MangolModule.html":{}}}],["modules/measure/measure.servic",{"_index":1498,"title":{},"body":{"modules/MangolModule.html":{}}}],["modules/tabs/tabs.modul",{"_index":1499,"title":{},"body":{"modules/MangolModule.html":{}}}],["moment",{"_index":2504,"title":{},"body":{"index.html":{}}}],["more",{"_index":2607,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":1066,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["mous",{"_index":157,"title":{},"body":{"components/ControllersComponent.html":{},"components/PositionComponent.html":{}}}],["mozcancelfullscreen",{"_index":911,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["mozfullscreenel",{"_index":912,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["mozrequestfullscreen",{"_index":919,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["ms",{"_index":1774,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["msexitfullscreen",{"_index":913,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["msfullscreenel",{"_index":914,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["msrequestfullscreen",{"_index":918,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["mylay",{"_index":1694,"title":{},"body":{"components/MapComponent.html":{}}}],["n",{"_index":878,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["near",{"_index":2603,"title":{},"body":{"index.html":{}}}],["need",{"_index":628,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["nesteddatasourc",{"_index":1164,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["nestedtreecontrol",{"_index":1165,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["new",{"_index":148,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"interfaces/State-7.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["ng",{"_index":2464,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1607,"title":{},"body":{"components/MapComponent.html":{},"components/ScalebarComponent.html":{}}}],["ngmodul",{"_index":263,"title":{},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":84,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["ngoninit",{"_index":85,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["ngrx",{"_index":1493,"title":{},"body":{"modules/MangolModule.html":{},"components/MapComponent.html":{},"dependencies.html":{}}}],["ngrx/effect",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":28,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["node",{"_index":1010,"title":{},"body":{"components/LayerComponent.html":{},"components/LayertreeComponent.html":{}}}],["node.check",{"_index":1063,"title":{},"body":{"components/LayerComponent.html":{},"components/LayertreeComponent.html":{}}}],["node.children",{"_index":1183,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["node.children.length",{"_index":1185,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["node.class",{"_index":1030,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{}}}],["node.class.t",{"_index":1255,"title":{},"body":{"classes/LayertreeItemNode.html":{}}}],["node.class.ts:4",{"_index":1259,"title":{},"body":{"classes/LayertreeItemNode.html":{}}}],["node.class.ts:5",{"_index":1256,"title":{},"body":{"classes/LayertreeItemNode.html":{}}}],["node.class.ts:6",{"_index":1257,"title":{},"body":{"classes/LayertreeItemNode.html":{}}}],["node.class.ts:7",{"_index":1258,"title":{},"body":{"classes/LayertreeItemNode.html":{}}}],["node.layer.layer.setvisible(node.check",{"_index":1212,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["node_modules/jspdf/dist/jspdf.min.j",{"_index":2496,"title":{},"body":{"index.html":{}}}],["node_modules/proj4/dist/proj4.j",{"_index":2495,"title":{},"body":{"index.html":{}}}],["node_modules/rxj",{"_index":915,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["nolay",{"_index":522,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["noproptitl",{"_index":725,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["north",{"_index":311,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["notic",{"_index":2536,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2466,"title":{},"body":{"index.html":{}}}],["null",{"_index":140,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"interfaces/State.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{}}}],["null)).subscribe(m",{"_index":403,"title":{},"body":{"components/CursorComponent.html":{}}}],["number",{"_index":294,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/CursorMode.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"classes/HasFeatureinfo.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"components/MapComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"classes/Reset.html":{},"components/RotationButtonComponent.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"injectables/StyleService.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["numberoffeaturesfound",{"_index":523,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["object",{"_index":857,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/MapComponent.html":{}}}],["observ",{"_index":93,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["observableof",{"_index":1194,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["observableof(node.children",{"_index":1180,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["offseti",{"_index":441,"title":{},"body":{"components/CursorComponent.html":{}}}],["offsetx",{"_index":439,"title":{},"body":{"components/CursorComponent.html":{}}}],["ol",{"_index":1671,"title":{},"body":{"components/MapComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ol/collect",{"_index":1410,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{}}}],["ol/control/scalelin",{"_index":2035,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["ol/featur",{"_index":373,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"classes/HasFeatureinfo.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"interfaces/State-3.html":{},"injectables/StyleService.html":{}}}],["ol/format/geojson",{"_index":787,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["ol/geom/circl",{"_index":1823,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["ol/geom/geometrytyp",{"_index":1771,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["ol/geom/linestr",{"_index":1824,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["ol/geom/point",{"_index":375,"title":{},"body":{"components/CursorComponent.html":{}}}],["ol/geom/polygon",{"_index":1825,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["ol/interaction/draw",{"_index":1826,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["ol/layer/bas",{"_index":1411,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{}}}],["ol/layer/lay",{"_index":1394,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["ol/layer/til",{"_index":1710,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["ol/layer/vector",{"_index":31,"title":{},"body":{"classes/AddLayers.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"classes/HasFeatureinfo.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"classes/ResetMode.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["ol/map",{"_index":50,"title":{},"body":{"classes/AddMap.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/MangolComponent.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/ScalebarComponent.html":{},"interfaces/State-6.html":{},"components/ZoomButtonsComponent.html":{}}}],["ol/proj.j",{"_index":1712,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["ol/source/osm",{"_index":1714,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["ol/source/sourc",{"_index":1395,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["ol/source/tilewm",{"_index":789,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["ol/source/vector",{"_index":377,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/MeasureComponent.html":{}}}],["ol/style/circl",{"_index":1910,"title":{},"body":{"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["ol/style/fil",{"_index":379,"title":{},"body":{"components/CursorComponent.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["ol/style/icon",{"_index":2223,"title":{},"body":{"injectables/StyleService.html":{}}}],["ol/style/strok",{"_index":1908,"title":{},"body":{"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["ol/style/styl",{"_index":380,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["ol/style/text",{"_index":382,"title":{},"body":{"components/CursorComponent.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["ol/view",{"_index":1412,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/RotationButtonComponent.html":{},"index.html":{}}}],["olxlayerlayeropt",{"_index":1399,"title":{"interfaces/OlxLayerLayerOptions.html":{}},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["on",{"_index":2485,"title":{},"body":{"index.html":{}}}],["onchang",{"_index":2353,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["onchange(evt",{"_index":2358,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["ondestroy",{"_index":67,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["onenterorleavemap",{"_index":1608,"title":{},"body":{"components/MapComponent.html":{}}}],["onenterorleavemap(ent",{"_index":1622,"title":{},"body":{"components/MapComponent.html":{}}}],["oninit",{"_index":66,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["onlin",{"_index":2456,"title":{},"body":{"index.html":{}}}],["onmenuitemclick",{"_index":1008,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["onmenuitemclicked(evt",{"_index":1017,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["onmousemov",{"_index":355,"title":{},"body":{"components/CursorComponent.html":{}}}],["onmousemove(evt",{"_index":360,"title":{},"body":{"components/CursorComponent.html":{}}}],["onopenedchang",{"_index":1322,"title":{},"body":{"components/MangolComponent.html":{}}}],["onopenedchange(evt",{"_index":1328,"title":{},"body":{"components/MangolComponent.html":{}}}],["onselectionchang",{"_index":755,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["onselectionchanged(evt",{"_index":760,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["opac",{"_index":1049,"title":{},"body":{"components/LayerComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{},"injectables/StyleService.html":{}}}],["open",{"_index":543,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigSidebar.html":{},"injectables/MangolService.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"interfaces/State-3.html":{},"interfaces/State-9.html":{},"classes/Toggle.html":{},"index.html":{}}}],["open_in_new",{"_index":750,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["openlay",{"_index":2434,"title":{},"body":{"index.html":{}}}],["openstreetmap",{"_index":1716,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["opentabledialog",{"_index":611,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["optim",{"_index":2527,"title":{},"body":{"index.html":{}}}],["option",{"_index":22,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options.children",{"_index":1467,"title":{},"body":{"classes/MangolLayerGroup.html":{}}}],["options.detail",{"_index":1453,"title":{},"body":{"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{}}}],["options.lay",{"_index":1451,"title":{},"body":{"classes/MangolLayer.html":{}}}],["options.nam",{"_index":1450,"title":{},"body":{"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{}}}],["options.query",{"_index":1455,"title":{},"body":{"classes/MangolLayer.html":{}}}],["options.querycolumn",{"_index":1461,"title":{},"body":{"classes/MangolLayer.html":{}}}],["options.queryidproperti",{"_index":1459,"title":{},"body":{"classes/MangolLayer.html":{}}}],["options.querysr",{"_index":1457,"title":{},"body":{"classes/MangolLayer.html":{}}}],["orang",{"_index":2589,"title":{},"body":{"index.html":{}}}],["osm",{"_index":1713,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["out",{"_index":259,"title":{},"body":{"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"interfaces/State-1.html":{},"modules/TabsModule.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":1430,"title":{},"body":{"interfaces/MangolConfigSidebar.html":{},"components/MapComponent.html":{}}}],["overview",{"_index":2621,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":2575,"title":{},"body":{"index.html":{}}}],["packag",{"_index":2386,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":435,"title":{},"body":{"components/CursorComponent.html":{}}}],["padányi",{"_index":2617,"title":{},"body":{"index.html":{}}}],["page",{"_index":2467,"title":{},"body":{"index.html":{}}}],["pair",{"_index":1617,"title":{},"body":{"components/MapComponent.html":{}}}],["palett",{"_index":2579,"title":{},"body":{"index.html":{}}}],["palette($mat",{"_index":2585,"title":{},"body":{"index.html":{}}}],["panel",{"_index":2596,"title":{},"body":{"index.html":{}}}],["panelclass",{"_index":722,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/PositionComponent.html":{}}}],["param",{"_index":679,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/LayerGroupComponent.html":{},"components/MapComponent.html":{},"components/TransparencyComponent.html":{}}}],["paramet",{"_index":19,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{},"components/MangolComponent.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"classes/MangolMap.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params.showlabel",{"_index":2370,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["params.sliderstep",{"_index":2368,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["parsefloat(coord).tofixed(this.position.precis",{"_index":1692,"title":{},"body":{"components/MapComponent.html":{}}}],["payload",{"_index":11,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{}}}],["peer",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["pi",{"_index":1874,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["pipe",{"_index":674,"title":{"pipes/ShortenPipe.html":{}},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/MapComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"pipes/ShortenPipe.html":{},"overview.html":{}}}],["pipe(filter(config",{"_index":2301,"title":{},"body":{"components/TabsComponent.html":{}}}],["pipe(filter(l",{"_index":1827,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["pipe(filter(lay",{"_index":413,"title":{},"body":{"components/CursorComponent.html":{}}}],["pipe(filter(m",{"_index":505,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{}}}],["pipe(filter(measurelay",{"_index":1746,"title":{},"body":{"components/MeasureComponent.html":{}}}],["pipe(filter(mod",{"_index":1828,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["pipe(filter(modul",{"_index":1203,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["pipe(take(1",{"_index":512,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["pipes/shorten.pip",{"_index":2148,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":2155,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["placehold",{"_index":1374,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["platformbrowserdynam",{"_index":2513,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":2509,"title":{},"body":{"index.html":{}}}],["plu",{"_index":629,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["point",{"_index":374,"title":{},"body":{"components/CursorComponent.html":{}}}],["point(evt.coordin",{"_index":445,"title":{},"body":{"components/CursorComponent.html":{}}}],["pointer",{"_index":1149,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["pointermov",{"_index":1613,"title":{},"body":{"components/MapComponent.html":{}}}],["pointermovefunct",{"_index":1603,"title":{},"body":{"components/MapComponent.html":{},"components/PositionComponent.html":{}}}],["polygon",{"_index":1776,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State-7.html":{}}}],["polygon.getarea",{"_index":1864,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["posit",{"_index":79,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{}}}],["position'},{'nam",{"_index":235,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["position.component.html",{"_index":1913,"title":{},"body":{"components/PositionComponent.html":{}}}],["position.component.scss",{"_index":1912,"title":{},"body":{"components/PositionComponent.html":{}}}],["position.coordinates.join",{"_index":1940,"title":{},"body":{"components/PositionComponent.html":{}}}],["position/position.compon",{"_index":277,"title":{},"body":{"modules/ControllersModule.html":{}}}],["position[0",{"_index":1868,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["position[1",{"_index":1871,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["positioncompon",{"_index":234,"title":{"components/PositionComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["positionopt",{"_index":159,"title":{},"body":{"components/ControllersComponent.html":{}}}],["positionoptions.dictionari",{"_index":164,"title":{},"body":{"components/ControllersComponent.html":{}}}],["positionoptions.precis",{"_index":162,"title":{},"body":{"components/ControllersComponent.html":{}}}],["positionoptions.show",{"_index":160,"title":{},"body":{"components/ControllersComponent.html":{}}}],["positionsubscript",{"_index":1604,"title":{},"body":{"components/MapComponent.html":{},"components/PositionComponent.html":{}}}],["possibl",{"_index":1648,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["precis",{"_index":303,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"components/MapComponent.html":{},"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{}}}],["previous",{"_index":1667,"title":{},"body":{"components/MapComponent.html":{}}}],["primari",{"_index":2576,"title":{},"body":{"index.html":{}}}],["print",{"_index":999,"title":{},"body":{"classes/HasPrint.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolState.html":{},"components/PrintComponent.html":{},"classes/SetDisabled-3.html":{},"classes/SetTitle-3.html":{},"interfaces/State-8.html":{},"components/TabsComponent.html":{}}}],["print'},{'nam",{"_index":237,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["print.act",{"_index":2197,"title":{},"body":{"interfaces/State-8.html":{}}}],["print.compon",{"_index":1952,"title":{},"body":{"modules/PrintModule.html":{}}}],["print.component.html",{"_index":1944,"title":{},"body":{"components/PrintComponent.html":{}}}],["print.component.scss",{"_index":1943,"title":{},"body":{"components/PrintComponent.html":{}}}],["print.hasownproperty('dis",{"_index":2328,"title":{},"body":{"components/TabsComponent.html":{}}}],["print.hasownproperty('titl",{"_index":2330,"title":{},"body":{"components/TabsComponent.html":{}}}],["print/print.modul",{"_index":2345,"title":{},"body":{"modules/TabsModule.html":{}}}],["print/print.reduc",{"_index":1581,"title":{},"body":{"interfaces/MangolState.html":{}}}],["printact",{"_index":1000,"title":{},"body":{"classes/HasPrint.html":{},"classes/SetDisabled-3.html":{},"classes/SetTitle-3.html":{},"interfaces/State-8.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["printactions.has_print",{"_index":2200,"title":{},"body":{"interfaces/State-8.html":{}}}],["printactions.hasprint(hasprint",{"_index":2326,"title":{},"body":{"components/TabsComponent.html":{}}}],["printactions.printact",{"_index":2199,"title":{},"body":{"interfaces/State-8.html":{}}}],["printactions.set_dis",{"_index":2201,"title":{},"body":{"interfaces/State-8.html":{}}}],["printactions.set_titl",{"_index":2202,"title":{},"body":{"interfaces/State-8.html":{}}}],["printactions.setdisabled(print.dis",{"_index":2329,"title":{},"body":{"components/TabsComponent.html":{}}}],["printactions.settitle(print.titl",{"_index":2331,"title":{},"body":{"components/TabsComponent.html":{}}}],["printcompon",{"_index":236,"title":{"components/PrintComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["printdis",{"_index":2245,"title":{},"body":{"components/TabsComponent.html":{}}}],["printmodul",{"_index":1947,"title":{"modules/PrintModule.html":{}},"body":{"modules/PrintModule.html":{},"modules/TabsModule.html":{},"modules.html":{},"overview.html":{}}}],["printreduc",{"_index":2198,"title":{},"body":{"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["printreducer(st",{"_index":2431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["printtitl",{"_index":2246,"title":{},"body":{"components/TabsComponent.html":{}}}],["privat",{"_index":354,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"injectables/LayertreeService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"injectables/StyleService.html":{}}}],["process",{"_index":1626,"title":{},"body":{"components/MapComponent.html":{}}}],["processlay",{"_index":1287,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["processlayer(lay",{"_index":1291,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["processlayergroup",{"_index":1288,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["processlayergroup(group",{"_index":1293,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["processlayersandlayergroup",{"_index":1289,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["processlayersandlayergroups(item",{"_index":1295,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["processlayersandlayergroups(lay",{"_index":1629,"title":{},"body":{"components/MapComponent.html":{}}}],["prod",{"_index":2528,"title":{},"body":{"index.html":{}}}],["product",{"_index":2511,"title":{},"body":{"index.html":{}}}],["progress",{"_index":2553,"title":{},"body":{"index.html":{}}}],["proj4",{"_index":2406,"title":{},"body":{"dependencies.html":{}}}],["project",{"_index":1436,"title":{},"body":{"interfaces/MangolConfigView.html":{},"injectables/MapService.html":{},"index.html":{}}}],["prop",{"_index":728,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/MangolReady.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["props.hasownproperty(key",{"_index":855,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["props.hasownproperty(selectedlayer.queryidproperti",{"_index":730,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["props[key",{"_index":860,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["props[selectedlayer.queryidproperti",{"_index":732,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["props[selectedlayer.queryidproperty].tostring().length",{"_index":731,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["provid",{"_index":254,"title":{},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"overview.html":{}}}],["providedin",{"_index":792,"title":{},"body":{"injectables/FeatureinfoService.html":{},"injectables/LayertreeService.html":{},"injectables/MangolService.html":{},"injectables/MapService.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"components/PositionComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"index.html":{}}}],["pull",{"_index":2613,"title":{},"body":{"index.html":{}}}],["push",{"_index":1429,"title":{},"body":{"interfaces/MangolConfigSidebar.html":{}}}],["px",{"_index":1252,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["queryabl",{"_index":493,"title":{},"body":{"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{},"interfaces/State-3.html":{}}}],["querycolumn",{"_index":858,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["queryidproperti",{"_index":1404,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["querysr",{"_index":1403,"title":{},"body":{"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"classes/MangolLayer.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["quicksearch",{"_index":2595,"title":{},"body":{"index.html":{}}}],["r",{"_index":511,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["r.getsource().clear",{"_index":678,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["rad",{"_index":1876,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["radiu",{"_index":1769,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State-7.html":{},"injectables/StyleService.html":{}}}],["rang",{"_index":1873,"title":{},"body":{"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{}}}],["range.selectnode(el",{"_index":1932,"title":{},"body":{"components/PositionComponent.html":{}}}],["react",{"_index":1653,"title":{},"body":{"components/MapComponent.html":{}}}],["reactiv",{"_index":2555,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{}}}],["recurs",{"_index":1099,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["reduc",{"_index":1505,"title":{},"body":{"modules/MangolModule.html":{},"interfaces/MangolState.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":1595,"title":{},"body":{"interfaces/MangolState.html":{}}}],["regist",{"_index":1345,"title":{},"body":{"components/MangolComponent.html":{},"components/MapComponent.html":{}}}],["remark",{"_index":2612,"title":{},"body":{"index.html":{}}}],["remot",{"_index":781,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["remov",{"_index":509,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["renam",{"_index":2566,"title":{},"body":{"index.html":{}}}],["render",{"_index":1417,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"index.html":{}}}],["replac",{"_index":887,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["request",{"_index":779,"title":{},"body":{"injectables/FeatureinfoService.html":{},"index.html":{}}}],["requir",{"_index":2539,"title":{},"body":{"index.html":{}}}],["reset",{"_index":258,"title":{"classes/Reset.html":{}},"body":{"modules/ControllersModule.html":{},"modules/EditModule.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"modules/LayertreeModule.html":{},"modules/MangolModule.html":{},"modules/MapModule.html":{},"modules/MeasureModule.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"modules/TabsModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["reset_mod",{"_index":1989,"title":{},"body":{"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{}}}],["resetmod",{"_index":1986,"title":{"classes/ResetMode.html":{}},"body":{"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"miscellaneous/typealiases.html":{}}}],["resolut",{"_index":1437,"title":{},"body":{"interfaces/MangolConfigView.html":{}}}],["respons",{"_index":817,"title":{},"body":{"injectables/FeatureinfoService.html":{},"index.html":{}}}],["responsetyp",{"_index":814,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["result",{"_index":42,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results'},{'nam",{"_index":202,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["results.compon",{"_index":588,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/MeasureModule.html":{}}}],["results.component.html",{"_index":601,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.scss",{"_index":600,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.t",{"_index":599,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:108",{"_index":626,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:127",{"_index":618,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:194",{"_index":1819,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:199",{"_index":624,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:219",{"_index":631,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:243",{"_index":640,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:25",{"_index":616,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:26",{"_index":1815,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:265",{"_index":643,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:27",{"_index":650,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:275",{"_index":635,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:28",{"_index":652,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:285",{"_index":645,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:29",{"_index":651,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:30",{"_index":654,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:32",{"_index":648,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:34",{"_index":615,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["results.component.ts:35",{"_index":1822,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:36",{"_index":1814,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:39",{"_index":653,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:40",{"_index":649,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:43",{"_index":639,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results.component.ts:54",{"_index":1821,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:75",{"_index":1820,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:87",{"_index":1817,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["results.component.ts:89",{"_index":638,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["results/featureinfo",{"_index":587,"title":{},"body":{"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["results/measur",{"_index":1806,"title":{},"body":{"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{}}}],["resultsfeatur",{"_index":603,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["resultsitem",{"_index":532,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["resultslay",{"_index":476,"title":{},"body":{"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"interfaces/State-3.html":{}}}],["resultslayer.getsource().clear",{"_index":684,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["retriev",{"_index":632,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["return",{"_index":90,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"pipes/ShortenPipe.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["revers",{"_index":1307,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["roboto",{"_index":423,"title":{},"body":{"components/CursorComponent.html":{}}}],["root",{"_index":793,"title":{},"body":{"injectables/FeatureinfoService.html":{},"injectables/LayertreeService.html":{},"injectables/MangolService.html":{},"injectables/MapService.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{},"index.html":{}}}],["rotat",{"_index":80,"title":{},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"classes/Reset.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-1.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["rotate(${rotation}rad",{"_index":2022,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["rotatenorth",{"_index":1997,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["rotatetonorth",{"_index":310,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["rotatewithview",{"_index":438,"title":{},"body":{"components/CursorComponent.html":{}}}],["rotationbuttoncompon",{"_index":238,"title":{"components/RotationButtonComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["rotationfunct",{"_index":1994,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["rotationopt",{"_index":167,"title":{},"body":{"components/ControllersComponent.html":{}}}],["rotationoptions.dictionari",{"_index":170,"title":{},"body":{"components/ControllersComponent.html":{}}}],["rotationoptions.show",{"_index":168,"title":{},"body":{"components/ControllersComponent.html":{}}}],["rotationoptions.showtooltip",{"_index":172,"title":{},"body":{"components/ControllersComponent.html":{}}}],["run",{"_index":2458,"title":{},"body":{"index.html":{}}}],["runtim",{"_index":2559,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":103,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["rxjs/oper",{"_index":385,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["san",{"_index":424,"title":{},"body":{"components/CursorComponent.html":{}}}],["save",{"_index":2478,"title":{},"body":{"index.html":{}}}],["save_alt",{"_index":892,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["savea",{"_index":846,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["saver",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["saver/filesav",{"_index":847,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["scale",{"_index":2037,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["scalebar",{"_index":154,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"components/ScalebarComponent.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"interfaces/State-1.html":{}}}],["scalebar'},{'nam",{"_index":240,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["scalebar.component.html",{"_index":2027,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["scalebar.component.scss",{"_index":2026,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["scalebar/scalebar.compon",{"_index":280,"title":{},"body":{"modules/ControllersModule.html":{}}}],["scalebarcompon",{"_index":239,"title":{"components/ScalebarComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["scalelin",{"_index":2034,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["scalelinecontrol",{"_index":2038,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["script",{"_index":2494,"title":{},"body":{"index.html":{}}}],["scss",{"_index":2450,"title":{},"body":{"index.html":{}}}],["sec",{"_index":2568,"title":{},"body":{"index.html":{}}}],["second",{"_index":2565,"title":{},"body":{"index.html":{}}}],["see",{"_index":2461,"title":{},"body":{"index.html":{}}}],["select",{"_index":496,"title":{},"body":{"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoSelectComponent.html":{},"classes/HasFeatureinfo.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureSelectComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle.html":{},"classes/SetTitle-4.html":{},"interfaces/State-3.html":{},"interfaces/State-7.html":{},"classes/Toggle.html":{}}}],["select'},{'nam",{"_index":204,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["select(st",{"_index":393,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["select.compon",{"_index":590,"title":{},"body":{"modules/FeatureinfoModule.html":{},"modules/MeasureModule.html":{}}}],["select.component.html",{"_index":754,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["select.component.scss",{"_index":753,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["select.component.t",{"_index":752,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["select.component.ts:18",{"_index":758,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{}}}],["select.component.ts:19",{"_index":1889,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["select.component.ts:20",{"_index":757,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{}}}],["select.component.ts:21",{"_index":1892,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["select.component.ts:22",{"_index":756,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["select.component.ts:29",{"_index":1890,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["select.component.ts:30",{"_index":759,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{}}}],["select.component.ts:31",{"_index":1891,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["select.component.ts:34",{"_index":762,"title":{},"body":{"components/FeatureinfoSelectComponent.html":{}}}],["select/featureinfo",{"_index":589,"title":{},"body":{"modules/FeatureinfoModule.html":{},"components/FeatureinfoSelectComponent.html":{}}}],["select/measur",{"_index":1804,"title":{},"body":{"modules/MeasureModule.html":{},"components/MeasureSelectComponent.html":{}}}],["selecteddetail",{"_index":1007,"title":{},"body":{"components/LayerComponent.html":{}}}],["selectedlay",{"_index":477,"title":{},"body":{"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoSelectComponent.html":{},"interfaces/State-3.html":{}}}],["selectedlayer.queryidproperti",{"_index":727,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["selectedmod",{"_index":1888,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["selectedmodul",{"_index":662,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{}}}],["selectionmodel",{"_index":1190,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["selectionmodel(tru",{"_index":1178,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["selector",{"_index":69,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["selecttab",{"_index":2247,"title":{},"body":{"components/TabsComponent.html":{}}}],["selecttab(tabnam",{"_index":2252,"title":{},"body":{"components/TabsComponent.html":{}}}],["separ",{"_index":875,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["serif",{"_index":425,"title":{},"body":{"components/CursorComponent.html":{}}}],["serv",{"_index":2465,"title":{},"body":{"index.html":{}}}],["server",{"_index":782,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["servic",{"_index":2554,"title":{},"body":{"index.html":{}}}],["services/style.servic",{"_index":2149,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":37,"title":{},"body":{"classes/AddLayers.html":{},"components/FeatureinfoResultsComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerGroupComponent.html":{},"modules/MangolModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{},"index.html":{}}}],["set_collaps",{"_index":2047,"title":{},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{}}}],["set_config",{"_index":2056,"title":{},"body":{"classes/SetConfig.html":{}}}],["set_dictionari",{"_index":960,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/ShowLayergroupBadges.html":{}}}],["set_dis",{"_index":951,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/ShowLayergroupBadges.html":{}}}],["set_fullscreen_dictionari",{"_index":1970,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_has_sidebar",{"_index":2048,"title":{},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{}}}],["set_hover_color",{"_index":961,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["set_lay",{"_index":955,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/ResetMode.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetVisible.html":{}}}],["set_max_featur",{"_index":953,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["set_measure_lay",{"_index":36,"title":{},"body":{"classes/AddLayers.html":{},"classes/SetMeasureLayer.html":{}}}],["set_mod",{"_index":991,"title":{},"body":{"classes/HasMeasure.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetHasSidebar.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/Toggle.html":{}}}],["set_open",{"_index":2049,"title":{},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{}}}],["set_position_coordin",{"_index":1962,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_position_dictionari",{"_index":1963,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_position_precis",{"_index":1961,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_results_item",{"_index":958,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["set_results_lay",{"_index":957,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["set_rotation_dictionari",{"_index":1965,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_rotation_valu",{"_index":1967,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_scalebar",{"_index":1959,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_selected_lay",{"_index":956,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{}}}],["set_selected_modul",{"_index":2050,"title":{},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{}}}],["set_show_fullscreen",{"_index":1968,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_show_fullscreen_tooltip",{"_index":1969,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_show_posit",{"_index":1960,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_show_rot",{"_index":1964,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_show_rotation_tooltip",{"_index":1966,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_show_tooltip",{"_index":1957,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_show_zoom",{"_index":1955,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["set_titl",{"_index":952,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{}}}],["set_vis",{"_index":1990,"title":{},"body":{"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{}}}],["set_zoom_dictionari",{"_index":1956,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["setcollaps",{"_index":2043,"title":{"classes/SetCollapsible.html":{}},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["setconfig",{"_index":1517,"title":{"classes/SetConfig.html":{}},"body":{"injectables/MangolService.html":{},"classes/SetConfig.html":{},"miscellaneous/typealiases.html":{}}}],["setconfig(config",{"_index":1529,"title":{},"body":{"injectables/MangolService.html":{}}}],["setdictionari",{"_index":969,"title":{"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/ShowLayergroupBadges.html":{},"miscellaneous/typealiases.html":{}}}],["setdis",{"_index":962,"title":{"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/ShowLayergroupBadges.html":{},"miscellaneous/typealiases.html":{}}}],["setfullscreendictionari",{"_index":1985,"title":{"classes/SetFullscreenDictionary.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["sethassidebar",{"_index":1518,"title":{"classes/SetHasSidebar.html":{}},"body":{"injectables/MangolService.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["sethassidebar(hassidebar",{"_index":1531,"title":{},"body":{"injectables/MangolService.html":{}}}],["sethovercolor",{"_index":970,"title":{"classes/SetHoverColor.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"miscellaneous/typealiases.html":{}}}],["setlay",{"_index":965,"title":{"classes/SetLayer.html":{},"classes/SetLayers.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/ResetMode.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetVisible.html":{},"miscellaneous/typealiases.html":{}}}],["setmaxfeatur",{"_index":964,"title":{"classes/SetMaxFeatures.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"miscellaneous/typealiases.html":{}}}],["setmeasurelay",{"_index":40,"title":{"classes/SetMeasureLayer.html":{}},"body":{"classes/AddLayers.html":{},"classes/SetMeasureLayer.html":{},"miscellaneous/typealiases.html":{}}}],["setmod",{"_index":992,"title":{"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{}},"body":{"classes/HasMeasure.html":{},"classes/ResetMode.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetHasSidebar.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["setopen",{"_index":2051,"title":{"classes/SetOpened.html":{}},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["setpositioncoordin",{"_index":1977,"title":{"classes/SetPositionCoordinates.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setpositiondictionari",{"_index":1978,"title":{"classes/SetPositionDictionary.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setpositionprecis",{"_index":1976,"title":{"classes/SetPositionPrecision.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setresultsitem",{"_index":968,"title":{"classes/SetResultsItems.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"miscellaneous/typealiases.html":{}}}],["setresultslay",{"_index":967,"title":{"classes/SetResultsLayer.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"miscellaneous/typealiases.html":{}}}],["setrotationdictionari",{"_index":1980,"title":{"classes/SetRotationDictionary.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setrotationvalu",{"_index":1982,"title":{"classes/SetRotationValue.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setscalebar",{"_index":1974,"title":{"classes/SetScalebar.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setselectedlay",{"_index":966,"title":{"classes/SetSelectedLayer.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"miscellaneous/typealiases.html":{}}}],["setselectedmodul",{"_index":2052,"title":{"classes/SetSelectedModule.html":{}},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["setshowfullscreen",{"_index":1983,"title":{"classes/SetShowFullscreen.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setshowfullscreentooltip",{"_index":1984,"title":{"classes/SetShowFullscreenTooltip.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setshowposit",{"_index":1975,"title":{"classes/SetShowPosition.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setshowrot",{"_index":1979,"title":{"classes/SetShowRotation.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setshowrotationtooltip",{"_index":1981,"title":{"classes/SetShowRotationTooltip.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setshowtooltip",{"_index":1973,"title":{"classes/SetShowTooltip.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setshowzoom",{"_index":1971,"title":{"classes/SetShowZoom.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["setsidebarcollaps",{"_index":1519,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebarcollapsible(collaps",{"_index":1533,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebarmod",{"_index":1520,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebarmode(mod",{"_index":1535,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebaropen",{"_index":1521,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebaropened(open",{"_index":1537,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebartitl",{"_index":1522,"title":{},"body":{"injectables/MangolService.html":{}}}],["setsidebartitle(titl",{"_index":1539,"title":{},"body":{"injectables/MangolService.html":{}}}],["setstyl",{"_index":356,"title":{},"body":{"components/CursorComponent.html":{}}}],["setstyle(featur",{"_index":363,"title":{},"body":{"components/CursorComponent.html":{}}}],["settimeout",{"_index":2020,"title":{},"body":{"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"index.html":{}}}],["settitl",{"_index":963,"title":{"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{}},"body":{"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/ShowLayergroupBadges.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["setvis",{"_index":1991,"title":{"classes/SetVisible.html":{}},"body":{"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"miscellaneous/typealiases.html":{}}}],["setzoomdictionari",{"_index":1972,"title":{"classes/SetZoomDictionary.html":{}},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["sharedmodul",{"_index":564,"title":{"modules/SharedModule.html":{}},"body":{"modules/FeatureinfoModule.html":{},"modules/LayertreeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shorten",{"_index":2151,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["shorten:displaylimit",{"_index":1065,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["shortenpip",{"_index":2146,"title":{"pipes/ShortenPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"overview.html":{}}}],["show",{"_index":296,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"classes/HasLayertree.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/Reset.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle-1.html":{},"classes/SetZoomDictionary.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-1.html":{}}}],["show_layergroup_badg",{"_index":978,"title":{},"body":{"classes/HasLayertree.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{}}}],["showallresult",{"_index":524,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{}}}],["showbadg",{"_index":1088,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["showcopyicon",{"_index":1915,"title":{},"body":{"components/PositionComponent.html":{}}}],["showfeatureonmap",{"_index":612,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["showfeatureonmap(featur",{"_index":642,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["showlabel",{"_index":1380,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/TransparencyComponent.html":{}}}],["showlayerdescript",{"_index":1216,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["showlayergroupbadg",{"_index":981,"title":{"classes/ShowLayergroupBadges.html":{}},"body":{"classes/HasLayertree.html":{},"interfaces/LayertreeDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-5.html":{},"miscellaneous/typealiases.html":{}}}],["showlayertranspar",{"_index":1217,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["shownstatetrigg",{"_index":1927,"title":{},"body":{"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["showtooltip",{"_index":301,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["shut",{"_index":2472,"title":{},"body":{"index.html":{}}}],["side",{"_index":1428,"title":{},"body":{"interfaces/MangolConfigSidebar.html":{},"interfaces/State-9.html":{}}}],["sidebar",{"_index":242,"title":{},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["sidebar.act",{"_index":2205,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebar.interfac",{"_index":1366,"title":{},"body":{"interfaces/MangolConfig.html":{}}}],["sidebar.interface.t",{"_index":1426,"title":{},"body":{"interfaces/MangolConfigSidebar.html":{}}}],["sidebar/sidebar.reduc",{"_index":1582,"title":{},"body":{"interfaces/MangolState.html":{}}}],["sidebaract",{"_index":1335,"title":{},"body":{"components/MangolComponent.html":{},"injectables/MangolService.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["sidebaractions.set_collaps",{"_index":2211,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.set_has_sidebar",{"_index":2209,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.set_mod",{"_index":2210,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.set_open",{"_index":2212,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.set_selected_modul",{"_index":2214,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.set_titl",{"_index":2213,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.setcollapsible(collaps",{"_index":1548,"title":{},"body":{"injectables/MangolService.html":{}}}],["sidebaractions.setcollapsible(this.config.sidebar.collaps",{"_index":1350,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaractions.sethassidebar(!!this.config.sidebar",{"_index":1346,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaractions.sethassidebar(fals",{"_index":1357,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaractions.sethassidebar(hassidebar",{"_index":1546,"title":{},"body":{"injectables/MangolService.html":{}}}],["sidebaractions.setmode(mod",{"_index":1547,"title":{},"body":{"injectables/MangolService.html":{}}}],["sidebaractions.setmode(this.config.sidebar.mod",{"_index":1352,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaractions.setopened(open",{"_index":1549,"title":{},"body":{"injectables/MangolService.html":{}}}],["sidebaractions.setopened(this.config.sidebar.open",{"_index":1354,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaractions.setselectedmodule(tabnam",{"_index":2334,"title":{},"body":{"components/TabsComponent.html":{}}}],["sidebaractions.setselectedmodule(this.items[0",{"_index":2333,"title":{},"body":{"components/TabsComponent.html":{}}}],["sidebaractions.settitle(this.config.sidebar.titl",{"_index":1356,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaractions.settitle(titl",{"_index":1550,"title":{},"body":{"injectables/MangolService.html":{}}}],["sidebaractions.sidebaract",{"_index":2207,"title":{},"body":{"interfaces/State-9.html":{}}}],["sidebaractions.toggl",{"_index":1359,"title":{},"body":{"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{}}}],["sidebarbuttoncompon",{"_index":241,"title":{"components/SidebarButtonComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["sidebarbuttonstatetrigg",{"_index":2163,"title":{},"body":{"components/SidebarButtonComponent.html":{}}}],["sidebarcollaps",{"_index":81,"title":{},"body":{"components/ControllersComponent.html":{}}}],["sidebarmod",{"_index":1320,"title":{},"body":{"components/MangolComponent.html":{}}}],["sidebaropen",{"_index":1321,"title":{},"body":{"components/MangolComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["sidebarreduc",{"_index":2206,"title":{},"body":{"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["sidebarreducer(st",{"_index":2432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simplest",{"_index":2530,"title":{},"body":{"index.html":{}}}],["simpli",{"_index":2463,"title":{},"body":{"index.html":{}}}],["singl",{"_index":1782,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["singleclick",{"_index":621,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["slice",{"_index":1306,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["sliderstep",{"_index":1379,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/TransparencyComponent.html":{}}}],["slidestatetrigg",{"_index":1118,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["smarter",{"_index":2611,"title":{},"body":{"index.html":{}}}],["snackbar",{"_index":604,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/PositionComponent.html":{}}}],["snackbardur",{"_index":533,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"interfaces/State-3.html":{}}}],["somehow",{"_index":803,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["soon",{"_index":2609,"title":{},"body":{"index.html":{}}}],["sort",{"_index":830,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"modules/LayertreeModule.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"modules/MangolModule.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["source.getgetfeatureinfourl",{"_index":797,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["source.push(prop",{"_index":868,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["src/.../config.actions.t",{"_index":2627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../config.reducers.t",{"_index":2411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../controllers.actions.t",{"_index":2628,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../controllers.reducers.t",{"_index":2412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cursor.actions.t",{"_index":2629,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cursor.reducers.t",{"_index":2413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../featureinfo.actions.t",{"_index":2630,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../featureinfo.reducers.t",{"_index":2414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../layers.actions.t",{"_index":2631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../layers.reducers.t",{"_index":2415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../layertree.actions.t",{"_index":2632,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../layertree.reducers.t",{"_index":2416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mangol.actions.t",{"_index":2633,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mangol.module.t",{"_index":2417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mangol.reducers.t",{"_index":2410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../map.actions.t",{"_index":2634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../map.reducers.t",{"_index":2418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../measure.actions.t",{"_index":2635,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../measure.reducers.t",{"_index":2419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../print.actions.t",{"_index":2636,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../print.reducers.t",{"_index":2420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sidebar.actions.t",{"_index":2637,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sidebar.reducers.t",{"_index":2421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/classes/layer.t",{"_index":1439,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:10",{"_index":1445,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:11",{"_index":1447,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:12",{"_index":1446,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:13",{"_index":1441,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:7",{"_index":1444,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:8",{"_index":1443,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layer.ts:9",{"_index":1442,"title":{},"body":{"classes/MangolLayer.html":{}}}],["src/lib/classes/layergroup.t",{"_index":1462,"title":{},"body":{"classes/MangolLayerGroup.html":{}}}],["src/lib/classes/layergroup.ts:5",{"_index":1465,"title":{},"body":{"classes/MangolLayerGroup.html":{}}}],["src/lib/classes/layergroup.ts:6",{"_index":1464,"title":{},"body":{"classes/MangolLayerGroup.html":{}}}],["src/lib/classes/layergroup.ts:7",{"_index":1463,"title":{},"body":{"classes/MangolLayerGroup.html":{}}}],["src/lib/classes/map.t",{"_index":1469,"title":{},"body":{"classes/MangolMap.html":{}}}],["src/lib/classes/map.ts:2",{"_index":1470,"title":{},"body":{"classes/MangolMap.html":{}}}],["src/lib/interfaces/config",{"_index":1368,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["src/lib/interfaces/config.interface.t",{"_index":1362,"title":{},"body":{"interfaces/MangolConfig.html":{}}}],["src/lib/interfaces/cursor",{"_index":448,"title":{},"body":{"interfaces/CursorMode.html":{}}}],["src/lib/interfaces/ready.interface.t",{"_index":1509,"title":{},"body":{"interfaces/MangolReady.html":{}}}],["src/lib/mangol.component.t",{"_index":1317,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:20",{"_index":1326,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:22",{"_index":1325,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:24",{"_index":1330,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:25",{"_index":1332,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:26",{"_index":1331,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:27",{"_index":1324,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:36",{"_index":1327,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.component.ts:74",{"_index":1329,"title":{},"body":{"components/MangolComponent.html":{}}}],["src/lib/mangol.module.t",{"_index":1480,"title":{},"body":{"modules/MangolModule.html":{},"miscellaneous/functions.html":{}}}],["src/lib/mangol.service.t",{"_index":1513,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:15",{"_index":1524,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:21",{"_index":1525,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:25",{"_index":1530,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:32",{"_index":1527,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:40",{"_index":1528,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:44",{"_index":1541,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:48",{"_index":1532,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:52",{"_index":1536,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:56",{"_index":1534,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:60",{"_index":1538,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/mangol.service.ts:64",{"_index":1540,"title":{},"body":{"injectables/MangolService.html":{}}}],["src/lib/modules/_shared/shared/pipes/shorten.pipe.t",{"_index":2150,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["src/lib/modules/_shared/shared/pipes/shorten.pipe.ts:7",{"_index":2154,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["src/lib/modules/_shared/shared/services/style.service.t",{"_index":2215,"title":{},"body":{"injectables/StyleService.html":{}}}],["src/lib/modules/_shared/shared/services/style.service.ts:17",{"_index":2217,"title":{},"body":{"injectables/StyleService.html":{}}}],["src/lib/modules/_shared/shared/services/style.service.ts:25",{"_index":2221,"title":{},"body":{"injectables/StyleService.html":{}}}],["src/lib/modules/_shared/shared/services/style.service.ts:49",{"_index":2219,"title":{},"body":{"injectables/StyleService.html":{}}}],["src/lib/modules/_shared/shared/shared.module.t",{"_index":2147,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/lib/modules/controllers/controllers.component.t",{"_index":65,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:162",{"_index":89,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:23",{"_index":94,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:24",{"_index":97,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:25",{"_index":100,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:26",{"_index":101,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:27",{"_index":98,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:28",{"_index":99,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:29",{"_index":96,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:31",{"_index":88,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.component.ts:45",{"_index":92,"title":{},"body":{"components/ControllersComponent.html":{}}}],["src/lib/modules/controllers/controllers.module.t",{"_index":260,"title":{},"body":{"modules/ControllersModule.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.t",{"_index":346,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:104",{"_index":361,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:24",{"_index":369,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:26",{"_index":371,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:27",{"_index":368,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:29",{"_index":367,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:30",{"_index":372,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:31",{"_index":357,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:44",{"_index":359,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:66",{"_index":358,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/cursor/cursor.component.ts:78",{"_index":365,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/lib/modules/controllers/fullscreen",{"_index":908,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.t",{"_index":1911,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:17",{"_index":1924,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:19",{"_index":1923,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:20",{"_index":1922,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:22",{"_index":1925,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:23",{"_index":1921,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:25",{"_index":1917,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:29",{"_index":1926,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:36",{"_index":1920,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:38",{"_index":1919,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/position/position.component.ts:44",{"_index":1918,"title":{},"body":{"components/PositionComponent.html":{}}}],["src/lib/modules/controllers/rot",{"_index":1992,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.t",{"_index":2025,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.ts:15",{"_index":2033,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.ts:17",{"_index":2032,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.ts:19",{"_index":2028,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.ts:23",{"_index":2031,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.ts:36",{"_index":2029,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/scalebar/scalebar.component.ts:46",{"_index":2030,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["src/lib/modules/controllers/sidebar",{"_index":2160,"title":{},"body":{"components/SidebarButtonComponent.html":{}}}],["src/lib/modules/controllers/zoom",{"_index":2375,"title":{},"body":{"components/ZoomButtonsComponent.html":{}}}],["src/lib/modules/edit/edit.component.t",{"_index":459,"title":{},"body":{"components/EditComponent.html":{}}}],["src/lib/modules/edit/edit.component.ts:11",{"_index":464,"title":{},"body":{"components/EditComponent.html":{}}}],["src/lib/modules/edit/edit.component.ts:8",{"_index":463,"title":{},"body":{"components/EditComponent.html":{}}}],["src/lib/modules/edit/edit.module.t",{"_index":470,"title":{},"body":{"modules/EditModule.html":{}}}],["src/lib/modules/featureinfo/components/featureinfo",{"_index":598,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{}}}],["src/lib/modules/featureinfo/components/featurenfo",{"_index":894,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.t",{"_index":472,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:22",{"_index":483,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:23",{"_index":486,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:24",{"_index":484,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:25",{"_index":485,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:26",{"_index":482,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:28",{"_index":479,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:49",{"_index":481,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.component.ts:68",{"_index":480,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["src/lib/modules/featureinfo/featureinfo.module.t",{"_index":566,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["src/lib/modules/featureinfo/featureinfo.service.t",{"_index":769,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["src/lib/modules/featureinfo/featureinfo.service.ts:19",{"_index":774,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["src/lib/modules/featureinfo/featureinfo.service.ts:32",{"_index":783,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["src/lib/modules/featureinfo/featureinfo.service.ts:67",{"_index":778,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["src/lib/modules/layertree/classes/layertre",{"_index":1254,"title":{},"body":{"classes/LayertreeItemNode.html":{}}}],["src/lib/modules/layertree/components/lay",{"_index":451,"title":{},"body":{"components/DescriptionComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LegendComponent.html":{},"components/TransparencyComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.t",{"_index":1001,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:22",{"_index":1014,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:24",{"_index":1023,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:26",{"_index":1025,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:28",{"_index":1026,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:30",{"_index":1021,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:31",{"_index":1027,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:33",{"_index":1012,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:36",{"_index":1022,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:42",{"_index":1016,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:66",{"_index":1015,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:72",{"_index":1020,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layer/layer.component.ts:77",{"_index":1019,"title":{},"body":{"components/LayerComponent.html":{}}}],["src/lib/modules/layertree/components/layertre",{"_index":1229,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["src/lib/modules/layertree/interfaces/lay",{"_index":1070,"title":{},"body":{"interfaces/LayerDetailItem.html":{}}}],["src/lib/modules/layertree/interfaces/layergroup",{"_index":1157,"title":{},"body":{"interfaces/LayerGroupDetailItem.html":{}}}],["src/lib/modules/layertree/layertree.component.t",{"_index":1158,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:24",{"_index":1189,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:25",{"_index":1188,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:26",{"_index":1179,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:28",{"_index":1171,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:69",{"_index":1173,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:71",{"_index":1172,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:77",{"_index":1181,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:81",{"_index":1186,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:89",{"_index":1175,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.component.ts:94",{"_index":1177,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["src/lib/modules/layertree/layertree.module.t",{"_index":1265,"title":{},"body":{"modules/LayertreeModule.html":{}}}],["src/lib/modules/layertree/layertree.service.t",{"_index":1286,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["src/lib/modules/layertree/layertree.service.ts:10",{"_index":1290,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["src/lib/modules/layertree/layertree.service.ts:13",{"_index":1296,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["src/lib/modules/layertree/layertree.service.ts:27",{"_index":1292,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["src/lib/modules/layertree/layertree.service.ts:36",{"_index":1294,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["src/lib/modules/map/map.component.t",{"_index":1596,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:156",{"_index":1620,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:186",{"_index":1612,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:201",{"_index":1616,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:214",{"_index":1630,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:233",{"_index":1625,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:242",{"_index":1628,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:252",{"_index":1623,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:33",{"_index":1610,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:34",{"_index":1641,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:36",{"_index":1634,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:38",{"_index":1632,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:39",{"_index":1636,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:40",{"_index":1633,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:41",{"_index":1637,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:42",{"_index":1640,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:44",{"_index":1638,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:45",{"_index":1639,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:47",{"_index":1635,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:52",{"_index":1609,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:66",{"_index":1621,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.component.ts:77",{"_index":1619,"title":{},"body":{"components/MapComponent.html":{}}}],["src/lib/modules/map/map.module.t",{"_index":1703,"title":{},"body":{"modules/MapModule.html":{}}}],["src/lib/modules/map/map.service.t",{"_index":1705,"title":{},"body":{"injectables/MapService.html":{}}}],["src/lib/modules/map/map.service.ts:12",{"_index":1707,"title":{},"body":{"injectables/MapService.html":{}}}],["src/lib/modules/map/map.service.ts:15",{"_index":1708,"title":{},"body":{"injectables/MapService.html":{}}}],["src/lib/modules/measure/components/measur",{"_index":1807,"title":{},"body":{"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["src/lib/modules/measure/measure.component.t",{"_index":1722,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:27",{"_index":1733,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:28",{"_index":1735,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:29",{"_index":1734,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:30",{"_index":1736,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:31",{"_index":1737,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:33",{"_index":1729,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:60",{"_index":1732,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:71",{"_index":1731,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.component.ts:78",{"_index":1730,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/lib/modules/measure/measure.module.t",{"_index":1802,"title":{},"body":{"modules/MeasureModule.html":{}}}],["src/lib/modules/measure/measure.service.t",{"_index":1897,"title":{},"body":{"injectables/MeasureService.html":{}}}],["src/lib/modules/measure/measure.service.ts:12",{"_index":1900,"title":{},"body":{"injectables/MeasureService.html":{}}}],["src/lib/modules/measure/measure.service.ts:15",{"_index":1902,"title":{},"body":{"injectables/MeasureService.html":{}}}],["src/lib/modules/measure/measure.service.ts:21",{"_index":1904,"title":{},"body":{"injectables/MeasureService.html":{}}}],["src/lib/modules/measure/measure.service.ts:27",{"_index":1906,"title":{},"body":{"injectables/MeasureService.html":{}}}],["src/lib/modules/print/print.component.t",{"_index":1942,"title":{},"body":{"components/PrintComponent.html":{}}}],["src/lib/modules/print/print.component.ts:12",{"_index":1946,"title":{},"body":{"components/PrintComponent.html":{}}}],["src/lib/modules/print/print.component.ts:8",{"_index":1945,"title":{},"body":{"components/PrintComponent.html":{}}}],["src/lib/modules/print/print.module.t",{"_index":1951,"title":{},"body":{"modules/PrintModule.html":{}}}],["src/lib/modules/tabs/tabs.component.t",{"_index":2236,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:185",{"_index":2250,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:191",{"_index":2255,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:195",{"_index":2253,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:26",{"_index":2249,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:28",{"_index":2270,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:30",{"_index":2271,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:32",{"_index":2260,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:33",{"_index":2264,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:34",{"_index":2265,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:36",{"_index":2259,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:37",{"_index":2257,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:38",{"_index":2258,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:40",{"_index":2261,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:41",{"_index":2266,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:42",{"_index":2267,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:44",{"_index":2263,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:45",{"_index":2268,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:46",{"_index":2269,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:48",{"_index":2256,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:50",{"_index":2248,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.component.ts:85",{"_index":2251,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/lib/modules/tabs/tabs.module.t",{"_index":2339,"title":{},"body":{"modules/TabsModule.html":{}}}],["src/lib/store/config/config.actions.t",{"_index":2053,"title":{},"body":{"classes/SetConfig.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/config/config.actions.ts:7",{"_index":2054,"title":{},"body":{"classes/SetConfig.html":{}}}],["src/lib/store/config/config.actions.ts:8",{"_index":2055,"title":{},"body":{"classes/SetConfig.html":{}}}],["src/lib/store/config/config.reducers.t",{"_index":2165,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/controllers/controllers.actions.t",{"_index":1953,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:33",{"_index":1954,"title":{},"body":{"classes/Reset.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:37",{"_index":2126,"title":{},"body":{"classes/SetShowZoom.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:38",{"_index":2127,"title":{},"body":{"classes/SetShowZoom.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:41",{"_index":2140,"title":{},"body":{"classes/SetZoomDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:42",{"_index":2141,"title":{},"body":{"classes/SetZoomDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:45",{"_index":2124,"title":{},"body":{"classes/SetShowTooltip.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:46",{"_index":2125,"title":{},"body":{"classes/SetShowTooltip.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:49",{"_index":2108,"title":{},"body":{"classes/SetScalebar.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:50",{"_index":2109,"title":{},"body":{"classes/SetScalebar.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:53",{"_index":2118,"title":{},"body":{"classes/SetShowPosition.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:54",{"_index":2119,"title":{},"body":{"classes/SetShowPosition.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:57",{"_index":2098,"title":{},"body":{"classes/SetPositionPrecision.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:58",{"_index":2099,"title":{},"body":{"classes/SetPositionPrecision.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:61",{"_index":2094,"title":{},"body":{"classes/SetPositionCoordinates.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:62",{"_index":2095,"title":{},"body":{"classes/SetPositionCoordinates.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:65",{"_index":2096,"title":{},"body":{"classes/SetPositionDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:66",{"_index":2097,"title":{},"body":{"classes/SetPositionDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:69",{"_index":2120,"title":{},"body":{"classes/SetShowRotation.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:70",{"_index":2121,"title":{},"body":{"classes/SetShowRotation.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:73",{"_index":2104,"title":{},"body":{"classes/SetRotationDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:74",{"_index":2105,"title":{},"body":{"classes/SetRotationDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:77",{"_index":2122,"title":{},"body":{"classes/SetShowRotationTooltip.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:78",{"_index":2123,"title":{},"body":{"classes/SetShowRotationTooltip.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:81",{"_index":2106,"title":{},"body":{"classes/SetRotationValue.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:82",{"_index":2107,"title":{},"body":{"classes/SetRotationValue.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:85",{"_index":2114,"title":{},"body":{"classes/SetShowFullscreen.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:86",{"_index":2115,"title":{},"body":{"classes/SetShowFullscreen.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:89",{"_index":2116,"title":{},"body":{"classes/SetShowFullscreenTooltip.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:90",{"_index":2117,"title":{},"body":{"classes/SetShowFullscreenTooltip.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:93",{"_index":2072,"title":{},"body":{"classes/SetFullscreenDictionary.html":{}}}],["src/lib/store/controllers/controllers.actions.ts:94",{"_index":2073,"title":{},"body":{"classes/SetFullscreenDictionary.html":{}}}],["src/lib/store/controllers/controllers.reducers.t",{"_index":287,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/cursor/cursor.actions.t",{"_index":1987,"title":{},"body":{"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:12",{"_index":2086,"title":{},"body":{"classes/SetMode.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:13",{"_index":2087,"title":{},"body":{"classes/SetMode.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:16",{"_index":1988,"title":{},"body":{"classes/ResetMode.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:20",{"_index":2138,"title":{},"body":{"classes/SetVisible.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:21",{"_index":2139,"title":{},"body":{"classes/SetVisible.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:24",{"_index":2078,"title":{},"body":{"classes/SetLayer.html":{}}}],["src/lib/store/cursor/cursor.actions.ts:25",{"_index":2079,"title":{},"body":{"classes/SetLayer.html":{}}}],["src/lib/store/cursor/cursor.reducers.t",{"_index":2170,"title":{},"body":{"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.t",{"_index":946,"title":{},"body":{"classes/HasFeatureinfo.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:20",{"_index":947,"title":{},"body":{"classes/HasFeatureinfo.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:21",{"_index":948,"title":{},"body":{"classes/HasFeatureinfo.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:24",{"_index":2063,"title":{},"body":{"classes/SetDisabled.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:25",{"_index":2064,"title":{},"body":{"classes/SetDisabled.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:28",{"_index":2128,"title":{},"body":{"classes/SetTitle.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:29",{"_index":2129,"title":{},"body":{"classes/SetTitle.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:32",{"_index":2082,"title":{},"body":{"classes/SetMaxFeatures.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:33",{"_index":2083,"title":{},"body":{"classes/SetMaxFeatures.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:36",{"_index":2080,"title":{},"body":{"classes/SetLayers.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:37",{"_index":2081,"title":{},"body":{"classes/SetLayers.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:40",{"_index":2110,"title":{},"body":{"classes/SetSelectedLayer.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:41",{"_index":2111,"title":{},"body":{"classes/SetSelectedLayer.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:44",{"_index":2102,"title":{},"body":{"classes/SetResultsLayer.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:45",{"_index":2103,"title":{},"body":{"classes/SetResultsLayer.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:48",{"_index":2100,"title":{},"body":{"classes/SetResultsItems.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:49",{"_index":2101,"title":{},"body":{"classes/SetResultsItems.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:52",{"_index":2057,"title":{},"body":{"classes/SetDictionary.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:53",{"_index":2058,"title":{},"body":{"classes/SetDictionary.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:56",{"_index":2076,"title":{},"body":{"classes/SetHoverColor.html":{}}}],["src/lib/store/featureinfo/featureinfo.actions.ts:57",{"_index":2077,"title":{},"body":{"classes/SetHoverColor.html":{}}}],["src/lib/store/featureinfo/featureinfo.reducers.t",{"_index":517,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"interfaces/State-3.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/layers/layers.actions.t",{"_index":5,"title":{},"body":{"classes/AddLayers.html":{},"classes/SetMeasureLayer.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/layers/layers.actions.ts:10",{"_index":18,"title":{},"body":{"classes/AddLayers.html":{}}}],["src/lib/store/layers/layers.actions.ts:11",{"_index":23,"title":{},"body":{"classes/AddLayers.html":{}}}],["src/lib/store/layers/layers.actions.ts:14",{"_index":2084,"title":{},"body":{"classes/SetMeasureLayer.html":{}}}],["src/lib/store/layers/layers.actions.ts:15",{"_index":2085,"title":{},"body":{"classes/SetMeasureLayer.html":{}}}],["src/lib/store/layers/layers.reducers.t",{"_index":2183,"title":{},"body":{"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/layertree/layertree.actions.t",{"_index":972,"title":{},"body":{"classes/HasLayertree.html":{},"classes/SetDictionary-1.html":{},"classes/SetDisabled-1.html":{},"classes/SetTitle-1.html":{},"classes/ShowLayergroupBadges.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:12",{"_index":973,"title":{},"body":{"classes/HasLayertree.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:13",{"_index":974,"title":{},"body":{"classes/HasLayertree.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:16",{"_index":2065,"title":{},"body":{"classes/SetDisabled-1.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:17",{"_index":2066,"title":{},"body":{"classes/SetDisabled-1.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:20",{"_index":2130,"title":{},"body":{"classes/SetTitle-1.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:21",{"_index":2131,"title":{},"body":{"classes/SetTitle-1.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:24",{"_index":2059,"title":{},"body":{"classes/SetDictionary-1.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:25",{"_index":2060,"title":{},"body":{"classes/SetDictionary-1.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:28",{"_index":2158,"title":{},"body":{"classes/ShowLayergroupBadges.html":{}}}],["src/lib/store/layertree/layertree.actions.ts:29",{"_index":2159,"title":{},"body":{"classes/ShowLayergroupBadges.html":{}}}],["src/lib/store/layertree/layertree.reducers.t",{"_index":1214,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/mangol.actions.t",{"_index":53,"title":{},"body":{"classes/ClearState.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/mangol.actions.ts:6",{"_index":54,"title":{},"body":{"classes/ClearState.html":{}}}],["src/lib/store/mangol.reducers.t",{"_index":1551,"title":{},"body":{"interfaces/MangolState.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/map/map.actions.t",{"_index":45,"title":{},"body":{"classes/AddMap.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/map/map.actions.ts:7",{"_index":47,"title":{},"body":{"classes/AddMap.html":{}}}],["src/lib/store/map/map.actions.ts:8",{"_index":48,"title":{},"body":{"classes/AddMap.html":{}}}],["src/lib/store/map/map.reducers.t",{"_index":2190,"title":{},"body":{"interfaces/State-6.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/measure/measure.actions.t",{"_index":984,"title":{},"body":{"classes/HasMeasure.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled-2.html":{},"classes/SetMode-1.html":{},"classes/SetTitle-2.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/measure/measure.actions.ts:11",{"_index":985,"title":{},"body":{"classes/HasMeasure.html":{}}}],["src/lib/store/measure/measure.actions.ts:12",{"_index":986,"title":{},"body":{"classes/HasMeasure.html":{}}}],["src/lib/store/measure/measure.actions.ts:15",{"_index":2067,"title":{},"body":{"classes/SetDisabled-2.html":{}}}],["src/lib/store/measure/measure.actions.ts:16",{"_index":2068,"title":{},"body":{"classes/SetDisabled-2.html":{}}}],["src/lib/store/measure/measure.actions.ts:19",{"_index":2132,"title":{},"body":{"classes/SetTitle-2.html":{}}}],["src/lib/store/measure/measure.actions.ts:20",{"_index":2133,"title":{},"body":{"classes/SetTitle-2.html":{}}}],["src/lib/store/measure/measure.actions.ts:23",{"_index":2061,"title":{},"body":{"classes/SetDictionary-2.html":{}}}],["src/lib/store/measure/measure.actions.ts:24",{"_index":2062,"title":{},"body":{"classes/SetDictionary-2.html":{}}}],["src/lib/store/measure/measure.actions.ts:27",{"_index":2088,"title":{},"body":{"classes/SetMode-1.html":{}}}],["src/lib/store/measure/measure.actions.ts:28",{"_index":2089,"title":{},"body":{"classes/SetMode-1.html":{}}}],["src/lib/store/measure/measure.reducers.t",{"_index":1761,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/print/print.actions.t",{"_index":995,"title":{},"body":{"classes/HasPrint.html":{},"classes/SetDisabled-3.html":{},"classes/SetTitle-3.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/print/print.actions.ts:12",{"_index":2070,"title":{},"body":{"classes/SetDisabled-3.html":{}}}],["src/lib/store/print/print.actions.ts:13",{"_index":2071,"title":{},"body":{"classes/SetDisabled-3.html":{}}}],["src/lib/store/print/print.actions.ts:16",{"_index":2134,"title":{},"body":{"classes/SetTitle-3.html":{}}}],["src/lib/store/print/print.actions.ts:17",{"_index":2135,"title":{},"body":{"classes/SetTitle-3.html":{}}}],["src/lib/store/print/print.actions.ts:8",{"_index":996,"title":{},"body":{"classes/HasPrint.html":{}}}],["src/lib/store/print/print.actions.ts:9",{"_index":997,"title":{},"body":{"classes/HasPrint.html":{}}}],["src/lib/store/print/print.reducers.t",{"_index":2196,"title":{},"body":{"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["src/lib/store/sidebar/sidebar.actions.t",{"_index":2044,"title":{},"body":{"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:12",{"_index":2348,"title":{},"body":{"classes/Toggle.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:16",{"_index":2074,"title":{},"body":{"classes/SetHasSidebar.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:17",{"_index":2075,"title":{},"body":{"classes/SetHasSidebar.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:20",{"_index":2090,"title":{},"body":{"classes/SetMode-2.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:21",{"_index":2091,"title":{},"body":{"classes/SetMode-2.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:24",{"_index":2045,"title":{},"body":{"classes/SetCollapsible.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:25",{"_index":2046,"title":{},"body":{"classes/SetCollapsible.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:28",{"_index":2092,"title":{},"body":{"classes/SetOpened.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:29",{"_index":2093,"title":{},"body":{"classes/SetOpened.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:32",{"_index":2136,"title":{},"body":{"classes/SetTitle-4.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:33",{"_index":2137,"title":{},"body":{"classes/SetTitle-4.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:36",{"_index":2112,"title":{},"body":{"classes/SetSelectedModule.html":{}}}],["src/lib/store/sidebar/sidebar.actions.ts:37",{"_index":2113,"title":{},"body":{"classes/SetSelectedModule.html":{}}}],["src/lib/store/sidebar/sidebar.reducers.t",{"_index":2204,"title":{},"body":{"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["stand",{"_index":2445,"title":{},"body":{"index.html":{}}}],["start",{"_index":1779,"title":{"index.html":{}},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{},"index.html":{}}}],["state",{"_index":58,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"classes/ClearState.html":{},"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["state.config.config",{"_index":120,"title":{},"body":{"components/ControllersComponent.html":{},"components/LayertreeComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["state.config.config.sidebar.toolbar.measur",{"_index":1743,"title":{},"body":{"components/MeasureComponent.html":{}}}],["state.controllers.fullscreen",{"_index":133,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["state.controllers.posit",{"_index":129,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/PositionComponent.html":{}}}],["state.controllers.position.coordin",{"_index":1865,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["state.controllers.rot",{"_index":131,"title":{},"body":{"components/ControllersComponent.html":{},"components/RotationButtonComponent.html":{}}}],["state.controllers.zoom",{"_index":127,"title":{},"body":{"components/ControllersComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["state.cursor.lay",{"_index":398,"title":{},"body":{"components/CursorComponent.html":{}}}],["state.cursor.mod",{"_index":394,"title":{},"body":{"components/CursorComponent.html":{},"components/MapComponent.html":{}}}],["state.cursor.mode.text",{"_index":1830,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["state.cursor.vis",{"_index":414,"title":{},"body":{"components/CursorComponent.html":{}}}],["state.dictionari",{"_index":1793,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["state.featureinfo.dictionari",{"_index":502,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["state.featureinfo.dis",{"_index":2288,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.featureinfo.hasfeatureinfo",{"_index":2284,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.featureinfo.hovercolor",{"_index":2224,"title":{},"body":{"injectables/StyleService.html":{}}}],["state.featureinfo.maxfeatures).pip",{"_index":794,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["state.featureinfo.resultsitem",{"_index":657,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["state.featureinfo.resultslay",{"_index":500,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["state.featureinfo.selectedlay",{"_index":498,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["state.featureinfo.selectedlayer).pip",{"_index":723,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["state.featureinfo.snackbardur",{"_index":716,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["state.featureinfo.titl",{"_index":2286,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.fullscreen",{"_index":343,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["state.lay",{"_index":2176,"title":{},"body":{"interfaces/State-2.html":{}}}],["state.layers.lay",{"_index":1664,"title":{},"body":{"components/MapComponent.html":{}}}],["state.layers.layers.filter(lay",{"_index":494,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["state.layers.measurelay",{"_index":1745,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["state.layertree.dictionari",{"_index":1039,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{}}}],["state.layertree.dis",{"_index":2282,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.layertree.haslayertre",{"_index":2278,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.layertree.showlayergroupbadg",{"_index":1121,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["state.layertree.titl",{"_index":2280,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.map.map",{"_index":390,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["state.measure.dictionari",{"_index":1741,"title":{},"body":{"components/MeasureComponent.html":{}}}],["state.measure.dis",{"_index":2294,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.measure.hasmeasur",{"_index":2290,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.measure.mod",{"_index":1748,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["state.measure.titl",{"_index":2292,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.open",{"_index":2208,"title":{},"body":{"interfaces/State-9.html":{}}}],["state.posit",{"_index":333,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["state.print.dis",{"_index":2300,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.print.hasprint",{"_index":2296,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.print.titl",{"_index":2298,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.rot",{"_index":338,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["state.sidebar",{"_index":1545,"title":{},"body":{"injectables/MangolService.html":{}}}],["state.sidebar.collaps",{"_index":125,"title":{},"body":{"components/ControllersComponent.html":{}}}],["state.sidebar.hassidebar",{"_index":122,"title":{},"body":{"components/ControllersComponent.html":{},"components/MangolComponent.html":{}}}],["state.sidebar.mod",{"_index":1342,"title":{},"body":{"components/MangolComponent.html":{}}}],["state.sidebar.open",{"_index":1340,"title":{},"body":{"components/MangolComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["state.sidebar.selectedmodul",{"_index":659,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/LayertreeComponent.html":{},"components/TabsComponent.html":{}}}],["state.sidebar.titl",{"_index":2276,"title":{},"body":{"components/TabsComponent.html":{}}}],["state.zoom",{"_index":327,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/State-1.html":{}}}],["still",{"_index":2602,"title":{},"body":{"index.html":{}}}],["store",{"_index":87,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["store/config/config.act",{"_index":1334,"title":{},"body":{"components/MangolComponent.html":{},"injectables/MangolService.html":{}}}],["store/controllers/controllers.act",{"_index":111,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/RotationButtonComponent.html":{}}}],["store/controllers/controllers.reduc",{"_index":114,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{}}}],["store/cursor/cursor.act",{"_index":388,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayertreeComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["store/featureinfo/featureinfo.act",{"_index":490,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/TabsComponent.html":{}}}],["store/featureinfo/featureinfo.reduc",{"_index":492,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{}}}],["store/layers/layers.act",{"_index":1642,"title":{},"body":{"components/MapComponent.html":{},"components/MeasureComponent.html":{}}}],["store/layertree/layertree.act",{"_index":2272,"title":{},"body":{"components/TabsComponent.html":{}}}],["store/layertree/layertree.reduc",{"_index":1028,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{}}}],["store/mangol.act",{"_index":1337,"title":{},"body":{"components/MangolComponent.html":{}}}],["store/mangol.reduc",{"_index":116,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"modules/MangolModule.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["store/map/map.act",{"_index":1643,"title":{},"body":{"components/MapComponent.html":{}}}],["store/measure/measure.act",{"_index":1739,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureSelectComponent.html":{},"components/TabsComponent.html":{}}}],["store/measure/measure.reduc",{"_index":1376,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["store/print/print.act",{"_index":2273,"title":{},"body":{"components/TabsComponent.html":{}}}],["store/sidebar/sidebar.act",{"_index":1336,"title":{},"body":{"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{}}}],["store/sidebar/sidebar.reduc",{"_index":1543,"title":{},"body":{"injectables/MangolService.html":{}}}],["storelogg",{"_index":1492,"title":{},"body":{"modules/MangolModule.html":{}}}],["storemodul",{"_index":1491,"title":{},"body":{"modules/MangolModule.html":{}}}],["storemodule.forroot(mangolreduc",{"_index":1507,"title":{},"body":{"modules/MangolModule.html":{}}}],["string",{"_index":450,"title":{},"body":{"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"interfaces/LayerDetailItem.html":{},"interfaces/LayerGroupDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{}}}],["stroke",{"_index":1907,"title":{},"body":{"injectables/MeasureService.html":{},"injectables/StyleService.html":{}}}],["strokecolor",{"_index":1385,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["style",{"_index":366,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"injectables/StyleService.html":{},"index.html":{}}}],["styleservic",{"_index":478,"title":{"injectables/StyleService.html":{}},"body":{"components/FeatureinfoComponent.html":{},"modules/SharedModule.html":{},"injectables/StyleService.html":{},"overview.html":{}}}],["styleurl",{"_index":71,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["subject",{"_index":1052,"title":{},"body":{"components/LayerComponent.html":{}}}],["subscrib",{"_index":698,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["subscribe(([lay",{"_index":415,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["subscribe(([m",{"_index":513,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["subscribe((config",{"_index":1205,"title":{},"body":{"components/LayertreeComponent.html":{},"components/MapComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["subscribe((lay",{"_index":1665,"title":{},"body":{"components/MapComponent.html":{}}}],["subscribe((m",{"_index":1360,"title":{},"body":{"components/MangolComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["subscribe(color",{"_index":2225,"title":{},"body":{"injectables/StyleService.html":{}}}],["subscribe(cursormod",{"_index":1675,"title":{},"body":{"components/MapComponent.html":{}}}],["subscribe(lay",{"_index":399,"title":{},"body":{"components/CursorComponent.html":{},"components/FeaturenfoTableComponent.html":{}}}],["subscribe(m",{"_index":506,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MapComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["subscribe(map",{"_index":1666,"title":{},"body":{"components/MapComponent.html":{}}}],["subscribe(mod",{"_index":395,"title":{},"body":{"components/CursorComponent.html":{}}}],["subscribe(modul",{"_index":1204,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["subscribe(open",{"_index":1358,"title":{},"body":{"components/MangolComponent.html":{}}}],["subscribe(posit",{"_index":1683,"title":{},"body":{"components/MapComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{}}}],["subscribe(r",{"_index":677,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["subscribe(resultslay",{"_index":680,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["subscribe(snackbardur",{"_index":717,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["subscribe(url",{"_index":691,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["subscript",{"_index":95,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["such",{"_index":2502,"title":{},"body":{"index.html":{}}}],["super(opt",{"_index":1448,"title":{},"body":{"classes/MangolLayer.html":{},"classes/MangolMap.html":{}}}],["support",{"_index":715,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":2619,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":318,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolState.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["tab",{"_index":605,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/TabsComponent.html":{}}}],["tabl",{"_index":206,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["table'},{'nam",{"_index":210,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["table.compon",{"_index":595,"title":{},"body":{"modules/FeatureinfoModule.html":{}}}],["table.component.html",{"_index":897,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table.component.scss",{"_index":896,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table.component.t",{"_index":895,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table.component.ts:15",{"_index":899,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table.component.ts:17",{"_index":901,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table.component.ts:18",{"_index":898,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table.component.ts:22",{"_index":900,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["table/featurenfo",{"_index":594,"title":{},"body":{"modules/FeatureinfoModule.html":{},"components/FeaturenfoTableComponent.html":{}}}],["tabnam",{"_index":2254,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs'},{'nam",{"_index":244,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["tabs.compon",{"_index":2347,"title":{},"body":{"modules/TabsModule.html":{}}}],["tabs.component.html",{"_index":2238,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2237,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabscompon",{"_index":243,"title":{"components/TabsComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["tabsmodul",{"_index":1478,"title":{"modules/TabsModule.html":{}},"body":{"modules/MangolModule.html":{},"modules/TabsModule.html":{},"modules.html":{},"overview.html":{}}}],["tabsubscript",{"_index":1166,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["tag",{"_index":2501,"title":{},"body":{"index.html":{}}}],["take",{"_index":487,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeaturenfoTableComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"injectables/StyleService.html":{},"components/ZoomButtonsComponent.html":{}}}],["take(1",{"_index":676,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/MapComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["target",{"_index":1416,"title":{},"body":{"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/ScalebarComponent.html":{},"index.html":{}}}],["targetview",{"_index":2023,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["teal",{"_index":2586,"title":{},"body":{"index.html":{}}}],["templat",{"_index":62,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{}}}],["templateurl",{"_index":73,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["text",{"_index":381,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"interfaces/State-2.html":{},"injectables/StyleService.html":{}}}],["textalign",{"_index":442,"title":{},"body":{"components/CursorComponent.html":{}}}],["textcolor",{"_index":1386,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["textcopi",{"_index":305,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{}}}],["textoutlinecolor",{"_index":1387,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["theme",{"_index":2590,"title":{},"body":{"index.html":{}}}],["theme($mangol",{"_index":2592,"title":{},"body":{"index.html":{}}}],["therefor",{"_index":2572,"title":{},"body":{"index.html":{}}}],["this._activatedraw(m",{"_index":1841,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this._cleanup",{"_index":1756,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this._colorwithopacity(this.hovercolor",{"_index":2227,"title":{},"body":{"injectables/StyleService.html":{}}}],["this._createclickfunction(evt",{"_index":670,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this._createpointermovefunction(evt",{"_index":1681,"title":{},"body":{"components/MapComponent.html":{}}}],["this._createrotationfunction(evt",{"_index":2014,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["this._deactivatedraw(m",{"_index":1842,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this._deactivatedraw(map",{"_index":1843,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this._formatcoordinates(evt.coordin",{"_index":1688,"title":{},"body":{"components/MapComponent.html":{}}}],["this._opensnackbar(features.length",{"_index":700,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this._opensnackbar(vectorfeatures.length",{"_index":713,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this._removeclickfunct",{"_index":672,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.animationdur",{"_index":2019,"title":{},"body":{"components/RotationButtonComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["this.children",{"_index":1466,"title":{},"body":{"classes/MangolLayerGroup.html":{}}}],["this.clickfunct",{"_index":668,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.columns.foreach(c",{"_index":879,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.columns.foreach(column",{"_index":876,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.columns.indexof(key",{"_index":866,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.columns.push(key",{"_index":867,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.combinedsubscript",{"_index":412,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["this.combinedsubscription.unsubscrib",{"_index":418,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["this.config",{"_index":118,"title":{},"body":{"components/ControllersComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"index.html":{}}}],["this.config$.subscribe(config",{"_index":135,"title":{},"body":{"components/ControllersComponent.html":{}}}],["this.config.map",{"_index":1650,"title":{},"body":{"components/MapComponent.html":{}}}],["this.config.map.target",{"_index":1651,"title":{},"body":{"components/MapComponent.html":{}}}],["this.config.sidebar",{"_index":1347,"title":{},"body":{"components/MangolComponent.html":{}}}],["this.config.sidebar.collaps",{"_index":1349,"title":{},"body":{"components/MangolComponent.html":{}}}],["this.config.sidebar.mod",{"_index":1351,"title":{},"body":{"components/MangolComponent.html":{}}}],["this.config.sidebar.open",{"_index":1353,"title":{},"body":{"components/MangolComponent.html":{}}}],["this.config.sidebar.titl",{"_index":1355,"title":{},"body":{"components/MangolComponent.html":{}}}],["this.configsubscript",{"_index":134,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["this.configsubscription.unsubscrib",{"_index":184,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{}}}],["this.cursormodesubscript",{"_index":1674,"title":{},"body":{"components/MapComponent.html":{}}}],["this.cursormodesubscription.unsubscrib",{"_index":1685,"title":{},"body":{"components/MapComponent.html":{}}}],["this.cursorstyl",{"_index":1676,"title":{},"body":{"components/MapComponent.html":{}}}],["this.cursortext",{"_index":1829,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.data.features.foreach(featur",{"_index":853,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.data.layer.nam",{"_index":885,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.data.layer.querycolumn",{"_index":851,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.data.layer.querycolumns.indexof(key",{"_index":861,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.data.layer.querycolumns.length",{"_index":852,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.datasourc",{"_index":869,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.datasource.data",{"_index":873,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.datasource.push",{"_index":906,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["this.datasource.sort",{"_index":871,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.defaultmap",{"_index":1645,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultmap.render",{"_index":1660,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultmap.target",{"_index":1652,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultmap.view",{"_index":1661,"title":{},"body":{"components/MapComponent.html":{}}}],["this.detail",{"_index":1452,"title":{},"body":{"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{}}}],["this.detailitem",{"_index":1043,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["this.detailitems.push",{"_index":1044,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["this.dialog.open(featureinfotabledialogcompon",{"_index":734,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.dialog.open(layerdetailscompon",{"_index":1057,"title":{},"body":{"components/LayerComponent.html":{}}}],["this.dictionari",{"_index":501,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MeasureComponent.html":{}}}],["this.dictionary$.subscribe(dict",{"_index":1042,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["this.dictionary.area",{"_index":1862,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.dictionary.clickonmap",{"_index":665,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["this.dictionary.closesnackbar",{"_index":720,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.dictionary.dist",{"_index":1859,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.dictionary.drawstarttext",{"_index":1851,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.dictionary.drawstarttextradiu",{"_index":1850,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.dictionary.featur",{"_index":726,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.dictionary.numberoffeaturesfound",{"_index":719,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.dictionarysubscript",{"_index":1041,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["this.dictionarysubscription.unsubscrib",{"_index":1053,"title":{},"body":{"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{}}}],["this.displayvalu",{"_index":1852,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.draw",{"_index":1845,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.draw.on('drawstart",{"_index":1853,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.draw.setactive(tru",{"_index":1884,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.expandall(c",{"_index":1141,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["this.expandall(this.group",{"_index":1135,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["this.feature.getproperti",{"_index":904,"title":{},"body":{"components/FeaturenfoTableComponent.html":{}}}],["this.featureinfodis",{"_index":2287,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.featureinfoservic",{"_index":689,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.featureinfotitl",{"_index":2285,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.fullscreen",{"_index":132,"title":{},"body":{"components/ControllersComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["this.geojsonformat",{"_index":820,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["this.getchildren",{"_index":1200,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.group.check",{"_index":1133,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["this.groupnodes.push(i",{"_index":1247,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["this.hasfeatureinfo",{"_index":2283,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.haslayertre",{"_index":2277,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.hasmeasur",{"_index":2289,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.hasprint",{"_index":2295,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.hassidebar",{"_index":121,"title":{},"body":{"components/ControllersComponent.html":{},"components/MangolComponent.html":{}}}],["this.hovercolor",{"_index":2226,"title":{},"body":{"injectables/StyleService.html":{}}}],["this.http",{"_index":811,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["this.initialtext",{"_index":1848,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.isfullscreen",{"_index":925,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["this.item",{"_index":1079,"title":{},"body":{"components/LayerDetailsComponent.html":{},"components/TabsComponent.html":{}}}],["this.items.foreach(i",{"_index":1245,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["this.items.length",{"_index":2332,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.items.push('featureinfo",{"_index":2313,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.items.push('layertre",{"_index":2306,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.items.push('measur",{"_index":2320,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.items.push('print",{"_index":2327,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.lay",{"_index":400,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"classes/MangolLayer.html":{},"components/MeasureResultsComponent.html":{}}}],["this.layer$).subscrib",{"_index":661,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.layer.detail",{"_index":1050,"title":{},"body":{"components/LayerComponent.html":{}}}],["this.layer.getsource().addfeature(feat",{"_index":447,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.layer.getsource().clear",{"_index":446,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.layer.layer.getopac",{"_index":2373,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["this.layer.layer.setopacity(evt.valu",{"_index":2374,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["this.layer.layer.setvisible(!this.layer.layer.getvis",{"_index":1054,"title":{},"body":{"components/LayerComponent.html":{}}}],["this.layernodes.push(i",{"_index":1249,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["this.layerssubscript",{"_index":1663,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layerssubscription.unsubscrib",{"_index":1684,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layersubscript",{"_index":397,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.layersubscription.unsubscrib",{"_index":420,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.layertreedis",{"_index":2281,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.layertreeservice.processlayersandlayergroup",{"_index":1209,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.layertreetitl",{"_index":2279,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.level",{"_index":1250,"title":{},"body":{"components/LayertreeItemComponent.html":{}}}],["this.mangolconfig",{"_index":2540,"title":{},"body":{"index.html":{}}}],["this.mangolservice.setsidebartitle('mi",{"_index":2567,"title":{},"body":{"index.html":{}}}],["this.mangolservice.togglesidebar",{"_index":2570,"title":{},"body":{"index.html":{}}}],["this.map",{"_index":389,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/MangolComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/ScalebarComponent.html":{}}}],["this.map$.pipe(filter(m",{"_index":401,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{}}}],["this.map$.pipe(take(1)).subscribe(m",{"_index":1753,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this.map.addcontrol(scalelinecontrol",{"_index":2042,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["this.map.gettarget",{"_index":2036,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["this.mapservice.getdefaultmap",{"_index":1646,"title":{},"body":{"components/MapComponent.html":{}}}],["this.mapservice.getdefaultmap().lay",{"_index":1210,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.mapsubscript",{"_index":504,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/MapComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["this.mapsubscription.unsubscrib",{"_index":515,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/MapComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{}}}],["this.measureconfig",{"_index":1742,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this.measureconfig$.subscribe(config",{"_index":1750,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this.measureconfigsubscript",{"_index":1749,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this.measureconfigsubscription.unsubscrib",{"_index":1757,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this.measuredis",{"_index":2293,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.measurelay",{"_index":1744,"title":{},"body":{"components/MeasureComponent.html":{}}}],["this.measuremod",{"_index":1747,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["this.measureservice.exchangemetersandkilomet",{"_index":1860,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.measureservice.exchangesqmetersandsqkilomet",{"_index":1863,"title":{},"body":{"components/MeasureResultsComponent.html":{}}}],["this.measureservice.getstyle(featur",{"_index":1754,"title":{},"body":{"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["this.measuretitl",{"_index":2291,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.mod",{"_index":396,"title":{},"body":{"components/CursorComponent.html":{},"components/MeasureSelectComponent.html":{}}}],["this.mode.backgroundfil",{"_index":433,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.mode.color",{"_index":429,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.mode.hasownproperty('backgroundfil",{"_index":432,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.mode.hasownproperty('color",{"_index":428,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.mode.text",{"_index":426,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.modesubscript",{"_index":391,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.modesubscription.unsubscrib",{"_index":419,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.nam",{"_index":1449,"title":{},"body":{"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{}}}],["this.nesteddatasourc",{"_index":1201,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.nesteddatasource.data",{"_index":1208,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.nestedtreecontrol",{"_index":1199,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.node.check",{"_index":1055,"title":{},"body":{"components/LayerComponent.html":{}}}],["this.node.lay",{"_index":1040,"title":{},"body":{"components/LayerComponent.html":{}}}],["this.onmousemove(evt",{"_index":411,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.pointermovefunct",{"_index":1679,"title":{},"body":{"components/MapComponent.html":{}}}],["this.posit",{"_index":128,"title":{},"body":{"components/ControllersComponent.html":{},"components/MapComponent.html":{},"components/PositionComponent.html":{}}}],["this.position.dictionary.closesnackbar",{"_index":1938,"title":{},"body":{"components/PositionComponent.html":{}}}],["this.position.dictionary.textcopi",{"_index":1936,"title":{},"body":{"components/PositionComponent.html":{}}}],["this.positionsubscript",{"_index":1682,"title":{},"body":{"components/MapComponent.html":{},"components/PositionComponent.html":{}}}],["this.positionsubscription.unsubscrib",{"_index":1929,"title":{},"body":{"components/PositionComponent.html":{}}}],["this.printdis",{"_index":2299,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.printtitl",{"_index":2297,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.processlayer(c",{"_index":1310,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["this.processlayer(i",{"_index":1299,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["this.processlayer(l",{"_index":1695,"title":{},"body":{"components/MapComponent.html":{}}}],["this.processlayergroup(c",{"_index":1311,"title":{},"body":{"injectables/LayertreeService.html":{},"components/MapComponent.html":{}}}],["this.processlayergroup(i",{"_index":1300,"title":{},"body":{"injectables/LayertreeService.html":{}}}],["this.processlayergroup(l",{"_index":1696,"title":{},"body":{"components/MapComponent.html":{}}}],["this.processlayersandlayergroups(configmap.lay",{"_index":1657,"title":{},"body":{"components/MapComponent.html":{}}}],["this.processlayersandlayergroups(this.defaultmap.lay",{"_index":1658,"title":{},"body":{"components/MapComponent.html":{}}}],["this.query",{"_index":1454,"title":{},"body":{"classes/MangolLayer.html":{}}}],["this.querycolumn",{"_index":1460,"title":{},"body":{"classes/MangolLayer.html":{}}}],["this.queryidproperti",{"_index":1458,"title":{},"body":{"classes/MangolLayer.html":{}}}],["this.querysr",{"_index":1456,"title":{},"body":{"classes/MangolLayer.html":{}}}],["this.resultsfeatur",{"_index":656,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.resultslay",{"_index":499,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{}}}],["this.resultslayer$.pipe(filter(r",{"_index":510,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["this.resultslayer$.pipe(take(1)).subscribe(lay",{"_index":740,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.rot",{"_index":130,"title":{},"body":{"components/ControllersComponent.html":{},"components/RotationButtonComponent.html":{}}}],["this.rotationfunct",{"_index":2012,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["this.selecteddetail",{"_index":1056,"title":{},"body":{"components/LayerComponent.html":{}}}],["this.selectedlay",{"_index":497,"title":{},"body":{"components/FeatureinfoComponent.html":{},"components/FeatureinfoSelectComponent.html":{}}}],["this.selectedmod",{"_index":1893,"title":{},"body":{"components/MeasureSelectComponent.html":{}}}],["this.selectedmodul",{"_index":2274,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.setstyle(feat",{"_index":407,"title":{},"body":{"components/CursorComponent.html":{}}}],["this.showbadg",{"_index":1120,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["this.showlabel",{"_index":2371,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["this.sidebarcollaps",{"_index":123,"title":{},"body":{"components/ControllersComponent.html":{}}}],["this.sidebarmod",{"_index":1341,"title":{},"body":{"components/MangolComponent.html":{}}}],["this.sidebaropen",{"_index":1339,"title":{},"body":{"components/MangolComponent.html":{},"components/SidebarButtonComponent.html":{}}}],["this.sliderstep",{"_index":2369,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["this.snackbar.open",{"_index":718,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/PositionComponent.html":{}}}],["this.sort",{"_index":872,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["this.stor",{"_index":392,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/PositionComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["this.store.dispatch",{"_index":147,"title":{},"body":{"components/ControllersComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/RotationButtonComponent.html":{},"components/TabsComponent.html":{}}}],["this.store.dispatch(new",{"_index":136,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{}}}],["this.store.select",{"_index":124,"title":{},"body":{"components/ControllersComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/LayerGroupComponent.html":{},"components/MeasureComponent.html":{},"components/TabsComponent.html":{}}}],["this.store.select(st",{"_index":119,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/RotationButtonComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["this.styleservice.hoverstyle(feat",{"_index":503,"title":{},"body":{"components/FeatureinfoComponent.html":{}}}],["this.tab",{"_index":658,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["this.tabsubscript",{"_index":1202,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.tabsubscription.unsubscrib",{"_index":1211,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["this.target",{"_index":1649,"title":{},"body":{"components/MapComponent.html":{},"components/ScalebarComponent.html":{}}}],["this.titl",{"_index":2275,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.valu",{"_index":2372,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["this.visibleall(c",{"_index":1146,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["this.visibleall(this.group",{"_index":1136,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["this.zoom",{"_index":126,"title":{},"body":{"components/ControllersComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["through",{"_index":2544,"title":{},"body":{"index.html":{}}}],["throwerror",{"_index":790,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["throwerror(error",{"_index":823,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["tile",{"_index":688,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["tilelay",{"_index":1709,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["tileload",{"_index":1419,"title":{},"body":{"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{}}}],["tilewm",{"_index":788,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["time",{"_index":2524,"title":{},"body":{"index.html":{}}}],["titl",{"_index":530,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"injectables/MangolService.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"classes/SetCollapsible.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/ShowLayergroupBadges.html":{},"interfaces/State-3.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"index.html":{}}}],["tocheck",{"_index":1137,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["toggl",{"_index":1110,"title":{"classes/Toggle.html":{}},"body":{"components/LayerGroupComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetHasSidebar.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetSelectedModule.html":{},"classes/SetTitle-4.html":{},"classes/Toggle.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["toggle_off",{"_index":1130,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{}}}],["toggle_on",{"_index":1128,"title":{},"body":{"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{}}}],["togglecheckbox",{"_index":1167,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["togglecheckbox(nod",{"_index":1174,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["togglefullscreen",{"_index":922,"title":{},"body":{"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{}}}],["togglegroup",{"_index":1090,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["togglelayergroup",{"_index":1168,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["togglelayergroup(nod",{"_index":1176,"title":{},"body":{"components/LayertreeComponent.html":{}}}],["togglelayervis",{"_index":1009,"title":{},"body":{"components/LayerComponent.html":{}}}],["togglesidebar",{"_index":1523,"title":{},"body":{"injectables/MangolService.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{}}}],["tolowercas",{"_index":886,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["toolbar",{"_index":1427,"title":{},"body":{"interfaces/MangolConfigSidebar.html":{},"index.html":{}}}],["toolbar.interfac",{"_index":1431,"title":{},"body":{"interfaces/MangolConfigSidebar.html":{},"components/MeasureComponent.html":{},"components/TabsComponent.html":{}}}],["toolbar.interface.t",{"_index":1369,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["tooltip",{"_index":1958,"title":{},"body":{"classes/Reset.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{}}}],["transform",{"_index":2003,"title":{},"body":{"components/RotationButtonComponent.html":{},"pipes/ShortenPipe.html":{}}}],["transform(valu",{"_index":2152,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["transpar",{"_index":1045,"title":{},"body":{"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{},"components/TransparencyComponent.html":{}}}],["transparency'},{'nam",{"_index":246,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["transparency.component.html",{"_index":2351,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["transparency.component.scss",{"_index":2350,"title":{},"body":{"components/TransparencyComponent.html":{}}}],["transparencycompon",{"_index":245,"title":{"components/TransparencyComponent.html":{}},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["tree",{"_index":64,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["tri",{"_index":681,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/MeasureResultsComponent.html":{}}}],["true",{"_index":302,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayertreeDictionary.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"modules/MangolModule.html":{},"injectables/MapService.html":{},"interfaces/State-1.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"components/TransparencyComponent.html":{},"index.html":{}}}],["turn",{"_index":1221,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["turnlayersoff",{"_index":1218,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["turnlayerson",{"_index":1219,"title":{},"body":{"interfaces/LayertreeDictionary.html":{},"interfaces/State-5.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/ControllersComponent.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"interfaces/CursorMode.html":{},"components/DescriptionComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"interfaces/LayerDetailItem.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/LayerGroupDetailItem.html":{},"components/LayertreeComponent.html":{},"interfaces/LayertreeDictionary.html":{},"components/LayertreeItemComponent.html":{},"classes/LayertreeItemNode.html":{},"injectables/LayertreeService.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfig.html":{},"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigSidebar.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"classes/MangolLayer.html":{},"classes/MangolLayerGroup.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"classes/MangolMap.html":{},"interfaces/MangolReady.html":{},"injectables/MangolService.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"injectables/MeasureService.html":{},"interfaces/OlxLayerLayerOptions.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StyleService.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":2625,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":138,"title":{},"body":{"components/ControllersComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureSelectComponent.html":{},"components/TabsComponent.html":{}}}],["types/geojson",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["types/jspdf",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["types/ol",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2449,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":139,"title":{},"body":{"components/ControllersComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/LayertreeComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolState.html":{},"components/MapComponent.html":{},"components/MeasureSelectComponent.html":{},"components/TabsComponent.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":2451,"title":{},"body":{"index.html":{}}}],["unfold_less",{"_index":1127,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["unfold_mor",{"_index":1124,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["unfortun",{"_index":2521,"title":{},"body":{"index.html":{}}}],["unit",{"_index":2040,"title":{},"body":{"components/ScalebarComponent.html":{}}}],["until",{"_index":2471,"title":{},"body":{"index.html":{}}}],["url",{"_index":693,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{}}}],["url.replace('&i",{"_index":809,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["us",{"_index":2435,"title":{},"body":{"index.html":{}}}],["valu",{"_index":25,"title":{},"body":{"classes/AddLayers.html":{},"classes/AddMap.html":{},"classes/ClearState.html":{},"components/CursorComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"injectables/FeatureinfoService.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"classes/HasFeatureinfo.html":{},"classes/HasLayertree.html":{},"classes/HasMeasure.html":{},"classes/HasPrint.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/MangolComponent.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"components/MeasureResultsComponent.html":{},"injectables/MeasureService.html":{},"components/PositionComponent.html":{},"classes/Reset.html":{},"classes/ResetMode.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetCollapsible.html":{},"classes/SetConfig.html":{},"classes/SetDictionary.html":{},"classes/SetDictionary-1.html":{},"classes/SetDictionary-2.html":{},"classes/SetDisabled.html":{},"classes/SetDisabled-1.html":{},"classes/SetDisabled-2.html":{},"classes/SetDisabled-3.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetHasSidebar.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetMode-1.html":{},"classes/SetMode-2.html":{},"classes/SetOpened.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetSelectedLayer.html":{},"classes/SetSelectedModule.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetTitle.html":{},"classes/SetTitle-1.html":{},"classes/SetTitle-2.html":{},"classes/SetTitle-3.html":{},"classes/SetTitle-4.html":{},"classes/SetVisible.html":{},"classes/SetZoomDictionary.html":{},"pipes/ShortenPipe.html":{},"classes/ShowLayergroupBadges.html":{},"components/TabsComponent.html":{},"classes/Toggle.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["value.length",{"_index":2156,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["value.substr(0",{"_index":2157,"title":{},"body":{"pipes/ShortenPipe.html":{}}}],["var",{"_index":189,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["variabl",{"_index":2534,"title":{},"body":{"index.html":{}}}],["vector",{"_index":703,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["vectorfeatur",{"_index":706,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["vectorfeatures.push(featur",{"_index":710,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["vectorlay",{"_index":30,"title":{},"body":{"classes/AddLayers.html":{},"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"classes/HasFeatureinfo.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"classes/ResetMode.html":{},"classes/SetDictionary.html":{},"classes/SetDisabled.html":{},"classes/SetHoverColor.html":{},"classes/SetLayer.html":{},"classes/SetLayers.html":{},"classes/SetMaxFeatures.html":{},"classes/SetMeasureLayer.html":{},"classes/SetMode.html":{},"classes/SetResultsItems.html":{},"classes/SetResultsLayer.html":{},"classes/SetSelectedLayer.html":{},"classes/SetTitle.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{}}}],["vectorsourc",{"_index":376,"title":{},"body":{"components/CursorComponent.html":{},"components/FeatureinfoComponent.html":{},"components/MeasureComponent.html":{}}}],["vendor",{"_index":2488,"title":{},"body":{"index.html":{}}}],["vertex",{"_index":1781,"title":{},"body":{"interfaces/MeasureDictionary.html":{},"interfaces/MeasureMode.html":{},"interfaces/State-7.html":{}}}],["view",{"_index":646,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{},"interfaces/MangolConfigLayer2.html":{},"interfaces/MangolConfigLayerGroup-1.html":{},"interfaces/MangolConfigMap.html":{},"interfaces/MangolConfigMapMousePosition.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/RotationButtonComponent.html":{},"index.html":{}}}],["view.anim",{"_index":2018,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["view.getrot",{"_index":2017,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["view.interface.t",{"_index":1434,"title":{},"body":{"interfaces/MangolConfigView.html":{}}}],["view.on('change:rot",{"_index":2015,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["view.setrotation(0",{"_index":2021,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["view.un('change:rot",{"_index":2013,"title":{},"body":{"components/RotationButtonComponent.html":{}}}],["viewchild",{"_index":844,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["viewchild(matsort",{"_index":848,"title":{},"body":{"components/FeatureinfoTableDialogComponent.html":{}}}],["visibility_off",{"_index":1064,"title":{},"body":{"components/LayerComponent.html":{}}}],["visibl",{"_index":416,"title":{},"body":{"components/CursorComponent.html":{},"components/LayerComponent.html":{},"components/LayerGroupComponent.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"modules/MangolModule.html":{},"interfaces/OlxLayerLayerOptions.html":{},"classes/ResetMode.html":{},"classes/SetLayer.html":{},"classes/SetMode.html":{},"classes/SetVisible.html":{},"interfaces/State-2.html":{},"index.html":{}}}],["visibleal",{"_index":1091,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["visibleall(group",{"_index":1112,"title":{},"body":{"components/LayerGroupComponent.html":{}}}],["void",{"_index":91,"title":{},"body":{"components/ControllersComponent.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"interfaces/FsDocument.html":{},"interfaces/FsDocumentElement.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"injectables/LayertreeService.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"injectables/MangolService.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{}}}],["want",{"_index":2474,"title":{},"body":{"index.html":{}}}],["warn",{"_index":2578,"title":{},"body":{"index.html":{}}}],["watch",{"_index":2470,"title":{},"body":{"index.html":{}}}],["way",{"_index":2556,"title":{},"body":{"index.html":{}}}],["web",{"_index":2438,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":2490,"title":{},"body":{"index.html":{}}}],["well",{"_index":2475,"title":{},"body":{"index.html":{}}}],["whatev",{"_index":2483,"title":{},"body":{"index.html":{}}}],["white",{"_index":430,"title":{},"body":{"components/CursorComponent.html":{}}}],["whitelist",{"_index":1503,"title":{},"body":{"modules/MangolModule.html":{}}}],["widget",{"_index":2606,"title":{},"body":{"index.html":{}}}],["width",{"_index":1058,"title":{},"body":{"components/LayerComponent.html":{},"injectables/StyleService.html":{},"index.html":{}}}],["window.getselection().addrange(rang",{"_index":1934,"title":{},"body":{"components/PositionComponent.html":{}}}],["window.getselection().removeallrang",{"_index":1933,"title":{},"body":{"components/PositionComponent.html":{}}}],["wish",{"_index":2460,"title":{},"body":{"index.html":{}}}],["wm",{"_index":785,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["work",{"_index":465,"title":{},"body":{"components/EditComponent.html":{},"components/LegendComponent.html":{},"components/PrintComponent.html":{},"index.html":{}}}],["written",{"_index":2448,"title":{},"body":{"index.html":{}}}],["x",{"_index":806,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["x=').replace('&j",{"_index":810,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["y",{"_index":807,"title":{},"body":{"injectables/FeatureinfoService.html":{}}}],["yarn",{"_index":2480,"title":{},"body":{"index.html":{}}}],["yor",{"_index":2535,"title":{},"body":{"index.html":{}}}],["zindex",{"_index":404,"title":{},"body":{"components/CursorComponent.html":{},"interfaces/MangolConfigLayer.html":{},"interfaces/MangolConfigLayerColumn.html":{},"interfaces/MangolConfigLayerGroup.html":{},"interfaces/MangolConfigLayertree.html":{},"interfaces/MangolLayerGroupOptions.html":{},"interfaces/MangolLayerOptions.html":{},"interfaces/OlxLayerLayerOptions.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"interfaces/ControllersStateModel.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"modules/EditModule.html":{},"components/FeatureinfoComponent.html":{},"interfaces/FeatureinfoDictionary.html":{},"modules/FeatureinfoModule.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"modules/LayertreeModule.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolConfigView.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"modules/MangolModule.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MeasureComponent.html":{},"modules/MeasureModule.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"modules/PrintModule.html":{},"classes/Reset.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"classes/SetFullscreenDictionary.html":{},"classes/SetPositionCoordinates.html":{},"classes/SetPositionDictionary.html":{},"classes/SetPositionPrecision.html":{},"classes/SetRotationDictionary.html":{},"classes/SetRotationValue.html":{},"classes/SetScalebar.html":{},"classes/SetShowFullscreen.html":{},"classes/SetShowFullscreenTooltip.html":{},"classes/SetShowPosition.html":{},"classes/SetShowRotation.html":{},"classes/SetShowRotationTooltip.html":{},"classes/SetShowTooltip.html":{},"classes/SetShowZoom.html":{},"classes/SetZoomDictionary.html":{},"modules/SharedModule.html":{},"components/SidebarButtonComponent.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"components/TabsComponent.html":{},"modules/TabsModule.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"index.html":{},"overview.html":{}}}],["zoom_in",{"_index":748,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}],["zoombuttonscompon",{"_index":247,"title":{"components/ZoomButtonsComponent.html":{}},"body":{"components/ControllersComponent.html":{},"modules/ControllersModule.html":{},"components/CursorComponent.html":{},"components/DescriptionComponent.html":{},"components/EditComponent.html":{},"components/FeatureinfoComponent.html":{},"components/FeatureinfoResultsComponent.html":{},"components/FeatureinfoSelectComponent.html":{},"components/FeatureinfoTableDialogComponent.html":{},"components/FeaturenfoTableComponent.html":{},"components/FullscreenButtonComponent.html":{},"components/LayerComponent.html":{},"components/LayerDetailsComponent.html":{},"components/LayerGroupComponent.html":{},"components/LayertreeComponent.html":{},"components/LayertreeItemComponent.html":{},"components/LegendComponent.html":{},"components/MangolComponent.html":{},"components/MapComponent.html":{},"components/MeasureComponent.html":{},"components/MeasureResultsComponent.html":{},"components/MeasureSelectComponent.html":{},"components/PositionComponent.html":{},"components/PrintComponent.html":{},"components/RotationButtonComponent.html":{},"components/ScalebarComponent.html":{},"components/SidebarButtonComponent.html":{},"components/TabsComponent.html":{},"components/TransparencyComponent.html":{},"components/ZoomButtonsComponent.html":{},"overview.html":{}}}],["zoomdur",{"_index":1438,"title":{},"body":{"interfaces/MangolConfigView.html":{}}}],["zoomin",{"_index":299,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{},"components/ZoomButtonsComponent.html":{}}}],["zoomonrowclick",{"_index":1375,"title":{},"body":{"interfaces/MangolConfigFeatureInfoItem.html":{},"interfaces/MangolConfigLayertreeItem.html":{},"interfaces/MangolConfigMeasureItem.html":{},"interfaces/MangolConfigPrintItem.html":{},"interfaces/MangolConfigToolbar.html":{},"interfaces/MangolConfigToolbarItem.html":{},"interfaces/MangolConfigToolbarLayertreeDetails.html":{}}}],["zoomopt",{"_index":145,"title":{},"body":{"components/ControllersComponent.html":{}}}],["zoomoptions.dictionari",{"_index":150,"title":{},"body":{"components/ControllersComponent.html":{}}}],["zoomoptions.show",{"_index":146,"title":{},"body":{"components/ControllersComponent.html":{}}}],["zoomoptions.showtooltip",{"_index":152,"title":{},"body":{"components/ControllersComponent.html":{}}}],["zoomout",{"_index":300,"title":{},"body":{"interfaces/ControllersStateModel.html":{},"interfaces/MangolConfigMapControllers.html":{},"interfaces/MangolControllersFullScreenDictionary.html":{},"interfaces/MangolControllersFullScreenOptions.html":{},"interfaces/MangolControllersOptions.html":{},"interfaces/MangolControllersPositionDictionary.html":{},"interfaces/MangolControllersPositionOptions.html":{},"interfaces/MangolControllersPositionStateModel.html":{},"interfaces/MangolControllersRotationDictionary.html":{},"interfaces/MangolControllersRotationOptions.html":{},"interfaces/MangolControllersRotationStateModel.html":{},"interfaces/MangolControllersScalebarOptions.html":{},"interfaces/MangolControllersTileloadOptions.html":{},"interfaces/MangolControllersZoomDictionary.html":{},"interfaces/MangolControllersZoomOptions.html":{},"interfaces/State-1.html":{},"components/ZoomButtonsComponent.html":{}}}],["zoomtofeatur",{"_index":525,"title":{},"body":{"interfaces/FeatureinfoDictionary.html":{},"components/FeatureinfoResultsComponent.html":{},"interfaces/State-3.html":{}}}],["zoomtofeature(featur",{"_index":644,"title":{},"body":{"components/FeatureinfoResultsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddLayers.html":{"url":"classes/AddLayers.html","title":"class - AddLayers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLayers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layers/layers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolLayer[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layers/layers.actions.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolLayer[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolLayer[]\n\n                    \n                \n                    \n                        \n                            Type :     MangolLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layers/layers.actions.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_LAYERS\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layers/layers.actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport VectorLayer from 'ol/layer/Vector';\n\nexport const ADD_LAYERS = '[Layers] Add Layers';\nexport const SET_MEASURE_LAYER = '[Layers] Set Measure Layer';\n\nexport class AddLayers implements Action {\n  readonly type = ADD_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetMeasureLayer implements Action {\n  readonly type = SET_MEASURE_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\n\nexport type LayersActions = AddLayers | SetMeasureLayer;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddMap.html":{"url":"classes/AddMap.html","title":"class - AddMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/map/map.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Map)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/map/map.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/map/map.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_MAP\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/map/map.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Map from 'ol/Map';\n\nexport const ADD_MAP = '[Map] Add Map';\n\nexport class AddMap implements Action {\n  readonly type = ADD_MAP;\n  constructor(public payload: Map) {}\n}\n\nexport type MapActions = AddMap;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearState.html":{"url":"classes/ClearState.html","title":"class - ClearState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/mangol.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/mangol.actions.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : CLEAR_STATE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/mangol.actions.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const CLEAR_STATE = '[Mangol] Clear State';\n\nexport class ClearState implements Action {\n  readonly type = CLEAR_STATE;\n  constructor() {}\n}\n\nexport type MangolActions = ClearState;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControllersComponent.html":{"url":"components/ControllersComponent.html","title":"component - ControllersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ControllersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/controllers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-controllers\n            \n\n            \n                styleUrls\n                controllers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./controllers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config$\n                            \n                            \n                                configSubscription\n                            \n                            \n                                fullScreen$\n                            \n                            \n                                hasSidebar$\n                            \n                            \n                                position$\n                            \n                            \n                                rotation$\n                            \n                            \n                                sidebarCollapsible$\n                            \n                            \n                                zoom$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/controllers.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:162\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullScreen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fullScreen$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSidebar$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSidebar$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarCollapsible$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarCollapsible$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/controllers.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\n\nimport {\n  MangolControllersZoomOptions,\n  MangolControllersFullScreenOptions\n} from '../../interfaces/config-map-controllers.interface';\nimport { MangolConfig } from './../../interfaces/config.interface';\nimport * as ControllersActions from './../../store/controllers/controllers.actions';\nimport {\n  MangolControllersPositionStateModel,\n  MangolControllersRotationStateModel\n} from './../../store/controllers/controllers.reducers';\nimport * as fromMangol from './../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-controllers',\n  templateUrl: './controllers.component.html',\n  styleUrls: ['./controllers.component.scss']\n})\nexport class ControllersComponent implements OnInit, OnDestroy {\n  config$: Observable;\n  hasSidebar$: Observable;\n  sidebarCollapsible$: Observable;\n  zoom$: Observable;\n  position$: Observable;\n  rotation$: Observable;\n  fullScreen$: Observable;\n\n  configSubscription: Subscription;\n\n  constructor(private store: Store) {\n    this.config$ = this.store.select(state => state.config.config);\n    this.hasSidebar$ = this.store.select(state => state.sidebar.hasSidebar);\n    this.sidebarCollapsible$ = this.store.select(\n      state => state.sidebar.collapsible\n    );\n    this.zoom$ = this.store.select(state => state.controllers.zoom);\n    this.position$ = this.store.select(state => state.controllers.position);\n    this.rotation$ = this.store.select(state => state.controllers.rotation);\n    this.fullScreen$ = this.store.select(state => state.controllers.fullScreen);\n  }\n\n  ngOnInit() {\n    this.configSubscription = this.config$.subscribe(config => {\n      this.store.dispatch(new ControllersActions.Reset());\n      if (\n        typeof config !== 'undefined' &&\n        config !== null &&\n        !!config.map &&\n        !!config.map.controllers\n      ) {\n        /**\n         * Zoom buttons config\n         */\n        if (!!config.map.controllers.zoom) {\n          const zoomOptions = config.map.controllers.zoom;\n          if (!!zoomOptions.show) {\n            this.store.dispatch(\n              new ControllersActions.SetShowZoom(zoomOptions.show)\n            );\n          }\n          if (!!zoomOptions.dictionary) {\n            this.store.dispatch(\n              new ControllersActions.SetZoomDictionary(zoomOptions.dictionary)\n            );\n          }\n          if (!!zoomOptions.showTooltip) {\n            this.store.dispatch(\n              new ControllersActions.SetShowTooltip(zoomOptions.showTooltip)\n            );\n          }\n        }\n        /**\n         * Scalebar config (not yet implemented)\n         */\n        if (!!config.map.controllers.scalebar) {\n          this.store.dispatch(\n            new ControllersActions.SetScalebar(config.map.controllers.scalebar)\n          );\n        }\n        /**\n         * Mouse position config\n         */\n        if (!!config.map.controllers.position) {\n          const positionOptions = config.map.controllers.position;\n          if (!!positionOptions.show) {\n            this.store.dispatch(\n              new ControllersActions.SetShowPosition(positionOptions.show)\n            );\n          }\n          if (!!positionOptions.precision) {\n            this.store.dispatch(\n              new ControllersActions.SetPositionPrecision(\n                positionOptions.precision\n              )\n            );\n          }\n          if (!!positionOptions.dictionary) {\n            this.store.dispatch(\n              new ControllersActions.SetPositionDictionary(\n                positionOptions.dictionary\n              )\n            );\n          }\n        }\n        /**\n         * Rotation button config\n         */\n        if (!!config.map.controllers.rotation) {\n          const rotationOptions = config.map.controllers.rotation;\n          if (!!rotationOptions.show) {\n            this.store.dispatch(\n              new ControllersActions.SetShowRotation(rotationOptions.show)\n            );\n          }\n          if (!!rotationOptions.dictionary) {\n            this.store.dispatch(\n              new ControllersActions.SetRotationDictionary(\n                rotationOptions.dictionary\n              )\n            );\n          }\n          if (!!rotationOptions.showTooltip) {\n            this.store.dispatch(\n              new ControllersActions.SetShowRotationTooltip(\n                rotationOptions.showTooltip\n              )\n            );\n          }\n        }\n        /**\n         * Fullscreen button config\n         */\n        if (!!config.map.controllers.fullScreen) {\n          const fullscreenOptions = config.map.controllers.fullScreen;\n          if (fullscreenOptions.hasOwnProperty('show')) {\n            this.store.dispatch(\n              new ControllersActions.SetShowFullscreen(fullscreenOptions.show)\n            );\n          }\n          if (fullscreenOptions.hasOwnProperty('dictionary')) {\n            this.store.dispatch(\n              new ControllersActions.SetFullscreenDictionary(\n                fullscreenOptions.dictionary\n              )\n            );\n          }\n          if (fullscreenOptions.hasOwnProperty('showTooltip')) {\n            this.store.dispatch(\n              new ControllersActions.SetShowFullscreenTooltip(\n                fullscreenOptions.showTooltip\n              )\n            );\n          }\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    \n    \n\n\n    \n     -->\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             -->'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControllersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControllersModule.html":{"url":"modules/ControllersModule.html","title":"module - ControllersModule","body":"\n                   \n\n\n\n\n  Modules\n  ControllersModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControllersModule\n\n\n\ncluster_ControllersModule_declarations\n\n\n\ncluster_ControllersModule_exports\n\n\n\n\nControllersComponent\n\nControllersComponent\n\n\n\nControllersModule\n\nControllersModule\n\nControllersModule -->\n\nControllersComponent->ControllersModule\n\n\n\n\n\nCursorComponent\n\nCursorComponent\n\nControllersModule -->\n\nCursorComponent->ControllersModule\n\n\n\n\n\nFullscreenButtonComponent\n\nFullscreenButtonComponent\n\nControllersModule -->\n\nFullscreenButtonComponent->ControllersModule\n\n\n\n\n\nPositionComponent\n\nPositionComponent\n\nControllersModule -->\n\nPositionComponent->ControllersModule\n\n\n\n\n\nRotationButtonComponent\n\nRotationButtonComponent\n\nControllersModule -->\n\nRotationButtonComponent->ControllersModule\n\n\n\n\n\nScalebarComponent\n\nScalebarComponent\n\nControllersModule -->\n\nScalebarComponent->ControllersModule\n\n\n\n\n\nSidebarButtonComponent\n\nSidebarButtonComponent\n\nControllersModule -->\n\nSidebarButtonComponent->ControllersModule\n\n\n\n\n\nZoomButtonsComponent\n\nZoomButtonsComponent\n\nControllersModule -->\n\nZoomButtonsComponent->ControllersModule\n\n\n\n\n\nControllersComponent \n\nControllersComponent \n\nControllersComponent  -->\n\nControllersModule->ControllersComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/controllers/controllers.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ControllersComponent\n                            \n                            \n                                CursorComponent\n                            \n                            \n                                FullscreenButtonComponent\n                            \n                            \n                                PositionComponent\n                            \n                            \n                                RotationButtonComponent\n                            \n                            \n                                ScalebarComponent\n                            \n                            \n                                SidebarButtonComponent\n                            \n                            \n                                ZoomButtonsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ControllersComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { ControllersComponent } from './controllers.component';\nimport { CursorComponent } from './cursor/cursor.component';\nimport { PositionComponent } from './position/position.component';\nimport { RotationButtonComponent } from './rotation-button/rotation-button.component';\nimport { ScalebarComponent } from './scalebar/scalebar.component';\nimport { SidebarButtonComponent } from './sidebar-button/sidebar-button.component';\nimport { ZoomButtonsComponent } from './zoom-buttons/zoom-buttons.component';\nimport { FullscreenButtonComponent } from './fullscreen-button/fullscreen-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatChipsModule\n  ],\n  declarations: [\n    ControllersComponent,\n    SidebarButtonComponent,\n    ZoomButtonsComponent,\n    CursorComponent,\n    PositionComponent,\n    ScalebarComponent,\n    RotationButtonComponent,\n    FullscreenButtonComponent\n  ],\n  exports: [ControllersComponent]\n})\nexport class ControllersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllersStateModel.html":{"url":"interfaces/ControllersStateModel.html","title":"interface - ControllersStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllersStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        position\n                                \n                                \n                                        rotation\n                                \n                                \n                                        scalebar\n                                \n                                \n                                        zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     MangolControllersPositionStateModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersPositionStateModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                    \n                                \n                                \n                                    \n                                        rotation:     MangolControllersRotationStateModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersRotationStateModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scalebar\n                                    \n                                \n                                \n                                    \n                                        scalebar:     MangolControllersScalebarOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersScalebarOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:     MangolControllersZoomOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersZoomOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangolControllersPositionOptions,\n  MangolControllersRotationOptions,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomOptions,\n  MangolControllersFullScreenOptions\n} from './../../interfaces/config-map-controllers.interface';\nimport * as ControllersActions from './controllers.actions';\n\nexport interface MangolControllersPositionStateModel\n  extends MangolControllersPositionOptions {\n  coordinates: number[];\n}\n\nexport interface MangolControllersRotationStateModel\n  extends MangolControllersRotationOptions {\n  rotation: number;\n}\n\nexport interface ControllersStateModel {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n}\n\nexport interface State {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n  fullScreen: MangolControllersFullScreenOptions;\n}\n\nconst initialState: State = {\n  zoom: {\n    show: false,\n    dictionary: {\n      zoomIn: 'Zoom in',\n      zoomOut: 'Zoom out'\n    },\n    showTooltip: true\n  },\n  scalebar: { show: false },\n  position: {\n    show: false,\n    coordinates: [],\n    precision: 2,\n    dictionary: {\n      textCopied: 'Copied',\n      copyCoordinates: 'Copy coordinates',\n      closeSnackbar: 'Close'\n    }\n  },\n  rotation: {\n    show: false,\n    dictionary: { rotateToNorth: 'Rotate to North' },\n    showTooltip: true,\n    rotation: 0\n  },\n  fullScreen: {\n    show: false,\n    showTooltip: true,\n    dictionary: {\n      maximize: 'Maximize',\n      minimize: 'Minimize'\n    }\n  }\n};\n\nexport function controllersReducer(\n  state = initialState,\n  action: ControllersActions.ControllersActions\n) {\n  switch (action.type) {\n    case ControllersActions.RESET:\n      return {\n        ...state,\n        zoom: initialState.zoom,\n        scalebar: initialState.scalebar,\n        position: initialState.position,\n        rotation: initialState.rotation,\n        fullScreen: initialState.fullScreen\n      };\n    case ControllersActions.SET_SHOW_ZOOM:\n      return { ...state, zoom: { ...state.zoom, show: action.payload } };\n    case ControllersActions.SET_ZOOM_DICTIONARY:\n      return { ...state, zoom: { ...state.zoom, dictionary: action.payload } };\n    case ControllersActions.SET_SHOW_TOOLTIP:\n      return { ...state, zoom: { ...state.zoom, showTooltip: action.payload } };\n    case ControllersActions.SET_SCALEBAR:\n      return { ...state, scalebar: action.payload };\n    case ControllersActions.SET_SHOW_POSITION:\n      return {\n        ...state,\n        position: { ...state.position, show: action.payload }\n      };\n    case ControllersActions.SET_POSITION_PRECISION:\n      return {\n        ...state,\n        position: { ...state.position, precision: action.payload }\n      };\n    case ControllersActions.SET_POSITION_COORDINATES:\n      return {\n        ...state,\n        position: { ...state.position, coordinates: action.payload }\n      };\n    case ControllersActions.SET_POSITION_DICTIONARY:\n      return {\n        ...state,\n        position: { ...state.position, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION:\n      return {\n        ...state,\n        rotation: { ...state.rotation, show: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_DICTIONARY:\n      return {\n        ...state,\n        rotation: { ...state.rotation, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION_TOOLTIP:\n      return {\n        ...state,\n        rotation: { ...state.rotation, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_VALUE:\n      return {\n        ...state,\n        rotation: { ...state.rotation, rotation: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, show: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN_TOOLTIP:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_FULLSCREEN_DICTIONARY:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, dictionary: action.payload }\n      };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorComponent.html":{"url":"components/CursorComponent.html","title":"component - CursorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CursorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/cursor/cursor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-cursor\n            \n\n            \n                styleUrls\n                cursor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combinedSubscription\n                            \n                            \n                                layer\n                            \n                            \n                                layerSubscription\n                            \n                            \n                                map$\n                            \n                            \n                                mode\n                            \n                            \n                                modeSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                setStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/cursor/cursor.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseMove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onMouseMove(evt: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setStyle(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Style\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combinedSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     VectorLayer\n\n                    \n                \n                    \n                        \n                            Type :     VectorLayer\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layerSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layerSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     CursorMode\n\n                    \n                \n                    \n                        \n                            Type :     CursorMode\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/cursor/cursor.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport Fill from 'ol/style/Fill';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { CursorMode } from '../../../interfaces/cursor-mode';\nimport * as CursorActions from './../../../store/cursor/cursor.actions';\nimport * as fromMangol from './../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-cursor',\n  templateUrl: './cursor.component.html',\n  styleUrls: ['./cursor.component.scss']\n})\nexport class CursorComponent implements OnInit, OnDestroy {\n  map$: Observable;\n\n  mode: CursorMode = null;\n  layer: VectorLayer = null;\n\n  combinedSubscription: Subscription;\n  modeSubscription: Subscription;\n  layerSubscription: Subscription;\n\n  constructor(private store: Store) {\n    this.map$ = this.store.select(state => state.map.map);\n\n    this.modeSubscription = this.store\n      .select(state => state.cursor.mode)\n      .subscribe(mode => (this.mode = mode));\n    this.layerSubscription = this.store\n      .select(state => state.cursor.layer)\n      .subscribe(layer => (this.layer = layer));\n  }\n\n  ngOnInit() {\n    this.map$.pipe(filter(m => m !== null)).subscribe(m => {\n      const layer = new VectorLayer({\n        source: new VectorSource(),\n        zIndex: 1000,\n        style: feat => this.setStyle(feat)\n      });\n      this.store.dispatch(new CursorActions.SetLayer(layer));\n      m.addLayer(layer);\n      m.on('pointermove', evt => this.onMouseMove(evt));\n    });\n\n    this.combinedSubscription = combineLatest(\n      this.store\n        .select(state => state.cursor.layer)\n        .pipe(filter(layer => layer !== null)),\n      this.store.select(state => state.cursor.visible)\n    ).subscribe(([layer, visible]) => {\n      layer.setVisible(visible);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.combinedSubscription) {\n      this.combinedSubscription.unsubscribe();\n    }\n    if (this.modeSubscription) {\n      this.modeSubscription.unsubscribe();\n    }\n    if (this.layerSubscription) {\n      this.layerSubscription.unsubscribe();\n    }\n  }\n\n  private setStyle(feature: Feature): Style {\n    return new Style({\n      text: new Text({\n        font: '12px Roboto, sans-serif',\n        text: this.mode !== null ? this.mode.text : null,\n        fill: new Fill({\n          color:\n            this.mode !== null && this.mode.hasOwnProperty('color')\n              ? this.mode.color\n              : 'white'\n        }),\n        backgroundFill: new Fill({\n          color:\n            this.mode !== null && this.mode.hasOwnProperty('backgroundFill')\n              ? this.mode.backgroundFill\n              : [0, 0, 0, 0.6]\n        }),\n        padding: [5, 8, 5, 8],\n        rotateWithView: true,\n        offsetX: 20,\n        offsetY: -20,\n        textAlign: 'left'\n      })\n    });\n  }\n\n  private onMouseMove(evt: any) {\n    const feat = new Feature({\n      geometry: new Point(evt.coordinate)\n    });\n    this.layer.getSource().clear();\n    this.layer.getSource().addFeature(feat);\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CursorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CursorMode.html":{"url":"interfaces/CursorMode.html","title":"interface - CursorMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CursorMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/cursor-mode.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        backgroundFill\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        cursor\n                                \n                                \n                                            Optional\n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundFill\n                                    \n                                \n                                \n                                    \n                                        backgroundFill:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CursorMode {\n  text?: string;\n  cursor?: string;\n  color?: [number, number, number, number];\n  backgroundFill?: [number, number, number, number];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DescriptionComponent.html":{"url":"components/DescriptionComponent.html","title":"component - DescriptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DescriptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layer-details/description/description.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-description\n            \n\n            \n                styleUrls\n                description.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./description.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layer-details/description/description.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/description/description.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/description/description.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'mangol-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.scss']\n})\nexport class DescriptionComponent implements OnInit {\n  @Input() description: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n    {{ description }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ description }}'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DescriptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditComponent.html":{"url":"components/EditComponent.html","title":"component - EditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/edit/edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-edit\n            \n\n            \n                styleUrls\n                edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/edit/edit.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/edit/edit.component.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mangol-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  edit works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  edit works!'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EditModule.html":{"url":"modules/EditModule.html","title":"module - EditModule","body":"\n                   \n\n\n\n\n  Modules\n  EditModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EditModule\n\n\n\ncluster_EditModule_declarations\n\n\n\ncluster_EditModule_exports\n\n\n\n\nEditComponent\n\nEditComponent\n\n\n\nEditModule\n\nEditModule\n\nEditModule -->\n\nEditComponent->EditModule\n\n\n\n\n\nEditComponent \n\nEditComponent \n\nEditComponent  -->\n\nEditModule->EditComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/edit/edit.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    EditComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditComponent } from './edit.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EditComponent],\n  exports: [EditComponent]\n})\nexport class EditModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeatureinfoComponent.html":{"url":"components/FeatureinfoComponent.html","title":"component - FeatureinfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeatureinfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/featureinfo/featureinfo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-featureinfo\n            \n\n            \n                styleUrls\n                featureinfo.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./featureinfo.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary$\n                            \n                            \n                                layers$\n                            \n                            \n                                map$\n                            \n                            \n                                mapSubscription\n                            \n                            \n                                resultsLayer$\n                            \n                            \n                                selectedLayer$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, styleService: StyleService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/featureinfo/featureinfo.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styleService\n                                                  \n                                                        \n                                                                    StyleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionary$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionary$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layers$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultsLayer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultsLayer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLayer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedLayer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { MangolLayer } from '../../classes/Layer';\nimport { StyleService } from '../_shared/shared/services/style.service';\nimport * as FeatureinfoActions from './../../store/featureinfo/featureinfo.actions';\nimport { FeatureinfoDictionary } from './../../store/featureinfo/featureinfo.reducers';\nimport * as fromMangol from './../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-featureinfo',\n  templateUrl: './featureinfo.component.html',\n  styleUrls: ['./featureinfo.component.scss']\n})\nexport class FeatureinfoComponent implements OnInit, OnDestroy {\n  layers$: Observable;\n  selectedLayer$: Observable;\n  map$: Observable;\n  resultsLayer$: Observable;\n  dictionary$: Observable;\n\n  mapSubscription: Subscription;\n\n  constructor(\n    private store: Store,\n    private styleService: StyleService\n  ) {\n    // Get the queryable layers\n    this.layers$ = this.store.select(state =>\n      state.layers.layers.filter(layer => layer.queryable)\n    );\n    // Get the selected layer\n    this.selectedLayer$ = this.store.select(\n      state => state.featureinfo.selectedLayer\n    );\n    this.map$ = this.store.select(state => state.map.map);\n    this.resultsLayer$ = this.store.select(\n      state => state.featureinfo.resultsLayer\n    );\n    this.dictionary$ = this.store.select(state => state.featureinfo.dictionary);\n  }\n\n  ngOnInit() {\n    const resultsLayer = new VectorLayer({\n      source: new VectorSource({\n        features: []\n      }),\n      style: feat => this.styleService.hoverStyle(feat)\n    });\n\n    // Add the resultsLayer to the map\n    this.mapSubscription = this.map$\n      .pipe(filter(m => m !== null))\n      .subscribe(m => {\n        m.addLayer(resultsLayer);\n        this.store.dispatch(\n          new FeatureinfoActions.SetResultsLayer(resultsLayer)\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    // Remove the resultsLayer from the map\n    combineLatest(\n      this.map$.pipe(filter(m => m !== null)),\n      this.resultsLayer$.pipe(filter(r => r !== null))\n    )\n      .pipe(take(1))\n      .subscribe(([m, resultsLayer]) => {\n        m.removeLayer(resultsLayer);\n      });\n    if (this.mapSubscription) {\n      this.mapSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    {{(dictionary$ | async).noLayers}}\n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{(dictionary$ | async).noLayers}}                        '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeatureinfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeatureinfoDictionary.html":{"url":"interfaces/FeatureinfoDictionary.html","title":"interface - FeatureinfoDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeatureinfoDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        chooseLayer\n                                \n                                \n                                            Optional\n                                        clearSelection\n                                \n                                \n                                            Optional\n                                        clickOnMap\n                                \n                                \n                                            Optional\n                                        closeSnackbar\n                                \n                                \n                                            Optional\n                                        exportToCsv\n                                \n                                \n                                            Optional\n                                        feature\n                                \n                                \n                                            Optional\n                                        noLayers\n                                \n                                \n                                            Optional\n                                        numberOfFeaturesFound\n                                \n                                \n                                            Optional\n                                        showAllResults\n                                \n                                \n                                            Optional\n                                        zoomToFeature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chooseLayer\n                                    \n                                \n                                \n                                    \n                                        chooseLayer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearSelection\n                                    \n                                \n                                \n                                    \n                                        clearSelection:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickOnMap\n                                    \n                                \n                                \n                                    \n                                        clickOnMap:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeSnackbar\n                                    \n                                \n                                \n                                    \n                                        closeSnackbar:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exportToCsv\n                                    \n                                \n                                \n                                    \n                                        exportToCsv:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feature\n                                    \n                                \n                                \n                                    \n                                        feature:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noLayers\n                                    \n                                \n                                \n                                    \n                                        noLayers:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfFeaturesFound\n                                    \n                                \n                                \n                                    \n                                        numberOfFeaturesFound:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllResults\n                                    \n                                \n                                \n                                    \n                                        showAllResults:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToFeature\n                                    \n                                \n                                \n                                    \n                                        zoomToFeature:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport * as FeatureinfoActions from './featureinfo.actions';\n\nexport interface FeatureinfoDictionary {\n  clearSelection?: string;\n  chooseLayer?: string;\n  clickOnMap?: string;\n  noLayers?: string;\n  numberOfFeaturesFound?: string;\n  closeSnackbar?: string;\n  zoomToFeature?: string;\n  showAllResults?: string;\n  feature?: string;\n  exportToCsv?: string;\n}\n\nexport interface State {\n  hasFeatureinfo: boolean;\n  disabled: boolean;\n  title: string;\n  maxFeatures: number;\n  layers: MangolLayer[];\n  selectedLayer: MangolLayer;\n  resultsLayer: VectorLayer;\n  resultsItems: Feature[];\n  snackbarDuration: number;\n  hoverColor: [number, number, number];\n  dictionary: FeatureinfoDictionary;\n}\n\nconst initialState: State = {\n  hasFeatureinfo: false,\n  disabled: false,\n  title: 'Select on Map',\n  maxFeatures: 10,\n  layers: [],\n  selectedLayer: null,\n  resultsLayer: null,\n  resultsItems: [],\n  snackbarDuration: 3000,\n  hoverColor: [255, 255, 0],\n  dictionary: {\n    clearSelection: 'Clear selection',\n    chooseLayer: 'Choose a layer...',\n    clickOnMap: 'Click on Map',\n    noLayers: 'There are currently no queryable layers configured.',\n    numberOfFeaturesFound: 'Number of features found',\n    closeSnackbar: 'Close',\n    zoomToFeature: 'Zoom to Feature',\n    showAllResults: 'Open results dialog',\n    feature: 'Feature',\n    exportToCsv: 'Export to CSV'\n  }\n};\n\nexport function featureinfoReducer(\n  state = initialState,\n  action: FeatureinfoActions.FeatureinfoActions\n) {\n  switch (action.type) {\n    case FeatureinfoActions.HAS_FEATUREINFO:\n      return { ...state, hasFeatureinfo: action.payload };\n    case FeatureinfoActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case FeatureinfoActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case FeatureinfoActions.SET_MAX_FEATURES:\n      return { ...state, maxFeatures: action.payload };\n    case FeatureinfoActions.SET_LAYERS:\n      return { ...state, layers: action.payload };\n    case FeatureinfoActions.SET_SELECTED_LAYER:\n      return { ...state, selectedLayer: action.payload };\n    case FeatureinfoActions.SET_RESULTS_LAYER:\n      return { ...state, resultsLayer: action.payload };\n    case FeatureinfoActions.SET_RESULTS_ITEMS:\n      return { ...state, resultsItems: action.payload };\n    case FeatureinfoActions.SET_DICTIONARY:\n      return { ...state, dictionary: action.payload };\n    case FeatureinfoActions.SET_HOVER_COLOR:\n      return { ...state, hoverColor: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureinfoModule.html":{"url":"modules/FeatureinfoModule.html","title":"module - FeatureinfoModule","body":"\n                   \n\n\n\n\n  Modules\n  FeatureinfoModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeatureinfoModule\n\n\n\ncluster_FeatureinfoModule_declarations\n\n\n\ncluster_FeatureinfoModule_imports\n\n\n\ncluster_FeatureinfoModule_exports\n\n\n\ncluster_FeatureinfoModule_providers\n\n\n\n\nFeatureinfoComponent\n\nFeatureinfoComponent\n\n\n\nFeatureinfoModule\n\nFeatureinfoModule\n\nFeatureinfoModule -->\n\nFeatureinfoComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoResultsComponent\n\nFeatureinfoResultsComponent\n\nFeatureinfoModule -->\n\nFeatureinfoResultsComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoSelectComponent\n\nFeatureinfoSelectComponent\n\nFeatureinfoModule -->\n\nFeatureinfoSelectComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoTableDialogComponent\n\nFeatureinfoTableDialogComponent\n\nFeatureinfoModule -->\n\nFeatureinfoTableDialogComponent->FeatureinfoModule\n\n\n\n\n\nFeaturenfoTableComponent\n\nFeaturenfoTableComponent\n\nFeatureinfoModule -->\n\nFeaturenfoTableComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoComponent \n\nFeatureinfoComponent \n\nFeatureinfoComponent  -->\n\nFeatureinfoModule->FeatureinfoComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeatureinfoModule -->\n\nSharedModule->FeatureinfoModule\n\n\n\n\n\nFeatureinfoService\n\nFeatureinfoService\n\nFeatureinfoModule -->\n\nFeatureinfoService->FeatureinfoModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/featureinfo/featureinfo.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FeatureinfoComponent\n                            \n                            \n                                FeatureinfoResultsComponent\n                            \n                            \n                                FeatureinfoSelectComponent\n                            \n                            \n                                FeatureinfoTableDialogComponent\n                            \n                            \n                                FeaturenfoTableComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                FeatureinfoTableDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FeatureinfoService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FeatureinfoComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { SharedModule } from './../_shared/shared/shared.module';\nimport { FeatureinfoResultsComponent } from './components/featureinfo-results/featureinfo-results.component';\nimport { FeatureinfoSelectComponent } from './components/featureinfo-select/featureinfo-select.component';\nimport { FeatureinfoTableDialogComponent } from './components/featureinfo-table-dialog/featureinfo-table-dialog.component';\nimport { FeaturenfoTableComponent } from './components/featurenfo-table/featurenfo-table.component';\nimport { FeatureinfoComponent } from './featureinfo.component';\nimport { FeatureinfoService } from './featureinfo.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatButtonModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    SharedModule\n  ],\n  declarations: [\n    FeatureinfoComponent,\n    FeatureinfoSelectComponent,\n    FeatureinfoResultsComponent,\n    FeaturenfoTableComponent,\n    FeatureinfoTableDialogComponent\n  ],\n  entryComponents: [FeatureinfoTableDialogComponent],\n  exports: [FeatureinfoComponent],\n  providers: [FeatureinfoService]\n})\nexport class FeatureinfoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeatureinfoResultsComponent.html":{"url":"components/FeatureinfoResultsComponent.html","title":"component - FeatureinfoResultsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeatureinfoResultsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-featureinfo-results\n            \n\n            \n                styleUrls\n                featureinfo-results.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./featureinfo-results.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickFunction\n                            \n                            \n                                combinedSubscription\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                layer$\n                            \n                            \n                                resultsFeatures$\n                            \n                            \n                                resultsLayer$\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tab$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createClickFunction\n                            \n                            \n                                    Private\n                                _openSnackBar\n                            \n                            \n                                    Private\n                                _removeClickFunction\n                            \n                            \n                                getExpansionPanelTitle$\n                            \n                            \n                                hideFeatureOnMap\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openTableDialog\n                            \n                            \n                                showFeatureOnMap\n                            \n                            \n                                zoomToFeature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, featureinfoService: FeatureinfoService, snackBar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        featureinfoService\n                                                  \n                                                        \n                                                                    FeatureinfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dictionary\n                    \n                    \n                            \n                            Type :    FeatureinfoDictionary\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _createClickFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _createClickFunction(evt: any, layer: MangolLayer, m: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Creates the clickFunction for a given singleclick event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        layer\n                                                        \n                                                                    MangolLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        m\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _openSnackBar(hits: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:199\n                            \n                        \n\n\n                \n                    \n                            Opens a snackbar with the number of features found\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hits\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _removeClickFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _removeClickFunction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Removes the click funciton if needed, plus resets the cursor style\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpansionPanelTitle$\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExpansionPanelTitle$(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:219\n                            \n                        \n\n\n                \n                    \n                            Retrieves the title for the individual feature\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFeatureOnMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideFeatureOnMap(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:275\n                            \n                        \n\n\n                \n                    \n                            Hides the hovered feature on the map\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openTableDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenTableDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:243\n                            \n                        \n\n\n                \n                    \n                            Opens a full table dialog\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFeatureOnMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowFeatureOnMap(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:265\n                            \n                        \n\n\n                \n                    \n                            Shows the feature on the map with a hover style\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoomToFeature\n                            \n                            \n                        \n                    \n                \n                \n                    \nzoomToFeature(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:285\n                            \n                        \n\n\n                \n                    \n                            Sets the view extent to a feature\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickFunction:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combinedSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultsFeatures$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultsFeatures$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultsLayer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultsLayer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tab$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-results/featureinfo-results.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, take, map } from 'rxjs/operators';\n\nimport { MangolLayer } from '../../../../classes/Layer';\nimport { FeatureinfoTableDialogComponent } from '../featureinfo-table-dialog/featureinfo-table-dialog.component';\nimport * as CursorActions from './../../../../store/cursor/cursor.actions';\nimport * as FeatureinfoActions from './../../../../store/featureinfo/featureinfo.actions';\nimport { FeatureinfoDictionary } from './../../../../store/featureinfo/featureinfo.reducers';\nimport * as fromMangol from './../../../../store/mangol.reducers';\nimport { FeatureinfoService } from './../../featureinfo.service';\n\n@Component({\n  selector: 'mangol-featureinfo-results',\n  templateUrl: './featureinfo-results.component.html',\n  styleUrls: ['./featureinfo-results.component.scss']\n})\nexport class FeatureinfoResultsComponent implements OnInit, OnDestroy {\n  @Input()\n  dictionary: FeatureinfoDictionary;\n\n  layer$: Observable;\n  resultsLayer$: Observable;\n  resultsFeatures$: Observable;\n  tab$: Observable;\n\n  combinedSubscription: Subscription;\n\n  clickFunction: any = null;\n\n  constructor(\n    private store: Store,\n    private featureinfoService: FeatureinfoService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.resultsLayer$ = this.store.select(\n      state => state.featureinfo.resultsLayer\n    );\n\n    this.resultsFeatures$ = this.store.select(\n      state => state.featureinfo.resultsItems\n    );\n\n    this.layer$ = this.store.select(state => state.featureinfo.selectedLayer);\n\n    this.tab$ = this.store.select(state => state.sidebar.selectedModule);\n\n    this.combinedSubscription = combineLatest(this.tab$, this.layer$).subscribe(\n      ([selectedModule, layer]) => {\n        this.store.dispatch(new FeatureinfoActions.SetResultsItems([]));\n        if (selectedModule === 'featureinfo') {\n          if (layer !== null) {\n            this.store\n              .select(state => state.map.map)\n              .pipe(take(1))\n              .subscribe(m => {\n                this.store.dispatch(\n                  new CursorActions.SetMode({\n                    text: this.dictionary.clickOnMap,\n                    cursor: 'crosshair'\n                  })\n                );\n                this.store.dispatch(new CursorActions.SetVisible(true));\n                if (this.clickFunction !== null) {\n                  m.un('singleclick', this.clickFunction);\n                }\n                this.clickFunction = evt =>\n                  this._createClickFunction(evt, layer, m);\n                m.on('singleclick', this.clickFunction);\n              });\n          } else {\n            this._removeClickFunction();\n          }\n        } else {\n          this._removeClickFunction();\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.store.dispatch(new CursorActions.ResetMode());\n    this.resultsLayer$\n      .pipe(\n        filter(r => r !== null),\n        take(1)\n      )\n      .subscribe(r => {\n        this.store.dispatch(new FeatureinfoActions.SetResultsItems([]));\n        r.getSource().clear();\n      });\n    if (this.combinedSubscription) {\n      this.combinedSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Removes the click funciton if needed, plus resets the cursor style\n   */\n  private _removeClickFunction() {\n    if (this.clickFunction !== null) {\n      this.store\n        .select(state => state.map.map)\n        .pipe(take(1))\n        .subscribe(m => {\n          m.un('singleclick', this.clickFunction);\n          this.clickFunction = null;\n        });\n    }\n    this.store.dispatch(new CursorActions.ResetMode());\n  }\n\n  /**\n   * Creates the clickFunction for a given singleclick event\n   * @param evt\n   * @param layer\n   * @param m\n   */\n  private _createClickFunction(evt: any, layer: MangolLayer, m: Map) {\n    this.store\n      .select(state => state.featureinfo.resultsLayer)\n      .pipe(take(1))\n      .subscribe(resultsLayer => {\n        try {\n          m.removeLayer(resultsLayer);\n        } catch (error) {}\n        resultsLayer.getSource().clear();\n        this.store.dispatch(new FeatureinfoActions.SetResultsItems([]));\n        m.addLayer(resultsLayer);\n        const coords = evt.coordinate;\n        switch (layer.layer['type']) {\n          case 'TILE':\n            this.featureinfoService\n              .getFeatureinfoUrl$(layer, m, coords)\n              .pipe(take(1))\n              .subscribe(url => {\n                this.featureinfoService\n                  .getFeatureinfo(\n                    url,\n                    layer.querySrs,\n                    m\n                      .getView()\n                      .getProjection()\n                      .getCode()\n                  )\n                  .subscribe(\n                    features => {\n                      this.store.dispatch(\n                        new FeatureinfoActions.SetResultsItems(features)\n                      );\n                      this._openSnackBar(features.length);\n                    },\n                    error => {\n                      // console.log(error);\n                    }\n                  );\n              });\n            break;\n          case 'VECTOR':\n            const l = layer.layer;\n            const vectorFeatures: Feature[] = [];\n            m.forEachFeatureAtPixel(\n              evt.pixel,\n              (feature, lay) => {\n                if (lay === l) {\n                  vectorFeatures.push(feature);\n                }\n              },\n              { hitTolerance: 5 }\n            );\n            this.store.dispatch(\n              new FeatureinfoActions.SetResultsItems(vectorFeatures)\n            );\n            this._openSnackBar(vectorFeatures.length);\n            break;\n          default:\n            alert(\n              `Feature info for layer type '${\n                layer.layer['type']\n              }' is not yet supported`\n            );\n            break;\n        }\n      });\n  }\n\n  /**\n   * Opens a snackbar with the number of features found\n   * @param hits\n   */\n  private _openSnackBar(hits: number) {\n    this.store\n      .select(state => state.featureinfo.snackbarDuration)\n      .pipe(take(1))\n      .subscribe(snackbarDuration => {\n        this.snackBar.open(\n          `${this.dictionary.numberOfFeaturesFound}: ${hits}`,\n          `${this.dictionary.closeSnackbar}`,\n          {\n            duration: snackbarDuration,\n            panelClass: 'mangol-snackbar'\n          }\n        );\n      });\n  }\n\n  /**\n   * Retrieves the title for the individual feature\n   * @param feature\n   */\n  getExpansionPanelTitle$(feature: Feature): Observable {\n    return this.store.select(state => state.featureinfo.selectedLayer).pipe(\n      take(1),\n      map(selectedLayer => {\n        const noPropTitle = this.dictionary.feature;\n        if (!!selectedLayer.queryIdProperty) {\n          const props = feature.getProperties();\n          if (props.hasOwnProperty(selectedLayer.queryIdProperty)) {\n            return props[selectedLayer.queryIdProperty].toString().length > 0\n              ? props[selectedLayer.queryIdProperty]\n              : noPropTitle;\n          } else {\n            return noPropTitle;\n          }\n        } else {\n          return noPropTitle;\n        }\n      })\n    );\n  }\n\n  /**\n   * Opens a full table dialog\n   */\n  openTableDialog() {\n    combineLatest(this.layer$, this.resultsFeatures$)\n      .pipe(take(1))\n      .subscribe(([layer, resultsFeatures]) => {\n        this.dialog.open(FeatureinfoTableDialogComponent, {\n          maxWidth: '90%',\n          maxHeight: '90%',\n          panelClass: 'mangol-dialog',\n          autoFocus: false,\n          data: {\n            layer: layer,\n            features: resultsFeatures,\n            dictionary: this.dictionary\n          }\n        });\n      });\n  }\n\n  /**\n   * Shows the feature on the map with a hover style\n   * @param feature\n   */\n  showFeatureOnMap(feature: Feature) {\n    this.resultsLayer$.pipe(take(1)).subscribe(layer => {\n      layer.getSource().addFeature(feature);\n    });\n  }\n\n  /**\n   * Hides the hovered feature on the map\n   * @param feature\n   */\n  hideFeatureOnMap(feature: Feature) {\n    this.resultsLayer$.pipe(take(1)).subscribe(layer => {\n      layer.getSource().removeFeature(feature);\n    });\n  }\n\n  /**\n   * Sets the view extent to a feature\n   * @param feature\n   */\n  zoomToFeature(feature: Feature) {\n    this.store\n      .select(state => state.map.map)\n      .pipe(take(1))\n      .subscribe(m => {\n        m.getView().fit(feature.getGeometry().getExtent(), {\n          duration: 500\n        });\n      });\n  }\n}\n\n    \n\n    \n         0\">\n    \n        \n            \n                 {{getExpansionPanelTitle$(feature) | async}} \n                {{i+1}}/{{(resultsFeatures$ | async).length}}\n            \n            \n              zoom_in\n              {{dictionary.zoomToFeature}}\n            \n            \n        \n    \n    \n  open_in_new\n  {{dictionary.showAllResults}}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">                                         {{getExpansionPanelTitle$(feature) | async}}                 {{i+1}}/{{(resultsFeatures$ | async).length}}                                      zoom_in              {{dictionary.zoomToFeature}}                                          open_in_new  {{dictionary.showAllResults}}'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeatureinfoResultsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeatureinfoSelectComponent.html":{"url":"components/FeatureinfoSelectComponent.html","title":"component - FeatureinfoSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeatureinfoSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-featureinfo-select\n            \n\n            \n                styleUrls\n                featureinfo-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./featureinfo-select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedLayer$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectionChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dictionary\n                    \n                    \n                            \n                            Type :    FeatureinfoDictionary\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                    \n                            \n                            Type :    MangolLayer[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectionChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectionChanged(evt: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLayer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedLayer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-select/featureinfo-select.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { MangolLayer } from '../../../../classes/Layer';\nimport { FeatureinfoDictionary } from '../../../../store/featureinfo/featureinfo.reducers';\nimport * as FeatureinfoActions from './../../../../store/featureinfo/featureinfo.actions';\nimport * as fromMangol from './../../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-featureinfo-select',\n  templateUrl: './featureinfo-select.component.html',\n  styleUrls: ['./featureinfo-select.component.scss']\n})\nexport class FeatureinfoSelectComponent implements OnInit {\n  @Input()\n  layers: MangolLayer[];\n  @Input()\n  dictionary: FeatureinfoDictionary;\n\n  selectedLayer$: Observable;\n\n  constructor(private store: Store) {\n    this.selectedLayer$ = this.store.select(\n      state => state.featureinfo.selectedLayer\n    );\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new FeatureinfoActions.SetSelectedLayer(null));\n  }\n\n  onSelectionChanged(evt: MatSelectChange) {\n    if (typeof evt.value === 'undefined') {\n      this.store.dispatch(new FeatureinfoActions.SetSelectedLayer(null));\n    } else {\n      const layer: MangolLayer = evt.value;\n      this.store.dispatch(new FeatureinfoActions.SetSelectedLayer(layer));\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        clear\n        {{dictionary.clearSelection}}\n    \n    \n    \n        {{layer.name}}\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear        {{dictionary.clearSelection}}                    {{layer.name}}    '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeatureinfoSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeatureinfoService.html":{"url":"injectables/FeatureinfoService.html","title":"injectable - FeatureinfoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeatureinfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/featureinfo/featureinfo.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geojsonFormat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFeatureinfo\n                            \n                            \n                                getFeatureinfoUrl$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/featureinfo/featureinfo.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFeatureinfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFeatureinfo(url: string, dataProjection: string, featureProjection: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Requests the featureinfo geojson from the remote server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        dataProjection\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        featureProjection\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFeatureinfoUrl$\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFeatureinfoUrl$(layer: MangolLayer, m: Map, coordinates: [number, number])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Gets the GetFeatureInfo WMS url as an Observable from a layer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layer\n                                                        \n                                                                    MangolLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        m\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        coordinates\n                                                        \n                                                                    [number, number]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geojsonFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geojsonFormat:     \n\n                    \n                \n                    \n                        \n                            Default value : new GeoJSON()\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/featureinfo.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { FeatureCollection } from 'geojson';\nimport Feature from 'ol/Feature';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport TileWMS from 'ol/source/TileWMS';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, take } from 'rxjs/operators';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport * as fromMangol from './../../store/mangol.reducers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeatureinfoService {\n  geojsonFormat = new GeoJSON();\n\n  constructor(\n    private store: Store,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * Gets the GetFeatureInfo WMS url as an Observable from a layer\n   * @param layer\n   * @param m\n   * @param coordinates\n   */\n  getFeatureinfoUrl$(\n    layer: MangolLayer,\n    m: Map,\n    coordinates: [number, number]\n  ): Observable {\n    return this.store.select(state => state.featureinfo.maxFeatures).pipe(\n      take(1),\n      map(maxFeatures => {\n        const source: TileWMS = layer.layer.getSource();\n        let url: string = source.getGetFeatureInfoUrl(\n          coordinates,\n          m.getView().getResolution(),\n          m\n            .getView()\n            .getProjection()\n            .getCode(),\n          { INFO_FORMAT: 'application/json', FEATURE_COUNT: maxFeatures }\n        );\n        if (url) {\n          // In case of a GWC layer somehow there is I and J instead of X and Y, so we must change that\n          url = url.replace('&I=', '&X=').replace('&J=', '&Y=');\n        } else {\n          url = null;\n        }\n        return url;\n      })\n    );\n  }\n\n  /**\n   * Requests the featureinfo geojson from the remote server\n   * @param url\n   * @param dataProjection\n   * @param featureProjection\n   */\n  getFeatureinfo(\n    url: string,\n    dataProjection: string,\n    featureProjection: string\n  ): Observable {\n    return this.http\n      .get(url, {\n        observe: 'body',\n        responseType: 'json'\n      })\n      .pipe(\n        map(response => {\n          const featureCollection = >response;\n          const format =\n            dataProjection !== featureProjection\n              ? new GeoJSON({\n                  defaultDataProjection: dataProjection,\n                  featureProjection: featureProjection\n                })\n              : this.geojsonFormat;\n          return format.readFeatures(featureCollection);\n        }),\n        catchError(error => {\n          return throwError(error);\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeatureinfoTableDialogComponent.html":{"url":"components/FeatureinfoTableDialogComponent.html","title":"component - FeatureinfoTableDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeatureinfoTableDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-featureinfo-table-dialog\n            \n\n            \n                styleUrls\n                featureinfo-table-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./featureinfo-table-dialog.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportCsv\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exportCsv\n                            \n                            \n                        \n                    \n                \n                \n                    \nexportCsv()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featureinfo-table-dialog/featureinfo-table-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatSort,\n  MatTableDataSource\n} from '@angular/material';\nimport { saveAs } from 'file-saver/FileSaver';\n\n@Component({\n  selector: 'mangol-featureinfo-table-dialog',\n  templateUrl: './featureinfo-table-dialog.component.html',\n  styleUrls: ['./featureinfo-table-dialog.component.scss']\n})\nexport class FeatureinfoTableDialogComponent implements OnInit {\n  dataSource: MatTableDataSource;\n  columns: string[] = [];\n\n  @ViewChild(MatSort)\n  sort: MatSort;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit() {\n    const source: any[] = [];\n    const hasQueryColumns =\n      !!this.data.layer.queryColumns && this.data.layer.queryColumns.length > 0;\n    this.data.features.forEach(feature => {\n      const props = { ...feature.getProperties() };\n      for (const key in props) {\n        if (props.hasOwnProperty(key)) {\n          // Don't show objects or functions in the table or the property is not in the layers' queryColumns attribute\n          if (\n            typeof props[key] === 'object' ||\n            typeof props[key] === 'function' ||\n            (hasQueryColumns &&\n              this.data.layer.queryColumns.indexOf(key) === -1)\n          ) {\n            delete props[key];\n          } else {\n            // Add the property name to the columns if not already added\n            if (this.columns.indexOf(key) === -1) {\n              this.columns.push(key);\n            }\n          }\n        }\n      }\n      source.push(props);\n    });\n    this.dataSource = new MatTableDataSource(source);\n    this.dataSource.sort = this.sort;\n  }\n\n  exportCsv() {\n    const data: any[] = this.dataSource.data;\n    let csvContent = '';\n    const separator = ';';\n    this.columns.forEach(column => {\n      csvContent += column + separator;\n    });\n    data.forEach(d => {\n      csvContent += '\\n';\n      this.columns.forEach(c => {\n        csvContent += (d.hasOwnProperty(c) ? d[c] : '') + separator;\n      });\n    });\n    const blob = new Blob([csvContent], {\n      type: 'text-csv;charset=utf-8;'\n    });\n    try {\n      saveAs(\n        blob,\n        `${this.data.layer.name\n          .toLowerCase()\n          .replace(/ /g, '_')}_${new Date().getTime()}.csv`\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{data.layer.name}}\n        \n        \n          save_alt\n        \n    \n\n\n    \n        {{column}}\n         {{element[column]}} \n    \n\n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{data.layer.name}}                          save_alt                        {{column}}         {{element[column]}}             '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeatureinfoTableDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeaturenfoTableComponent.html":{"url":"components/FeaturenfoTableComponent.html","title":"component - FeaturenfoTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeaturenfoTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/featureinfo/components/featurenfo-table/featurenfo-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-featurenfo-table\n            \n\n            \n                styleUrls\n                featurenfo-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./featurenfo-table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                dataSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                feature\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/featureinfo/components/featurenfo-table/featurenfo-table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        feature\n                    \n                    \n                            \n                            Type :    Feature\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featurenfo-table/featurenfo-table.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featurenfo-table/featurenfo-table.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['property', 'value']\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featurenfo-table/featurenfo-table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/featureinfo/components/featurenfo-table/featurenfo-table.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport { take } from 'rxjs/operators';\n\nimport * as fromMangol from './../../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-featurenfo-table',\n  templateUrl: './featurenfo-table.component.html',\n  styleUrls: ['./featurenfo-table.component.scss']\n})\nexport class FeaturenfoTableComponent implements OnInit {\n  @Input()\n  feature: Feature;\n\n  dataSource: any[] = [];\n  columns: string[] = ['property', 'value'];\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    this.store\n      .select(state => state.featureinfo.selectedLayer)\n      .pipe(take(1))\n      .subscribe(layer => {\n        const hasQueryColumns =\n          !!layer.queryColumns && layer.queryColumns.length > 0;\n        const props = { ...this.feature.getProperties() };\n        for (const key in props) {\n          if (props.hasOwnProperty(key)) {\n            // Don't show objects or functions in the table or the property is not in the layers' queryColumns attribute\n            if (\n              typeof props[key] === 'object' ||\n              typeof props[key] === 'function' ||\n              (hasQueryColumns && layer.queryColumns.indexOf(key) === -1)\n            ) {\n              delete props[key];\n            } else {\n              this.dataSource.push({ property: key, value: props[key] });\n            }\n          }\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n         {{element[column]}} \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{element[column]}}         '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeaturenfoTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FsDocument.html":{"url":"interfaces/FsDocument.html","title":"interface - FsDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FsDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HTMLDocument\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mozCancelFullScreen\n                                \n                                \n                                            Optional\n                                        mozFullScreenElement\n                                \n                                \n                                            Optional\n                                        msExitFullscreen\n                                \n                                \n                                            Optional\n                                        msFullscreenElement\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mozCancelFullScreen\n                                    \n                                \n                                \n                                    \n                                        mozCancelFullScreen:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mozFullScreenElement\n                                    \n                                \n                                \n                                    \n                                        mozFullScreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msExitFullscreen\n                                    \n                                \n                                \n                                    \n                                        msExitFullscreen:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msFullscreenElement\n                                    \n                                \n                                \n                                    \n                                        msFullscreenElement:     Element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Element\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from '../../../../../../../node_modules/rxjs';\nimport { MangolControllersFullScreenOptions } from './../../../interfaces/config-map-controllers.interface';\nimport * as fromMangol from './../../../store/mangol.reducers';\n\ninterface FsDocument extends HTMLDocument {\n  mozFullScreenElement?: Element;\n  msFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n}\n\ninterface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n}\n\n@Component({\n  selector: 'mangol-fullscreen-button',\n  templateUrl: './fullscreen-button.component.html',\n  styleUrls: ['./fullscreen-button.component.scss']\n})\nexport class FullscreenButtonComponent implements OnInit {\n  fullScreen$: Observable;\n\n  constructor(private store: Store) {\n    this.fullScreen$ = this.store.select(state => state.controllers.fullScreen);\n  }\n\n  ngOnInit() {}\n\n  toggleFullScreen(): void {\n    const fsDoc = document;\n    if (!this.isFullScreen()) {\n      const fsDocElem = (\n        document.documentElement.getElementsByTagName('mangol')[0]\n      );\n      if (fsDocElem.requestFullscreen) {\n        fsDocElem.requestFullscreen();\n      } else if (fsDocElem.msRequestFullscreen) {\n        fsDocElem.msRequestFullscreen();\n      } else if (fsDocElem.mozRequestFullScreen) {\n        fsDocElem.mozRequestFullScreen();\n      } else if (fsDocElem.webkitRequestFullscreen) {\n        fsDocElem.webkitRequestFullscreen();\n      }\n    } else if (fsDoc.exitFullscreen) {\n      fsDoc.exitFullscreen();\n    } else if (fsDoc.msExitFullscreen) {\n      fsDoc.msExitFullscreen();\n    } else if (fsDoc.mozCancelFullScreen) {\n      fsDoc.mozCancelFullScreen();\n    } else if (fsDoc.webkitExitFullscreen) {\n      fsDoc.webkitExitFullscreen();\n    }\n  }\n\n  isFullScreen(): boolean {\n    const fsDoc = document;\n    return !!(\n      fsDoc.fullscreenElement ||\n      fsDoc.mozFullScreenElement ||\n      fsDoc.webkitFullscreenElement ||\n      fsDoc.msFullscreenElement\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FsDocumentElement.html":{"url":"interfaces/FsDocumentElement.html","title":"interface - FsDocumentElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FsDocumentElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HTMLElement\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        mozRequestFullScreen\n                                \n                                \n                                            Optional\n                                        msRequestFullscreen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mozRequestFullScreen\n                                    \n                                \n                                \n                                    \n                                        mozRequestFullScreen:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msRequestFullscreen\n                                    \n                                \n                                \n                                    \n                                        msRequestFullscreen:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from '../../../../../../../node_modules/rxjs';\nimport { MangolControllersFullScreenOptions } from './../../../interfaces/config-map-controllers.interface';\nimport * as fromMangol from './../../../store/mangol.reducers';\n\ninterface FsDocument extends HTMLDocument {\n  mozFullScreenElement?: Element;\n  msFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n}\n\ninterface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n}\n\n@Component({\n  selector: 'mangol-fullscreen-button',\n  templateUrl: './fullscreen-button.component.html',\n  styleUrls: ['./fullscreen-button.component.scss']\n})\nexport class FullscreenButtonComponent implements OnInit {\n  fullScreen$: Observable;\n\n  constructor(private store: Store) {\n    this.fullScreen$ = this.store.select(state => state.controllers.fullScreen);\n  }\n\n  ngOnInit() {}\n\n  toggleFullScreen(): void {\n    const fsDoc = document;\n    if (!this.isFullScreen()) {\n      const fsDocElem = (\n        document.documentElement.getElementsByTagName('mangol')[0]\n      );\n      if (fsDocElem.requestFullscreen) {\n        fsDocElem.requestFullscreen();\n      } else if (fsDocElem.msRequestFullscreen) {\n        fsDocElem.msRequestFullscreen();\n      } else if (fsDocElem.mozRequestFullScreen) {\n        fsDocElem.mozRequestFullScreen();\n      } else if (fsDocElem.webkitRequestFullscreen) {\n        fsDocElem.webkitRequestFullscreen();\n      }\n    } else if (fsDoc.exitFullscreen) {\n      fsDoc.exitFullscreen();\n    } else if (fsDoc.msExitFullscreen) {\n      fsDoc.msExitFullscreen();\n    } else if (fsDoc.mozCancelFullScreen) {\n      fsDoc.mozCancelFullScreen();\n    } else if (fsDoc.webkitExitFullscreen) {\n      fsDoc.webkitExitFullscreen();\n    }\n  }\n\n  isFullScreen(): boolean {\n    const fsDoc = document;\n    return !!(\n      fsDoc.fullscreenElement ||\n      fsDoc.mozFullScreenElement ||\n      fsDoc.webkitFullscreenElement ||\n      fsDoc.msFullscreenElement\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullscreenButtonComponent.html":{"url":"components/FullscreenButtonComponent.html","title":"component - FullscreenButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullscreenButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-fullscreen-button\n            \n\n            \n                styleUrls\n                fullscreen-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fullscreen-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fullScreen$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFullScreen\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFullScreen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFullScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFullScreen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFullScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFullScreen()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullScreen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fullScreen$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/fullscreen-button/fullscreen-button.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from '../../../../../../../node_modules/rxjs';\nimport { MangolControllersFullScreenOptions } from './../../../interfaces/config-map-controllers.interface';\nimport * as fromMangol from './../../../store/mangol.reducers';\n\ninterface FsDocument extends HTMLDocument {\n  mozFullScreenElement?: Element;\n  msFullscreenElement?: Element;\n  msExitFullscreen?: () => void;\n  mozCancelFullScreen?: () => void;\n}\n\ninterface FsDocumentElement extends HTMLElement {\n  msRequestFullscreen?: () => void;\n  mozRequestFullScreen?: () => void;\n}\n\n@Component({\n  selector: 'mangol-fullscreen-button',\n  templateUrl: './fullscreen-button.component.html',\n  styleUrls: ['./fullscreen-button.component.scss']\n})\nexport class FullscreenButtonComponent implements OnInit {\n  fullScreen$: Observable;\n\n  constructor(private store: Store) {\n    this.fullScreen$ = this.store.select(state => state.controllers.fullScreen);\n  }\n\n  ngOnInit() {}\n\n  toggleFullScreen(): void {\n    const fsDoc = document;\n    if (!this.isFullScreen()) {\n      const fsDocElem = (\n        document.documentElement.getElementsByTagName('mangol')[0]\n      );\n      if (fsDocElem.requestFullscreen) {\n        fsDocElem.requestFullscreen();\n      } else if (fsDocElem.msRequestFullscreen) {\n        fsDocElem.msRequestFullscreen();\n      } else if (fsDocElem.mozRequestFullScreen) {\n        fsDocElem.mozRequestFullScreen();\n      } else if (fsDocElem.webkitRequestFullscreen) {\n        fsDocElem.webkitRequestFullscreen();\n      }\n    } else if (fsDoc.exitFullscreen) {\n      fsDoc.exitFullscreen();\n    } else if (fsDoc.msExitFullscreen) {\n      fsDoc.msExitFullscreen();\n    } else if (fsDoc.mozCancelFullScreen) {\n      fsDoc.mozCancelFullScreen();\n    } else if (fsDoc.webkitExitFullscreen) {\n      fsDoc.webkitExitFullscreen();\n    }\n  }\n\n  isFullScreen(): boolean {\n    const fsDoc = document;\n    return !!(\n      fsDoc.fullscreenElement ||\n      fsDoc.mozFullScreenElement ||\n      fsDoc.webkitFullscreenElement ||\n      fsDoc.msFullscreenElement\n    );\n  }\n}\n\n    \n\n    \n        \n    {{isFullScreen() ? 'fullscreen_exit' : 'fullscreen'}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{isFullScreen() ? \\'fullscreen_exit\\' : \\'fullscreen\\'}}'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FullscreenButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasFeatureinfo.html":{"url":"classes/HasFeatureinfo.html","title":"class - HasFeatureinfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasFeatureinfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : HAS_FEATUREINFO\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasLayertree.html":{"url":"classes/HasLayertree.html","title":"class - HasLayertree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasLayertree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layertree/layertree.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : HAS_LAYERTREE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { LayertreeDictionary } from './layertree.reducers';\n\nexport const HAS_LAYERTREE = '[Layertree] Has Layertree';\nexport const SET_DISABLED = '[Layertree] Set Disabled';\nexport const SET_TITLE = '[Layertree] Set Title';\nexport const SET_DICTIONARY = '[Layertree] Set Dictionary';\nexport const SHOW_LAYERGROUP_BADGES = '[Layertree] Show Layergroup Badges';\n\nexport class HasLayertree implements Action {\n  readonly type = HAS_LAYERTREE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: LayertreeDictionary) {}\n}\nexport class ShowLayergroupBadges implements Action {\n  readonly type = SHOW_LAYERGROUP_BADGES;\n  constructor(public payload: boolean) {}\n}\n\nexport type LayertreeActions =\n  | HasLayertree\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | ShowLayergroupBadges;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasMeasure.html":{"url":"classes/HasMeasure.html","title":"class - HasMeasure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasMeasure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/measure/measure.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : HAS_MEASURE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeasureDictionary, MeasureMode } from './measure.reducers';\nimport { Action } from '@ngrx/store';\n\nexport const HAS_MEASURE = '[Measure] Has Measure';\nexport const SET_DISABLED = '[Measure] Set Disabled';\nexport const SET_TITLE = '[Measure] Set Title';\nexport const SET_DICTIONARY = '[Measure] Set Dictionary';\nexport const SET_MODE = '[Measure] Set Mode';\n\nexport class HasMeasure implements Action {\n  readonly type = HAS_MEASURE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: MeasureDictionary) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: MeasureMode) {}\n}\n\nexport type MeasureActions =\n  | HasMeasure\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | SetMode;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasPrint.html":{"url":"classes/HasPrint.html","title":"class - HasPrint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasPrint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/print/print.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/print/print.actions.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/print/print.actions.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : HAS_PRINT\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/print/print.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const HAS_PRINT = '[Print] Has Print ';\nexport const SET_DISABLED = '[Print] Set Disabled';\nexport const SET_TITLE = '[Print] Set Title';\n\nexport class HasPrint implements Action {\n  readonly type = HAS_PRINT;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\n\nexport type PrintActions = HasPrint | SetDisabled | SetTitle;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerComponent.html":{"url":"components/LayerComponent.html","title":"component - LayerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layer/layer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-layer\n            \n\n            \n                styleUrls\n                layer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detailItems\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dictionary$\n                            \n                            \n                                dictionarySubscription\n                            \n                            \n                                displayLimit\n                            \n                            \n                                layer\n                            \n                            \n                                selectedDetail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMenuItemClicked\n                            \n                            \n                                toggleLayerVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layer/layer.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type :    LayertreeItemNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onMenuItemClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonMenuItemClicked(evt: LayerDetailItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    LayerDetailItem\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleLayerVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleLayerVisibility()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detailItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        detailItems:     LayerDetailItem[]\n\n                    \n                \n                    \n                        \n                            Type :     LayerDetailItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionary$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionary$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionarySubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionarySubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayLimit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayLimit:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     MangolLayer\n\n                    \n                \n                    \n                        \n                            Type :     MangolLayer\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedDetail:     LayerDetailItem\n\n                    \n                \n                    \n                        \n                            Type :     LayerDetailItem\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer/layer.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { MangolLayer } from '../../../../classes/Layer';\nimport { LayertreeDictionary } from '../../../../store/layertree/layertree.reducers';\nimport * as fromMangol from './../../../../store/mangol.reducers';\nimport { LayertreeItemNode } from './../../classes/layertree-item-node.class';\nimport { LayerDetailItem } from './../../interfaces/layer-detail-item.interface';\nimport { layertreeVisibilityIconStateTrigger } from './../../layertree.animations';\nimport { LayerDetailsComponent } from './../layer-details/layer-details.component';\n\n@Component({\n  selector: 'mangol-layer',\n  templateUrl: './layer.component.html',\n  styleUrls: ['./layer.component.scss'],\n  animations: [layertreeVisibilityIconStateTrigger]\n})\nexport class LayerComponent implements OnInit, OnDestroy {\n  @Input()\n  node: LayertreeItemNode;\n\n  dictionary$: Observable;\n\n  displayLimit = 100;\n\n  layer: MangolLayer = null;\n\n  detailItems: LayerDetailItem[] = [];\n  selectedDetail: LayerDetailItem = null;\n\n  dictionarySubscription: Subscription;\n\n  constructor(\n    public dialog: MatDialog,\n    private store: Store\n  ) {\n    this.dictionary$ = this.store.select(state => state.layertree.dictionary);\n  }\n\n  ngOnInit() {\n    this.layer = this.node.layer;\n\n    this.dictionarySubscription = this.dictionary$.subscribe(dict => {\n      this.detailItems = [];\n      this.detailItems.push({\n        type: 'transparency',\n        text: dict.showLayerTransparency,\n        fontSet: null,\n        fontIcon: 'opacity',\n        disabled: false\n      });\n      if (!!this.layer.details) {\n        this.detailItems.push({\n          type: 'description',\n          text: dict.showLayerDescription,\n          fontSet: null,\n          fontIcon: 'subject',\n          disabled: false\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.dictionarySubscription) {\n      this.dictionarySubscription.unsubscribe();\n    }\n  }\n\n  toggleLayerVisibility() {\n    this.layer.layer.setVisible(!this.layer.layer.getVisible());\n    this.node.checked = !this.node.checked;\n  }\n\n  onMenuItemClicked(evt: LayerDetailItem) {\n    this.selectedDetail = evt;\n\n    const dialogRef = this.dialog.open(LayerDetailsComponent, {\n      width: '50%',\n      maxHeight: '60%',\n      autoFocus: false,\n      panelClass: 'mangol-dialog',\n      hasBackdrop: true,\n      data: { item: this.selectedDetail, layer: this.layer }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n}\n\n    \n\n    \n        \n    \n        {{node.checked ? 'visibility' : 'visibility_off'}}\n    \n    \n        \n            {{layer.name | shorten:displayLimit}}\n            \n            \n                more_vert\n              \n            \n                \n                  {{item.fontSet === null ? item.fontIcon : null}}\n                  {{item.text}}\n                \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{node.checked ? \\'visibility\\' : \\'visibility_off\\'}}                            {{layer.name | shorten:displayLimit}}                                        more_vert                                                            {{item.fontSet === null ? item.fontIcon : null}}                  {{item.text}}                                        '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerDetailItem.html":{"url":"interfaces/LayerDetailItem.html","title":"interface - LayerDetailItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayerDetailItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/layertree/interfaces/layer-detail-item.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disabled\n                                \n                                \n                                        fontIcon\n                                \n                                \n                                        fontSet\n                                \n                                \n                                        text\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontIcon\n                                    \n                                \n                                \n                                    \n                                        fontIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSet\n                                    \n                                \n                                \n                                    \n                                        fontSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"transparency\" | \"description\" | \"legend\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"transparency\" | \"description\" | \"legend\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LayerDetailItem {\n  fontSet: string;\n  fontIcon: string;\n  text: string;\n  disabled: boolean;\n  type: 'transparency' | 'description' | 'legend';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerDetailsComponent.html":{"url":"components/LayerDetailsComponent.html","title":"component - LayerDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layer-details/layer-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-layer-details\n            \n\n            \n                styleUrls\n                layer-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layer-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                item\n                            \n                            \n                                layer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layer-details/layer-details.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/layer-details.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/layer-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     LayerDetailItem\n\n                    \n                \n                    \n                        \n                            Type :     LayerDetailItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/layer-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     MangolLayer\n\n                    \n                \n                    \n                        \n                            Type :     MangolLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/layer-details.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { LayerDetailItem } from '../../interfaces/layer-detail-item.interface';\nimport { MangolLayer } from '../../../../classes/Layer';\n\n@Component({\n  selector: 'mangol-layer-details',\n  templateUrl: './layer-details.component.html',\n  styleUrls: ['./layer-details.component.scss']\n})\nexport class LayerDetailsComponent implements OnInit {\n  item: LayerDetailItem;\n  layer: MangolLayer;\n\n  constructor(\n    dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.item = data.item;\n    this.layer = data.layer;\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n    \n        {{layer?.name}}\n        \n    \n\n\n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{layer?.name}}                        '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayerDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerGroupComponent.html":{"url":"components/LayerGroupComponent.html","title":"component - LayerGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layer-group/layer-group.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-layer-group\n            \n\n            \n                styleUrls\n                layer-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layer-group.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detailItems\n                            \n                            \n                                dictionary$\n                            \n                            \n                                dictionarySubscription\n                            \n                            \n                                displayLimit\n                            \n                            \n                                showBadges$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                expandAll\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMenuItemClicked\n                            \n                            \n                                toggleGroup\n                            \n                            \n                                    Private\n                                visibleAll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                            \n                            Type :    LayertreeItemNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        level\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            expandAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        expandAll(group: LayertreeItemNode, checked: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Recursively expands or collapses all children of a layer group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    LayertreeItemNode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        checked\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onMenuItemClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonMenuItemClicked(evt: LayerGroupDetailItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Action based on the menu item clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    LayerGroupDetailItem\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Toggles the layer group's expanded state\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visibleAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        visibleAll(group: LayertreeItemNode, visible: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Recursively sets the layers' visibility of a layer group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    LayertreeItemNode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detailItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        detailItems:     LayerGroupDetailItem[]\n\n                    \n                \n                    \n                        \n                            Type :     LayerGroupDetailItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionary$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionary$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionarySubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionarySubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayLimit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayLimit:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBadges$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBadges$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-group/layer-group.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { LayertreeItemNode } from '../../classes/layertree-item-node.class';\nimport { slideStateTrigger } from '../../layertree.animations';\nimport { LayertreeDictionary } from './../../../../store/layertree/layertree.reducers';\nimport * as fromMangol from './../../../../store/mangol.reducers';\nimport { LayerGroupDetailItem } from './../../interfaces/layergroup-detail-item.interface';\n\n@Component({\n  selector: 'mangol-layer-group',\n  templateUrl: './layer-group.component.html',\n  styleUrls: ['./layer-group.component.scss'],\n  animations: [slideStateTrigger]\n})\nexport class LayerGroupComponent implements OnInit, OnDestroy {\n  @Input()\n  group: LayertreeItemNode;\n  @Input()\n  level: number;\n\n  dictionary$: Observable;\n  showBadges$: Observable;\n  displayLimit = 50;\n\n  detailItems: LayerGroupDetailItem[] = [];\n  dictionarySubscription: Subscription;\n\n  constructor(private store: Store) {\n    this.dictionary$ = this.store.select(state => state.layertree.dictionary);\n    this.showBadges$ = this.store.select(\n      state => state.layertree.showLayergroupBadges\n    );\n  }\n\n  ngOnInit() {\n    this.dictionarySubscription = this.dictionary$.subscribe(dict => {\n      this.detailItems = [];\n      this.detailItems.push({\n        type: 'expand_all',\n        text: dict.expandAll,\n        fontSet: null,\n        fontIcon: 'unfold_more',\n        disabled: false\n      });\n      this.detailItems.push({\n        type: 'collapse_all',\n        text: dict.collapseAll,\n        fontSet: null,\n        fontIcon: 'unfold_less',\n        disabled: false\n      });\n      this.detailItems.push({\n        type: 'toggle_on',\n        text: dict.turnLayersOn,\n        fontSet: null,\n        fontIcon: 'layers',\n        disabled: false\n      });\n      this.detailItems.push({\n        type: 'toggle_off',\n        text: dict.turnLayersOff,\n        fontSet: null,\n        fontIcon: 'layers_clear',\n        disabled: false\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.dictionarySubscription) {\n      this.dictionarySubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Toggles the layer group's expanded state\n   */\n  toggleGroup() {\n    this.group.checked = !this.group.checked;\n  }\n\n  /**\n   * Action based on the menu item clicked\n   * @param evt\n   */\n  onMenuItemClicked(evt: LayerGroupDetailItem) {\n    switch (evt.type) {\n      case 'expand_all':\n        this.expandAll(this.group, true);\n        break;\n      case 'collapse_all':\n        this.expandAll(this.group, false);\n        break;\n      case 'toggle_on':\n        this.visibleAll(this.group, true);\n        break;\n      case 'toggle_off':\n        this.visibleAll(this.group, false);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Recursively expands or collapses all children of a layer group\n   * @param group\n   * @param toChecked\n   */\n  private expandAll(group: LayertreeItemNode, checked: boolean) {\n    if (!!group.children) {\n      if (group.checked !== checked) {\n        group.checked = checked;\n      }\n      group.children.forEach(c => {\n        this.expandAll(c, checked);\n      });\n    }\n  }\n\n  /**\n   * Recursively sets the layers' visibility of a layer group\n   * @param group\n   * @param visible\n   */\n  private visibleAll(group: LayertreeItemNode, visible: boolean) {\n    if (!!group.children) {\n      group.children.forEach(c => {\n        if (!!c.layer) {\n          if (c.checked !== visible) {\n            c.checked = visible;\n            c.layer.layer.setVisible(visible);\n          }\n        } else if (!!c.children) {\n          this.visibleAll(c, visible);\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    {{(dictionary$ | async).groups}}\n    \n        \n        \n      \n        \n            \n                 0; else checked\"\n                    class=\"mangol-pointer\"\n                    [matBadge]=\"group.children.length\"\n                    matBadgeOverlap=\"false\"\n                    matBadgeColor=\"primary\"\n                    [matTooltip]=\"group.name\"\n                    matTooltipPosition=\"above\"\n                    [matTooltipDisabled]=\"group.name.length {{group.name | shorten:displayLimit}}\n                \n                    {{group.name | shorten:displayLimit}}\n                \n                \n                        more_vert\n                      \n                \n                    \n                          {{item.fontSet === null ? item.fontIcon : null}}\n                          {{item.text}}\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{(dictionary$ | async).groups}}                                                               0; else checked\"                    class=\"mangol-pointer\"                    [matBadge]=\"group.children.length\"                    matBadgeOverlap=\"false\"                    matBadgeColor=\"primary\"                    [matTooltip]=\"group.name\"                    matTooltipPosition=\"above\"                    [matTooltipDisabled]=\"group.name.length {{group.name | shorten:displayLimit}}                                    {{group.name | shorten:displayLimit}}                                                        more_vert                                                                                    {{item.fontSet === null ? item.fontIcon : null}}                          {{item.text}}                                                                '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayerGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayerGroupDetailItem.html":{"url":"interfaces/LayerGroupDetailItem.html","title":"interface - LayerGroupDetailItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayerGroupDetailItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/layertree/interfaces/layergroup-detail-item.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disabled\n                                \n                                \n                                        fontIcon\n                                \n                                \n                                        fontSet\n                                \n                                \n                                        text\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontIcon\n                                    \n                                \n                                \n                                    \n                                        fontIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSet\n                                    \n                                \n                                \n                                    \n                                        fontSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"toggle_on\" | \"toggle_off\" | \"expand_all\" | \"collapse_all\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"toggle_on\" | \"toggle_off\" | \"expand_all\" | \"collapse_all\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LayerGroupDetailItem {\n  fontSet: string;\n  fontIcon: string;\n  text: string;\n  disabled: boolean;\n  type: 'toggle_on' | 'toggle_off' | 'expand_all' | 'collapse_all';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayertreeComponent.html":{"url":"components/LayertreeComponent.html","title":"component - LayertreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayertreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/layertree.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-layertree\n            \n\n            \n                styleUrls\n                layertree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layertree.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checklistSelection\n                            \n                            \n                                    Private\n                                getChildren\n                            \n                            \n                                hasNestedChild\n                            \n                            \n                                nestedDataSource\n                            \n                            \n                                nestedTreeControl\n                            \n                            \n                                tabSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCheckbox\n                            \n                            \n                                toggleLayergroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, layertreeService: LayertreeService, mapService: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/layertree.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layertreeService\n                                                  \n                                                        \n                                                                    LayertreeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleCheckbox\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleCheckbox(node: LayertreeItemNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    LayertreeItemNode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleLayergroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleLayergroup(node: LayertreeItemNode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    LayertreeItemNode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checklistSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checklistSelection:     \n\n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getChildren:     \n\n                    \n                \n                    \n                        \n                            Default value : (node: LayertreeItemNode) => {\n    return observableOf(node.children);\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNestedChild\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasNestedChild:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: number, node: LayertreeItemNode) => {\n    return (\n      !!node.children &&\n      Array.isArray(node.children) &&\n      node.children.length > 0\n    );\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedDataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedDataSource:     MatTreeNestedDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTreeNestedDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedTreeControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedTreeControl:     NestedTreeControl\n\n                    \n                \n                    \n                        \n                            Type :     NestedTreeControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { Store } from '@ngrx/store';\nimport * as fromMangol from './../../store/mangol.reducers';\nimport * as CursorActions from './../../store/cursor/cursor.actions';\nimport { of as observableOf, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { MangolLayer } from '../../classes/Layer';\nimport { MangolLayerGroup } from '../../classes/LayerGroup';\nimport { MangolConfig } from './../../interfaces/config.interface';\nimport { MapService } from './../map/map.service';\nimport { LayertreeItemNode } from './classes/layertree-item-node.class';\nimport { LayertreeService } from './layertree.service';\n\n@Component({\n  selector: 'mangol-layertree',\n  templateUrl: './layertree.component.html',\n  styleUrls: ['./layertree.component.scss']\n})\nexport class LayertreeComponent implements OnInit, OnDestroy {\n  nestedTreeControl: NestedTreeControl;\n  nestedDataSource: MatTreeNestedDataSource;\n  checklistSelection = new SelectionModel(true);\n\n  tabSubscription: Subscription;\n\n  constructor(\n    private store: Store,\n    private layertreeService: LayertreeService,\n    private mapService: MapService\n  ) {\n    this.nestedTreeControl = new NestedTreeControl(\n      this.getChildren\n    );\n    this.nestedDataSource = new MatTreeNestedDataSource();\n    this.tabSubscription = this.store\n      .select(state => state.sidebar.selectedModule)\n      .pipe(filter(module => module === 'layertree'))\n      .subscribe(module => {\n        this.store.dispatch(new CursorActions.ResetMode());\n      });\n\n    this.store\n      .select(state => state.config.config)\n      .subscribe((config: MangolConfig) => {\n        if (\n          typeof config !== 'undefined' &&\n          config !== null &&\n          !!config.map &&\n          !!config.map.layers\n        ) {\n          const layers: (\n            | MangolLayer\n            | MangolLayerGroup)[] = config.map.layers.slice().reverse();\n          this.nestedDataSource.data = this.layertreeService.processLayersAndLayerGroups(\n            layers\n          );\n        } else {\n          this.nestedDataSource.data = this.layertreeService.processLayersAndLayerGroups(\n            this.mapService.getDefaultMap().layers\n          );\n        }\n      });\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this.tabSubscription) {\n      this.tabSubscription.unsubscribe();\n    }\n  }\n\n  private getChildren = (node: LayertreeItemNode) => {\n    return observableOf(node.children);\n  };\n\n  hasNestedChild = (_: number, node: LayertreeItemNode) => {\n    return (\n      !!node.children &&\n      Array.isArray(node.children) &&\n      node.children.length > 0\n    );\n  };\n\n  toggleCheckbox(node: LayertreeItemNode) {\n    node.checked = !node.checked;\n    node.layer.layer.setVisible(node.checked);\n  }\n\n  toggleLayergroup(node: LayertreeItemNode) {\n    console.log(node);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayertreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayertreeDictionary.html":{"url":"interfaces/LayertreeDictionary.html","title":"interface - LayertreeDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LayertreeDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collapseAll\n                                \n                                \n                                            Optional\n                                        expandAll\n                                \n                                \n                                            Optional\n                                        groups\n                                \n                                \n                                            Optional\n                                        layers\n                                \n                                \n                                            Optional\n                                        showLayerDescription\n                                \n                                \n                                            Optional\n                                        showLayerTransparency\n                                \n                                \n                                            Optional\n                                        turnLayersOff\n                                \n                                \n                                            Optional\n                                        turnLayersOn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapseAll\n                                    \n                                \n                                \n                                    \n                                        collapseAll:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandAll\n                                    \n                                \n                                \n                                    \n                                        expandAll:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLayerDescription\n                                    \n                                \n                                \n                                    \n                                        showLayerDescription:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLayerTransparency\n                                    \n                                \n                                \n                                    \n                                        showLayerTransparency:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        turnLayersOff\n                                    \n                                \n                                \n                                    \n                                        turnLayersOff:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        turnLayersOn\n                                    \n                                \n                                \n                                    \n                                        turnLayersOn:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as LayertreeActions from './layertree.actions';\n\nexport interface LayertreeDictionary {\n  groups?: string;\n  layers?: string;\n  expandAll?: string;\n  collapseAll?: string;\n  turnLayersOn?: string;\n  turnLayersOff?: string;\n  showLayerTransparency?: string;\n  showLayerDescription?: string;\n}\n\nexport interface State {\n  hasLayertree: boolean;\n  disabled: boolean;\n  title: string;\n  showLayergroupBadges: boolean;\n  dictionary: LayertreeDictionary;\n}\n\nconst initialState: State = {\n  hasLayertree: false,\n  disabled: false,\n  title: 'Layertree',\n  showLayergroupBadges: true,\n  dictionary: {\n    groups: 'Groups',\n    layers: 'Layers',\n    expandAll: 'Expand all',\n    collapseAll: 'Collapse all',\n    turnLayersOn: 'Turn layers on',\n    turnLayersOff: 'Turn layers off',\n    showLayerTransparency: 'Transparency',\n    showLayerDescription: 'Layer description'\n  }\n};\n\nexport function layertreeReducer(\n  state = initialState,\n  action: LayertreeActions.LayertreeActions\n) {\n  switch (action.type) {\n    case LayertreeActions.HAS_LAYERTREE:\n      return { ...state, hasLayertree: action.payload };\n    case LayertreeActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case LayertreeActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case LayertreeActions.SET_DICTIONARY:\n      return { ...state, dictionary: action.payload };\n    case LayertreeActions.SHOW_LAYERGROUP_BADGES:\n      return { ...state, showLayergroupBadges: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayertreeItemComponent.html":{"url":"components/LayertreeItemComponent.html","title":"component - LayertreeItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayertreeItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-layertree-item\n            \n\n            \n                styleUrls\n                layertree-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layertree-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary$\n                            \n                            \n                                groupNodes\n                            \n                            \n                                layerNodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStyle\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                            \n                            Type :    LayertreeItemNode[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        level\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStyle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     { 'margin-left': string; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionary$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionary$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupNodes:     LayertreeItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     LayertreeItemNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layerNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layerNodes:     LayertreeItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     LayertreeItemNode[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layertree-item/layertree-item.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { LayertreeDictionary } from '../../../../store/layertree/layertree.reducers';\nimport { LayertreeItemNode } from '../../classes/layertree-item-node.class';\nimport * as fromMangol from './../../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-layertree-item',\n  templateUrl: './layertree-item.component.html',\n  styleUrls: ['./layertree-item.component.scss']\n})\nexport class LayertreeItemComponent implements OnInit {\n  @Input()\n  items: LayertreeItemNode[];\n  @Input()\n  level: number;\n\n  dictionary$: Observable;\n\n  groupNodes: LayertreeItemNode[] = [];\n  layerNodes: LayertreeItemNode[] = [];\n\n  constructor(private store: Store) {\n    this.dictionary$ = this.store.select(state => state.layertree.dictionary);\n  }\n\n  ngOnInit() {\n    this.items.forEach(i => {\n      if (!!i.children) {\n        this.groupNodes.push(i);\n      } else if (!!i.layer) {\n        this.layerNodes.push(i);\n      }\n    });\n  }\n\n  getStyle() {\n    return {\n      'margin-left': (this.level === 0 ? 0 : 30) + 'px'\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{(dictionary$ | async).layers}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{(dictionary$ | async).layers}}            '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayertreeItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayertreeItemNode.html":{"url":"classes/LayertreeItemNode.html","title":"class - LayertreeItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayertreeItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/layertree/classes/layertree-item-node.class.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                checked\n                            \n                            \n                                    Optional\n                                children\n                            \n                            \n                                    Optional\n                                layer\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            checked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/classes/layertree-item-node.class.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     LayertreeItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     LayertreeItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/classes/layertree-item-node.class.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     MangolLayer\n\n                    \n                \n                    \n                        \n                            Type :     MangolLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/classes/layertree-item-node.class.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/classes/layertree-item-node.class.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MangolLayer } from '../../../classes/Layer';\n\nexport class LayertreeItemNode {\n  name: string;\n  checked?: boolean;\n  children?: LayertreeItemNode[];\n  layer?: MangolLayer;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayertreeModule.html":{"url":"modules/LayertreeModule.html","title":"module - LayertreeModule","body":"\n                   \n\n\n\n\n  Modules\n  LayertreeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayertreeModule\n\n\n\ncluster_LayertreeModule_declarations\n\n\n\ncluster_LayertreeModule_imports\n\n\n\ncluster_LayertreeModule_exports\n\n\n\n\nDescriptionComponent\n\nDescriptionComponent\n\n\n\nLayertreeModule\n\nLayertreeModule\n\nLayertreeModule -->\n\nDescriptionComponent->LayertreeModule\n\n\n\n\n\nLayerComponent\n\nLayerComponent\n\nLayertreeModule -->\n\nLayerComponent->LayertreeModule\n\n\n\n\n\nLayerDetailsComponent\n\nLayerDetailsComponent\n\nLayertreeModule -->\n\nLayerDetailsComponent->LayertreeModule\n\n\n\n\n\nLayerGroupComponent\n\nLayerGroupComponent\n\nLayertreeModule -->\n\nLayerGroupComponent->LayertreeModule\n\n\n\n\n\nLayertreeComponent\n\nLayertreeComponent\n\nLayertreeModule -->\n\nLayertreeComponent->LayertreeModule\n\n\n\n\n\nLayertreeItemComponent\n\nLayertreeItemComponent\n\nLayertreeModule -->\n\nLayertreeItemComponent->LayertreeModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nLayertreeModule -->\n\nLegendComponent->LayertreeModule\n\n\n\n\n\nTransparencyComponent\n\nTransparencyComponent\n\nLayertreeModule -->\n\nTransparencyComponent->LayertreeModule\n\n\n\n\n\nLayertreeComponent \n\nLayertreeComponent \n\nLayertreeComponent  -->\n\nLayertreeModule->LayertreeComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLayertreeModule -->\n\nSharedModule->LayertreeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/layertree/layertree.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DescriptionComponent\n                            \n                            \n                                LayerComponent\n                            \n                            \n                                LayerDetailsComponent\n                            \n                            \n                                LayerGroupComponent\n                            \n                            \n                                LayertreeComponent\n                            \n                            \n                                LayertreeItemComponent\n                            \n                            \n                                LegendComponent\n                            \n                            \n                                TransparencyComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LayerDetailsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LayertreeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { SharedModule } from '../_shared/shared/shared.module';\nimport { LayerDetailsComponent } from './components/layer-details/layer-details.component';\nimport { LegendComponent } from './components/layer-details/legend/legend.component';\nimport { TransparencyComponent } from './components/layer-details/transparency/transparency.component';\nimport { LayerGroupComponent } from './components/layer-group/layer-group.component';\nimport { LayerComponent } from './components/layer/layer.component';\nimport { LayertreeItemComponent } from './components/layertree-item/layertree-item.component';\nimport { LayertreeComponent } from './layertree.component';\nimport { DescriptionComponent } from './components/layer-details/description/description.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTreeModule,\n    MatIconModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatTooltipModule,\n    MatListModule,\n    MatBadgeModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatDividerModule,\n    MatDialogModule,\n    SharedModule\n  ],\n  declarations: [\n    LayertreeComponent,\n    LayerGroupComponent,\n    LayertreeItemComponent,\n    LayerComponent,\n    LayerDetailsComponent,\n    TransparencyComponent,\n    LegendComponent,\n    DescriptionComponent\n  ],\n  entryComponents: [LayerDetailsComponent],\n  exports: [LayertreeComponent]\n})\nexport class LayertreeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayertreeService.html":{"url":"injectables/LayertreeService.html","title":"injectable - LayertreeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LayertreeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/layertree/layertree.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processLayer\n                            \n                            \n                                    Private\n                                processLayerGroup\n                            \n                            \n                                processLayersAndLayerGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/layertree.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processLayer(layer: MangolLayer, data: LayertreeItemNode[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layer\n                                                        \n                                                                    MangolLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    LayertreeItemNode[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processLayerGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processLayerGroup(group: MangolLayerGroup, data: LayertreeItemNode[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    MangolLayerGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    LayertreeItemNode[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processLayersAndLayerGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessLayersAndLayerGroups(items: (MangolLayer | MangolLayerGroup)[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/layertree.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    (MangolLayer | MangolLayerGroup)[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     LayertreeItemNode[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { MangolLayer } from '../../classes/Layer';\nimport { MangolLayerGroup } from '../../classes/LayerGroup';\nimport { LayertreeItemNode } from './classes/layertree-item-node.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayertreeService {\n  constructor() {}\n\n  processLayersAndLayerGroups(\n    items: (MangolLayer | MangolLayerGroup)[]\n  ): LayertreeItemNode[] {\n    const data: LayertreeItemNode[] = [];\n    items.forEach((i: MangolLayer | MangolLayerGroup) => {\n      if (i instanceof MangolLayer) {\n        this.processLayer(i, data);\n      } else if (i instanceof MangolLayerGroup) {\n        this.processLayerGroup(i, data);\n      }\n    });\n    return data;\n  }\n\n  private processLayer(layer: MangolLayer, data: LayertreeItemNode[]) {\n    const item = {\n      name: layer.name,\n      checked: layer.layer.getVisible(),\n      layer: layer\n    } as LayertreeItemNode;\n    data.push(item);\n  }\n\n  private processLayerGroup(\n    group: MangolLayerGroup,\n    data: LayertreeItemNode[]\n  ) {\n    const item = { name: group.name } as LayertreeItemNode;\n    item.children = [];\n    if (\n      !!group.children &&\n      Array.isArray(group.children) &&\n      group.children.length > 0\n    ) {\n      group.children\n        .slice()\n        .reverse()\n        .forEach((c: MangolLayer | MangolLayerGroup) => {\n          if (c instanceof MangolLayer) {\n            this.processLayer(c, item.children);\n          } else if (c instanceof MangolLayerGroup) {\n            this.processLayerGroup(c, item.children);\n          }\n        });\n    }\n    data.push(item);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layer-details/legend/legend.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-legend\n            \n\n            \n                styleUrls\n                legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layer-details/legend/legend.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/legend/legend.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mangol-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.scss']\n})\nexport class LegendComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  legend works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  legend works!'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MangolComponent.html":{"url":"components/MangolComponent.html","title":"component - MangolComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MangolComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/mangol.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol\n            \n\n            \n                styleUrls\n                mangol.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mangol.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasSidebar$\n                            \n                            \n                                map$\n                            \n                            \n                                sidebarMode$\n                            \n                            \n                                sidebarOpened$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onOpenedChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/mangol.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    MangolConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:22\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'mangol'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onOpenedChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonOpenedChange(evt: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSidebar$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSidebar$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarMode$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarMode$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarOpened$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarOpened$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mangol.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Map from 'ol/Map';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { MangolConfig } from './interfaces/config.interface';\nimport * as ConfigActions from './store/config/config.actions';\nimport * as fromMangol from './store/mangol.reducers';\nimport * as SidebarActions from './store/sidebar/sidebar.actions';\nimport * as MangolActions from './store/mangol.actions';\n\n@Component({\n  selector: 'mangol',\n  templateUrl: './mangol.component.html',\n  styleUrls: ['./mangol.component.scss']\n})\nexport class MangolComponent implements OnInit {\n  @HostBinding('class')\n  class = 'mangol';\n  @Input()\n  config: MangolConfig;\n\n  hasSidebar$: Observable;\n  sidebarOpened$: Observable;\n  sidebarMode$: Observable;\n  map$: Observable;\n\n  constructor(private store: Store) {\n    this.hasSidebar$ = this.store.select(state => state.sidebar.hasSidebar);\n    this.sidebarOpened$ = this.store.select(state => state.sidebar.opened);\n    this.sidebarMode$ = this.store.select(state => state.sidebar.mode);\n    this.map$ = this.store.select(state => state.map.map);\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new MangolActions.ClearState());\n    this.store.dispatch(new ConfigActions.SetConfig(this.config));\n    if (typeof this.config !== 'undefined' && this.config !== null) {\n      // register the config in the Store\n      this.store.dispatch(\n        new SidebarActions.SetHasSidebar(!!this.config.sidebar)\n      );\n      if (!!this.config.sidebar) {\n        /**\n         * Basic sidebar options\n         */\n        if (!!this.config.sidebar.collapsible) {\n          this.store.dispatch(\n            new SidebarActions.SetCollapsible(this.config.sidebar.collapsible)\n          );\n        }\n        if (!!this.config.sidebar.mode) {\n          this.store.dispatch(\n            new SidebarActions.SetMode(this.config.sidebar.mode)\n          );\n        }\n        if (!!this.config.sidebar.opened) {\n          this.store.dispatch(\n            new SidebarActions.SetOpened(this.config.sidebar.opened)\n          );\n        }\n        if (!!this.config.sidebar.title) {\n          this.store.dispatch(\n            new SidebarActions.SetTitle(this.config.sidebar.title)\n          );\n        }\n      }\n    } else {\n      this.store.dispatch(new SidebarActions.SetHasSidebar(false));\n    }\n  }\n\n  onOpenedChange(evt: boolean) {\n    this.store\n      .select(state => state.sidebar.opened)\n      .pipe(take(1))\n      .subscribe(opened => {\n        if (opened !== evt) {\n          this.store.dispatch(new SidebarActions.Toggle());\n        }\n        this.store\n          .select(state => state.map.map)\n          .pipe(take(1))\n          .subscribe((m: Map) => {\n            if (m !== null) {\n              m.updateSize();\n            }\n          });\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MangolComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfig.html":{"url":"interfaces/MangolConfig.html","title":"interface - MangolConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        map\n                                \n                                \n                                            Optional\n                                        sidebar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     MangolConfigMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sidebar\n                                    \n                                \n                                \n                                    \n                                        sidebar:     MangolConfigSidebar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigSidebar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MangolConfigMap } from './config-map.interface';\nimport { MangolConfigSidebar } from './config-sidebar.interface';\n\nexport interface MangolConfig {\n  map?: MangolConfigMap;\n  sidebar?: MangolConfigSidebar;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigFeatureInfoItem.html":{"url":"interfaces/MangolConfigFeatureInfoItem.html","title":"interface - MangolConfigFeatureInfoItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigFeatureInfoItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolConfigToolbarItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cursorStyle\n                                \n                                \n                                            Optional\n                                        highlightFeatures\n                                \n                                \n                                            Optional\n                                        hoverStyle\n                                \n                                \n                                            Optional\n                                        maxFeatures\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        zoomOnRowClick\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cursorStyle\n                                    \n                                \n                                \n                                    \n                                        cursorStyle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightFeatures\n                                    \n                                \n                                \n                                    \n                                        highlightFeatures:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoverStyle\n                                    \n                                \n                                \n                                    \n                                        hoverStyle:     Style[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Style[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFeatures\n                                    \n                                \n                                \n                                    \n                                        maxFeatures:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomOnRowClick\n                                    \n                                \n                                \n                                    \n                                        zoomOnRowClick:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayer.html":{"url":"interfaces/MangolConfigLayer.html","title":"interface - MangolConfigLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrColumns\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        layer\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        opacity\n                                \n                                \n                                            Optional\n                                        queryable\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrColumns\n                                    \n                                \n                                \n                                    \n                                        attrColumns:     MangolConfigLayerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigLayerColumn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                    \n                                \n                                \n                                    \n                                        layer:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                    \n                                \n                                \n                                    \n                                        opacity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryable\n                                    \n                                \n                                \n                                    \n                                        queryable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayer2.html":{"url":"interfaces/MangolConfigLayer2.html","title":"interface - MangolConfigLayer2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayer2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLayer\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attrcolumns\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        queryable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrcolumns\n                                    \n                                \n                                \n                                    \n                                        attrcolumns:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryable\n                                    \n                                \n                                \n                                    \n                                        queryable:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Collection from 'ol/Collection';\nimport BaseLayer from 'ol/layer/Base';\nimport View from 'ol/View';\n\nimport { MangolLayerGroup } from '../classes/LayerGroup';\nimport { MangolLayer } from './../classes/Layer';\nimport { MangolConfigLayertree } from './config-layers.inteface';\nimport { MangolConfigMapControllers } from './config-map-controllers.interface';\n\nexport interface MangolConfigMapMousePosition {}\n\nexport interface MangolConfigLayer2 extends BaseLayer {\n  name: string;\n  description?: string;\n  queryable?: string;\n  attrcolumns?: any[];\n}\n\nexport interface MangolConfigLayerGroup extends Collection {\n  name: string;\n}\n\nexport interface MangolConfigMap {\n  target: string;\n  view: View;\n  layertree?: MangolConfigLayertree;\n  renderer?: string;\n  controllers?: MangolConfigMapControllers;\n  layers?: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayerColumn.html":{"url":"interfaces/MangolConfigLayerColumn.html","title":"interface - MangolConfigLayerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayerGroup.html":{"url":"interfaces/MangolConfigLayerGroup.html","title":"interface - MangolConfigLayerGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayerGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MangolConfigLayertree\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigLayertree\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayerGroup-1.html":{"url":"interfaces/MangolConfigLayerGroup-1.html","title":"interface - MangolConfigLayerGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayerGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Collection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Collection from 'ol/Collection';\nimport BaseLayer from 'ol/layer/Base';\nimport View from 'ol/View';\n\nimport { MangolLayerGroup } from '../classes/LayerGroup';\nimport { MangolLayer } from './../classes/Layer';\nimport { MangolConfigLayertree } from './config-layers.inteface';\nimport { MangolConfigMapControllers } from './config-map-controllers.interface';\n\nexport interface MangolConfigMapMousePosition {}\n\nexport interface MangolConfigLayer2 extends BaseLayer {\n  name: string;\n  description?: string;\n  queryable?: string;\n  attrcolumns?: any[];\n}\n\nexport interface MangolConfigLayerGroup extends Collection {\n  name: string;\n}\n\nexport interface MangolConfigMap {\n  target: string;\n  view: View;\n  layertree?: MangolConfigLayertree;\n  renderer?: string;\n  controllers?: MangolConfigMapControllers;\n  layers?: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayertree.html":{"url":"interfaces/MangolConfigLayertree.html","title":"interface - MangolConfigLayertree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayertree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        groups\n                                \n                                \n                                            Optional\n                                        layers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                    \n                                \n                                \n                                    \n                                        groups:     MangolConfigLayerGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigLayerGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     MangolConfigLayer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigLayer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigLayertreeItem.html":{"url":"interfaces/MangolConfigLayertreeItem.html","title":"interface - MangolConfigLayertreeItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigLayertreeItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolConfigToolbarItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        details\n                                \n                                \n                                            Optional\n                                        isAccordionMulti\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     MangolConfigToolbarLayertreeDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigToolbarLayertreeDetails\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAccordionMulti\n                                    \n                                \n                                \n                                    \n                                        isAccordionMulti:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigMap.html":{"url":"interfaces/MangolConfigMap.html","title":"interface - MangolConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        controllers\n                                \n                                \n                                            Optional\n                                        layers\n                                \n                                \n                                            Optional\n                                        layertree\n                                \n                                \n                                            Optional\n                                        renderer\n                                \n                                \n                                        target\n                                \n                                \n                                        view\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        controllers\n                                    \n                                \n                                \n                                    \n                                        controllers:     MangolConfigMapControllers\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigMapControllers\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     (MangolLayer | MangolLayerGroup)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (MangolLayer | MangolLayerGroup)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layertree\n                                    \n                                \n                                \n                                    \n                                        layertree:     MangolConfigLayertree\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigLayertree\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderer\n                                    \n                                \n                                \n                                    \n                                        renderer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                    \n                                \n                                \n                                    \n                                        view:     View\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     View\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Collection from 'ol/Collection';\nimport BaseLayer from 'ol/layer/Base';\nimport View from 'ol/View';\n\nimport { MangolLayerGroup } from '../classes/LayerGroup';\nimport { MangolLayer } from './../classes/Layer';\nimport { MangolConfigLayertree } from './config-layers.inteface';\nimport { MangolConfigMapControllers } from './config-map-controllers.interface';\n\nexport interface MangolConfigMapMousePosition {}\n\nexport interface MangolConfigLayer2 extends BaseLayer {\n  name: string;\n  description?: string;\n  queryable?: string;\n  attrcolumns?: any[];\n}\n\nexport interface MangolConfigLayerGroup extends Collection {\n  name: string;\n}\n\nexport interface MangolConfigMap {\n  target: string;\n  view: View;\n  layertree?: MangolConfigLayertree;\n  renderer?: string;\n  controllers?: MangolConfigMapControllers;\n  layers?: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigMapControllers.html":{"url":"interfaces/MangolConfigMapControllers.html","title":"interface - MangolConfigMapControllers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigMapControllers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fullScreen\n                                \n                                \n                                            Optional\n                                        position\n                                \n                                \n                                            Optional\n                                        rotation\n                                \n                                \n                                            Optional\n                                        scalebar\n                                \n                                \n                                            Optional\n                                        tileload\n                                \n                                \n                                            Optional\n                                        zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullScreen\n                                    \n                                \n                                \n                                    \n                                        fullScreen:     MangolControllersFullScreenOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersFullScreenOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     MangolControllersPositionOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersPositionOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                    \n                                \n                                \n                                    \n                                        rotation:     MangolControllersRotationOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersRotationOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scalebar\n                                    \n                                \n                                \n                                    \n                                        scalebar:     MangolControllersScalebarOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersScalebarOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tileload\n                                    \n                                \n                                \n                                    \n                                        tileload:     MangolControllersTileloadOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersTileloadOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:     MangolControllersZoomOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersZoomOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigMapMousePosition.html":{"url":"interfaces/MangolConfigMapMousePosition.html","title":"interface - MangolConfigMapMousePosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigMapMousePosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map.interface.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import Collection from 'ol/Collection';\nimport BaseLayer from 'ol/layer/Base';\nimport View from 'ol/View';\n\nimport { MangolLayerGroup } from '../classes/LayerGroup';\nimport { MangolLayer } from './../classes/Layer';\nimport { MangolConfigLayertree } from './config-layers.inteface';\nimport { MangolConfigMapControllers } from './config-map-controllers.interface';\n\nexport interface MangolConfigMapMousePosition {}\n\nexport interface MangolConfigLayer2 extends BaseLayer {\n  name: string;\n  description?: string;\n  queryable?: string;\n  attrcolumns?: any[];\n}\n\nexport interface MangolConfigLayerGroup extends Collection {\n  name: string;\n}\n\nexport interface MangolConfigMap {\n  target: string;\n  view: View;\n  layertree?: MangolConfigLayertree;\n  renderer?: string;\n  controllers?: MangolConfigMapControllers;\n  layers?: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigMeasureItem.html":{"url":"interfaces/MangolConfigMeasureItem.html","title":"interface - MangolConfigMeasureItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigMeasureItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolConfigToolbarItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dictionary\n                                \n                                \n                                            Optional\n                                        fillColor\n                                \n                                \n                                            Optional\n                                        font\n                                \n                                \n                                            Optional\n                                        precision\n                                \n                                \n                                            Optional\n                                        strokeColor\n                                \n                                \n                                            Optional\n                                        textColor\n                                \n                                \n                                            Optional\n                                        textOutlineColor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     MeasureDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MeasureDictionary\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fillColor\n                                    \n                                \n                                \n                                    \n                                        fillColor:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        font\n                                    \n                                \n                                \n                                    \n                                        font:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                    \n                                \n                                \n                                    \n                                        precision:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strokeColor\n                                    \n                                \n                                \n                                    \n                                        strokeColor:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textColor\n                                    \n                                \n                                \n                                    \n                                        textColor:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textOutlineColor\n                                    \n                                \n                                \n                                    \n                                        textOutlineColor:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigPrintItem.html":{"url":"interfaces/MangolConfigPrintItem.html","title":"interface - MangolConfigPrintItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigPrintItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolConfigToolbarItem\n            \n\n\n\n\n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigSidebar.html":{"url":"interfaces/MangolConfigSidebar.html","title":"interface - MangolConfigSidebar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigSidebar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-sidebar.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collapsible\n                                \n                                \n                                            Optional\n                                        mode\n                                \n                                \n                                            Optional\n                                        opened\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        toolbar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapsible\n                                    \n                                \n                                \n                                    \n                                        collapsible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:     \"side\" | \"push\" | \"over\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"side\" | \"push\" | \"over\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toolbar\n                                    \n                                \n                                \n                                    \n                                        toolbar:     MangolConfigToolbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigToolbar\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MangolConfigToolbar } from './config-toolbar.interface';\n\nexport interface MangolConfigSidebar {\n  collapsible?: boolean;\n  opened?: boolean;\n  title?: string;\n  toolbar?: MangolConfigToolbar;\n  mode?: 'side' | 'push' | 'over';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigToolbar.html":{"url":"interfaces/MangolConfigToolbar.html","title":"interface - MangolConfigToolbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigToolbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        featureinfo\n                                \n                                \n                                            Optional\n                                        layertree\n                                \n                                \n                                            Optional\n                                        measure\n                                \n                                \n                                            Optional\n                                        print\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        featureinfo\n                                    \n                                \n                                \n                                    \n                                        featureinfo:     MangolConfigFeatureInfoItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigFeatureInfoItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layertree\n                                    \n                                \n                                \n                                    \n                                        layertree:     MangolConfigLayertreeItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigLayertreeItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure\n                                    \n                                \n                                \n                                    \n                                        measure:     MangolConfigMeasureItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigMeasureItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        print\n                                    \n                                \n                                \n                                    \n                                        print:     MangolConfigPrintItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfigPrintItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigToolbarItem.html":{"url":"interfaces/MangolConfigToolbarItem.html","title":"interface - MangolConfigToolbarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigToolbarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        active\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigToolbarLayertreeDetails.html":{"url":"interfaces/MangolConfigToolbarLayertreeDetails.html","title":"interface - MangolConfigToolbarLayertreeDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigToolbarLayertreeDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-toolbar.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        legend\n                                \n                                \n                                            Optional\n                                        opacity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                    \n                                \n                                \n                                    \n                                        opacity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MeasureDictionary } from './../store/measure/measure.reducers';\nimport Style from 'ol/style/Style';\n\nexport interface MangolConfigToolbarItem {\n  title?: string;\n  active?: boolean;\n  disabled?: boolean;\n  type?: string;\n}\n\nexport interface MangolConfigToolbarLayertreeDetails {\n  opacity?: {\n    sliderStep?: number;\n    showLabels?: boolean;\n  };\n  legend?: any;\n}\n\nexport interface MangolConfigLayertreeItem extends MangolConfigToolbarItem {\n  isAccordionMulti?: boolean;\n  details?: MangolConfigToolbarLayertreeDetails;\n}\n\nexport interface MangolConfigMeasureItem extends MangolConfigToolbarItem {\n  precision?: number;\n  fillColor?: [number, number, number, number];\n  strokeColor?: [number, number, number, number];\n  textColor?: [number, number, number, number];\n  textOutlineColor?: [number, number, number, number];\n  font?: string;\n  dictionary?: MeasureDictionary;\n}\n\nexport interface MangolConfigPrintItem extends MangolConfigToolbarItem {}\n\nexport interface MangolConfigFeatureInfoItem extends MangolConfigToolbarItem {\n  maxFeatures?: number;\n  cursorStyle?: string;\n  placeholder?: string;\n  zoomOnRowClick?: boolean;\n  highlightFeatures?: boolean;\n  hoverStyle?: Style[];\n}\n\nexport interface MangolConfigToolbar {\n  layertree?: MangolConfigLayertreeItem;\n  measure?: MangolConfigMeasureItem;\n  print?: MangolConfigPrintItem;\n  featureinfo?: MangolConfigFeatureInfoItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolConfigView.html":{"url":"interfaces/MangolConfigView.html","title":"interface - MangolConfigView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolConfigView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-view.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        center\n                                \n                                \n                                        projection\n                                \n                                \n                                            Optional\n                                        resolutions\n                                \n                                \n                                        zoom\n                                \n                                \n                                            Optional\n                                        zoomDuration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                    \n                                \n                                \n                                    \n                                        center:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projection\n                                    \n                                \n                                \n                                    \n                                        projection:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolutions\n                                    \n                                \n                                \n                                    \n                                        resolutions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomDuration\n                                    \n                                \n                                \n                                    \n                                        zoomDuration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolConfigView {\n  projection: string;\n  center: [number, number];\n  zoom: number;\n  resolutions?: number[];\n  zoomDuration?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersFullScreenDictionary.html":{"url":"interfaces/MangolControllersFullScreenDictionary.html","title":"interface - MangolControllersFullScreenDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersFullScreenDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        maximize\n                                \n                                \n                                            Optional\n                                        minimize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maximize\n                                    \n                                \n                                \n                                    \n                                        maximize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimize\n                                    \n                                \n                                \n                                    \n                                        minimize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersFullScreenOptions.html":{"url":"interfaces/MangolControllersFullScreenOptions.html","title":"interface - MangolControllersFullScreenOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersFullScreenOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dictionary\n                                \n                                \n                                            Optional\n                                        showTooltip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     MangolControllersFullScreenDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersFullScreenDictionary\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTooltip\n                                    \n                                \n                                \n                                    \n                                        showTooltip:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersOptions.html":{"url":"interfaces/MangolControllersOptions.html","title":"interface - MangolControllersOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        show\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        show\n                                    \n                                \n                                \n                                    \n                                        show:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersPositionDictionary.html":{"url":"interfaces/MangolControllersPositionDictionary.html","title":"interface - MangolControllersPositionDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersPositionDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        closeSnackbar\n                                \n                                \n                                            Optional\n                                        copyCoordinates\n                                \n                                \n                                            Optional\n                                        textCopied\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeSnackbar\n                                    \n                                \n                                \n                                    \n                                        closeSnackbar:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        copyCoordinates\n                                    \n                                \n                                \n                                    \n                                        copyCoordinates:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textCopied\n                                    \n                                \n                                \n                                    \n                                        textCopied:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersPositionOptions.html":{"url":"interfaces/MangolControllersPositionOptions.html","title":"interface - MangolControllersPositionOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersPositionOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dictionary\n                                \n                                \n                                            Optional\n                                        precision\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     MangolControllersPositionDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersPositionDictionary\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                    \n                                \n                                \n                                    \n                                        precision:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersPositionStateModel.html":{"url":"interfaces/MangolControllersPositionStateModel.html","title":"interface - MangolControllersPositionStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersPositionStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.reducers.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersPositionOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coordinates\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinates\n                                    \n                                \n                                \n                                    \n                                        coordinates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangolControllersPositionOptions,\n  MangolControllersRotationOptions,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomOptions,\n  MangolControllersFullScreenOptions\n} from './../../interfaces/config-map-controllers.interface';\nimport * as ControllersActions from './controllers.actions';\n\nexport interface MangolControllersPositionStateModel\n  extends MangolControllersPositionOptions {\n  coordinates: number[];\n}\n\nexport interface MangolControllersRotationStateModel\n  extends MangolControllersRotationOptions {\n  rotation: number;\n}\n\nexport interface ControllersStateModel {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n}\n\nexport interface State {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n  fullScreen: MangolControllersFullScreenOptions;\n}\n\nconst initialState: State = {\n  zoom: {\n    show: false,\n    dictionary: {\n      zoomIn: 'Zoom in',\n      zoomOut: 'Zoom out'\n    },\n    showTooltip: true\n  },\n  scalebar: { show: false },\n  position: {\n    show: false,\n    coordinates: [],\n    precision: 2,\n    dictionary: {\n      textCopied: 'Copied',\n      copyCoordinates: 'Copy coordinates',\n      closeSnackbar: 'Close'\n    }\n  },\n  rotation: {\n    show: false,\n    dictionary: { rotateToNorth: 'Rotate to North' },\n    showTooltip: true,\n    rotation: 0\n  },\n  fullScreen: {\n    show: false,\n    showTooltip: true,\n    dictionary: {\n      maximize: 'Maximize',\n      minimize: 'Minimize'\n    }\n  }\n};\n\nexport function controllersReducer(\n  state = initialState,\n  action: ControllersActions.ControllersActions\n) {\n  switch (action.type) {\n    case ControllersActions.RESET:\n      return {\n        ...state,\n        zoom: initialState.zoom,\n        scalebar: initialState.scalebar,\n        position: initialState.position,\n        rotation: initialState.rotation,\n        fullScreen: initialState.fullScreen\n      };\n    case ControllersActions.SET_SHOW_ZOOM:\n      return { ...state, zoom: { ...state.zoom, show: action.payload } };\n    case ControllersActions.SET_ZOOM_DICTIONARY:\n      return { ...state, zoom: { ...state.zoom, dictionary: action.payload } };\n    case ControllersActions.SET_SHOW_TOOLTIP:\n      return { ...state, zoom: { ...state.zoom, showTooltip: action.payload } };\n    case ControllersActions.SET_SCALEBAR:\n      return { ...state, scalebar: action.payload };\n    case ControllersActions.SET_SHOW_POSITION:\n      return {\n        ...state,\n        position: { ...state.position, show: action.payload }\n      };\n    case ControllersActions.SET_POSITION_PRECISION:\n      return {\n        ...state,\n        position: { ...state.position, precision: action.payload }\n      };\n    case ControllersActions.SET_POSITION_COORDINATES:\n      return {\n        ...state,\n        position: { ...state.position, coordinates: action.payload }\n      };\n    case ControllersActions.SET_POSITION_DICTIONARY:\n      return {\n        ...state,\n        position: { ...state.position, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION:\n      return {\n        ...state,\n        rotation: { ...state.rotation, show: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_DICTIONARY:\n      return {\n        ...state,\n        rotation: { ...state.rotation, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION_TOOLTIP:\n      return {\n        ...state,\n        rotation: { ...state.rotation, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_VALUE:\n      return {\n        ...state,\n        rotation: { ...state.rotation, rotation: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, show: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN_TOOLTIP:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_FULLSCREEN_DICTIONARY:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, dictionary: action.payload }\n      };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersRotationDictionary.html":{"url":"interfaces/MangolControllersRotationDictionary.html","title":"interface - MangolControllersRotationDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersRotationDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        rotateToNorth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rotateToNorth\n                                    \n                                \n                                \n                                    \n                                        rotateToNorth:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersRotationOptions.html":{"url":"interfaces/MangolControllersRotationOptions.html","title":"interface - MangolControllersRotationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersRotationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dictionary\n                                \n                                \n                                            Optional\n                                        showTooltip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     MangolControllersRotationDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersRotationDictionary\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTooltip\n                                    \n                                \n                                \n                                    \n                                        showTooltip:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersRotationStateModel.html":{"url":"interfaces/MangolControllersRotationStateModel.html","title":"interface - MangolControllersRotationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersRotationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.reducers.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersRotationOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        rotation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                    \n                                \n                                \n                                    \n                                        rotation:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangolControllersPositionOptions,\n  MangolControllersRotationOptions,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomOptions,\n  MangolControllersFullScreenOptions\n} from './../../interfaces/config-map-controllers.interface';\nimport * as ControllersActions from './controllers.actions';\n\nexport interface MangolControllersPositionStateModel\n  extends MangolControllersPositionOptions {\n  coordinates: number[];\n}\n\nexport interface MangolControllersRotationStateModel\n  extends MangolControllersRotationOptions {\n  rotation: number;\n}\n\nexport interface ControllersStateModel {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n}\n\nexport interface State {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n  fullScreen: MangolControllersFullScreenOptions;\n}\n\nconst initialState: State = {\n  zoom: {\n    show: false,\n    dictionary: {\n      zoomIn: 'Zoom in',\n      zoomOut: 'Zoom out'\n    },\n    showTooltip: true\n  },\n  scalebar: { show: false },\n  position: {\n    show: false,\n    coordinates: [],\n    precision: 2,\n    dictionary: {\n      textCopied: 'Copied',\n      copyCoordinates: 'Copy coordinates',\n      closeSnackbar: 'Close'\n    }\n  },\n  rotation: {\n    show: false,\n    dictionary: { rotateToNorth: 'Rotate to North' },\n    showTooltip: true,\n    rotation: 0\n  },\n  fullScreen: {\n    show: false,\n    showTooltip: true,\n    dictionary: {\n      maximize: 'Maximize',\n      minimize: 'Minimize'\n    }\n  }\n};\n\nexport function controllersReducer(\n  state = initialState,\n  action: ControllersActions.ControllersActions\n) {\n  switch (action.type) {\n    case ControllersActions.RESET:\n      return {\n        ...state,\n        zoom: initialState.zoom,\n        scalebar: initialState.scalebar,\n        position: initialState.position,\n        rotation: initialState.rotation,\n        fullScreen: initialState.fullScreen\n      };\n    case ControllersActions.SET_SHOW_ZOOM:\n      return { ...state, zoom: { ...state.zoom, show: action.payload } };\n    case ControllersActions.SET_ZOOM_DICTIONARY:\n      return { ...state, zoom: { ...state.zoom, dictionary: action.payload } };\n    case ControllersActions.SET_SHOW_TOOLTIP:\n      return { ...state, zoom: { ...state.zoom, showTooltip: action.payload } };\n    case ControllersActions.SET_SCALEBAR:\n      return { ...state, scalebar: action.payload };\n    case ControllersActions.SET_SHOW_POSITION:\n      return {\n        ...state,\n        position: { ...state.position, show: action.payload }\n      };\n    case ControllersActions.SET_POSITION_PRECISION:\n      return {\n        ...state,\n        position: { ...state.position, precision: action.payload }\n      };\n    case ControllersActions.SET_POSITION_COORDINATES:\n      return {\n        ...state,\n        position: { ...state.position, coordinates: action.payload }\n      };\n    case ControllersActions.SET_POSITION_DICTIONARY:\n      return {\n        ...state,\n        position: { ...state.position, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION:\n      return {\n        ...state,\n        rotation: { ...state.rotation, show: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_DICTIONARY:\n      return {\n        ...state,\n        rotation: { ...state.rotation, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION_TOOLTIP:\n      return {\n        ...state,\n        rotation: { ...state.rotation, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_VALUE:\n      return {\n        ...state,\n        rotation: { ...state.rotation, rotation: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, show: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN_TOOLTIP:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_FULLSCREEN_DICTIONARY:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, dictionary: action.payload }\n      };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersScalebarOptions.html":{"url":"interfaces/MangolControllersScalebarOptions.html","title":"interface - MangolControllersScalebarOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersScalebarOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersOptions\n            \n\n\n\n\n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersTileloadOptions.html":{"url":"interfaces/MangolControllersTileloadOptions.html","title":"interface - MangolControllersTileloadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersTileloadOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersOptions\n            \n\n\n\n\n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersZoomDictionary.html":{"url":"interfaces/MangolControllersZoomDictionary.html","title":"interface - MangolControllersZoomDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersZoomDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        zoomIn\n                                \n                                \n                                            Optional\n                                        zoomOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        zoomIn\n                                    \n                                \n                                \n                                    \n                                        zoomIn:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomOut\n                                    \n                                \n                                \n                                    \n                                        zoomOut:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolControllersZoomOptions.html":{"url":"interfaces/MangolControllersZoomOptions.html","title":"interface - MangolControllersZoomOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolControllersZoomOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-map-controllers.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MangolControllersOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dictionary\n                                \n                                \n                                            Optional\n                                        showTooltip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     MangolControllersZoomDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersZoomDictionary\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTooltip\n                                    \n                                \n                                \n                                    \n                                        showTooltip:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MangolControllersOptions {\n  show: boolean;\n}\n\nexport interface MangolControllersZoomDictionary {\n  zoomIn?: string;\n  zoomOut?: string;\n}\n\nexport interface MangolControllersZoomOptions extends MangolControllersOptions {\n  dictionary?: MangolControllersZoomDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersScalebarOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersFullScreenDictionary {\n  maximize?: string;\n  minimize?: string;\n}\n\nexport interface MangolControllersFullScreenOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersFullScreenDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolControllersPositionDictionary {\n  textCopied?: string;\n  copyCoordinates?: string;\n  closeSnackbar?: string;\n}\n\nexport interface MangolControllersPositionOptions\n  extends MangolControllersOptions {\n  precision?: number;\n  dictionary?: MangolControllersPositionDictionary;\n}\n\nexport interface MangolControllersTileloadOptions\n  extends MangolControllersOptions {}\n\nexport interface MangolControllersRotationDictionary {\n  rotateToNorth?: string;\n}\n\nexport interface MangolControllersRotationOptions\n  extends MangolControllersOptions {\n  dictionary?: MangolControllersRotationDictionary;\n  showTooltip?: boolean;\n}\n\nexport interface MangolConfigMapControllers {\n  zoom?: MangolControllersZoomOptions;\n  scalebar?: MangolControllersScalebarOptions;\n  position?: MangolControllersPositionOptions;\n  tileload?: MangolControllersTileloadOptions;\n  rotation?: MangolControllersRotationOptions;\n  fullScreen?: MangolControllersFullScreenOptions;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MangolLayer.html":{"url":"classes/MangolLayer.html","title":"class - MangolLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MangolLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/classes/Layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                details\n                            \n                            \n                                    Public\n                                layer\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                queryable\n                            \n                            \n                                    Public\n                                queryColumns\n                            \n                            \n                                    Public\n                                queryIdProperty\n                            \n                            \n                                    Public\n                                querySrs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MangolLayerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/classes/Layer.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    MangolLayerOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            details\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        details:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer:     Layer\n\n                    \n                \n                    \n                        \n                            Type :     Layer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queryIdProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryIdProperty:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySrs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        querySrs:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/Layer.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import BaseLayer from 'ol/layer/Base';\nimport Layer from 'ol/layer/Layer';\n\nimport { MangolLayerOptions } from './../interfaces/config-layers.inteface';\n\nexport class MangolLayer extends BaseLayer {\n  public name: string;\n  public layer: Layer;\n  public details: string;\n  public queryable: boolean;\n  public querySrs: string;\n  public queryIdProperty: string;\n  public queryColumns: string[];\n\n  constructor(options: MangolLayerOptions) {\n    super(options);\n    this.name = options.name;\n    this.layer = options.layer;\n    this.details = options.details;\n    this.queryable = options.queryable;\n    this.querySrs = options.querySrs;\n    this.queryIdProperty = options.queryIdProperty;\n    this.queryColumns = options.queryColumns;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MangolLayerGroup.html":{"url":"classes/MangolLayerGroup.html","title":"class - MangolLayerGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MangolLayerGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/classes/LayerGroup.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                details\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: MangolLayerGroupOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/classes/LayerGroup.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    MangolLayerGroupOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     (MangolLayer | MangolLayerGroup)[]\n\n                    \n                \n                    \n                        \n                            Type :     (MangolLayer | MangolLayerGroup)[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/LayerGroup.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            details\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        details:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/LayerGroup.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/classes/LayerGroup.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MangolLayerGroupOptions } from '../interfaces/config-layers.inteface';\nimport { MangolLayer } from './Layer';\n\nexport class MangolLayerGroup {\n  public name: string;\n  public details: string;\n  public children: (MangolLayer | MangolLayerGroup)[];\n\n  constructor(options: MangolLayerGroupOptions) {\n    this.name = options.name;\n    this.children = options.children;\n    this.details = options.details;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolLayerGroupOptions.html":{"url":"interfaces/MangolLayerGroupOptions.html","title":"interface - MangolLayerGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolLayerGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        details\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     (MangolLayer | MangolLayerGroup)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (MangolLayer | MangolLayerGroup)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolLayerOptions.html":{"url":"interfaces/MangolLayerOptions.html","title":"interface - MangolLayerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolLayerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OlxLayerLayerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        details\n                                \n                                \n                                        layer\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        queryable\n                                \n                                \n                                            Optional\n                                        queryColumns\n                                \n                                \n                                            Optional\n                                        queryIdProperty\n                                \n                                \n                                            Optional\n                                        querySrs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                    \n                                \n                                \n                                    \n                                        layer:     Layer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Layer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryable\n                                    \n                                \n                                \n                                    \n                                        queryable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryColumns\n                                    \n                                \n                                \n                                    \n                                        queryColumns:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryIdProperty\n                                    \n                                \n                                \n                                    \n                                        queryIdProperty:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        querySrs\n                                    \n                                \n                                \n                                    \n                                        querySrs:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MangolMap.html":{"url":"classes/MangolMap.html","title":"class - MangolMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MangolMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/classes/Map.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/classes/Map.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Map from 'ol/Map';\nexport class MangolMap extends Map {\n  constructor(options: any) {\n    super(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MangolModule.html":{"url":"modules/MangolModule.html","title":"module - MangolModule","body":"\n                   \n\n\n\n\n  Modules\n  MangolModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MangolModule\n\n\n\ncluster_MangolModule_declarations\n\n\n\ncluster_MangolModule_imports\n\n\n\ncluster_MangolModule_exports\n\n\n\ncluster_MangolModule_providers\n\n\n\n\nMangolComponent\n\nMangolComponent\n\n\n\nMangolModule\n\nMangolModule\n\nMangolModule -->\n\nMangolComponent->MangolModule\n\n\n\n\n\nMangolComponent \n\nMangolComponent \n\nMangolComponent  -->\n\nMangolModule->MangolComponent \n\n\n\n\n\nMapModule\n\nMapModule\n\nMangolModule -->\n\nMapModule->MangolModule\n\n\n\n\n\nTabsModule\n\nTabsModule\n\nMangolModule -->\n\nTabsModule->MangolModule\n\n\n\n\n\nMeasureService\n\nMeasureService\n\nMangolModule -->\n\nMeasureService->MangolModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/mangol.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MangolComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MeasureService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MapModule\n                            \n                            \n                                    TabsModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MangolComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import 'hammerjs';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Action, ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\nimport { storeLogger } from 'ngrx-store-logger';\n\nimport { MangolComponent } from './mangol.component';\nimport { ControllersModule } from './modules/controllers/controllers.module';\nimport { MapModule } from './modules/map/map.module';\nimport { MeasureService } from './modules/measure/measure.service';\nimport { TabsModule } from './modules/tabs/tabs.module';\nimport {\n  clearState,\n  mangolReducers,\n  MangolState\n} from './store/mangol.reducers';\n\nexport function logger(reducer: ActionReducer): any {\n  return storeLogger({\n    collapsed: true,\n    filter: {\n      // whitelist: ['']\n      blacklist: [\n        '[Controllers] Set Position Coordinates',\n        '[Controllers] Set Rotation Value',\n        '[Cursor] Set Mode',\n        '[Cursor] Set Visible'\n      ]\n    }\n  })(reducer);\n}\n\nconst mangolMetaReducers: MetaReducer[] = [clearState];\n\nexport const metaReducers = [\n  // logger,\n  ...mangolMetaReducers\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    MatButtonModule,\n    MatSidenavModule,\n    TabsModule,\n    BrowserAnimationsModule,\n    MapModule,\n    ControllersModule,\n    StoreModule.forRoot(mangolReducers, { metaReducers })\n  ],\n  declarations: [MangolComponent],\n  providers: [MeasureService],\n  exports: [MangolComponent]\n})\nexport class MangolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolReady.html":{"url":"interfaces/MangolReady.html","title":"interface - MangolReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/ready.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     MangolConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MangolConfig } from './config.interface';\nexport interface MangolReady {\n  config: MangolConfig;\n  // mapService: MangolMapService;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MangolService.html":{"url":"injectables/MangolService.html","title":"injectable - MangolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MangolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/mangol.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                getMap$\n                            \n                            \n                                getSidebar$\n                            \n                            \n                                setConfig\n                            \n                            \n                                setHasSidebar\n                            \n                            \n                                setSidebarCollapsible\n                            \n                            \n                                setSidebarMode\n                            \n                            \n                                setSidebarOpened\n                            \n                            \n                                setSidebarTitle\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/mangol.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:21\n                            \n                        \n\n\n                \n                    \n                            CONFIG STATE MODIFIER FUNCTIONS\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMap$\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMap$()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSidebar$\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSidebar$()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            SIDEBAR STATE MODIFIER FUNCTIONS\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetConfig(config: MangolConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    MangolConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setHasSidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetHasSidebar(hasSidebar: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hasSidebar\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSidebarCollapsible\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSidebarCollapsible(collapsible: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collapsible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSidebarMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSidebarMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSidebarOpened\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSidebarOpened(opened: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opened\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSidebarTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSidebarTitle(title: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/mangol.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Map from 'ol/Map';\nimport { Observable } from 'rxjs';\n\nimport { MangolConfig } from './interfaces/config.interface';\nimport * as ConfigActions from './store/config/config.actions';\nimport * as fromMangol from './store/mangol.reducers';\nimport * as SidebarActions from './store/sidebar/sidebar.actions';\nimport * as fromSidebar from './store/sidebar/sidebar.reducers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MangolService {\n  constructor(private store: Store) {}\n\n  /**\n   * CONFIG STATE MODIFIER FUNCTIONS\n   */\n  getConfig(): Observable {\n    return this.store.select(state => state.config.config);\n  }\n\n  setConfig(config: MangolConfig): void {\n    this.store.dispatch(new ConfigActions.SetConfig(config));\n  }\n\n  /**\n   *\n   */\n  getMap$(): Observable {\n    return this.store.select(state => state.map.map);\n  }\n\n  /**\n   * SIDEBAR STATE MODIFIER FUNCTIONS\n   */\n\n  getSidebar$(): Observable {\n    return this.store.select(state => state.sidebar);\n  }\n\n  toggleSidebar(): void {\n    this.store.dispatch(new SidebarActions.Toggle());\n  }\n\n  setHasSidebar(hasSidebar: boolean): void {\n    this.store.dispatch(new SidebarActions.SetHasSidebar(hasSidebar));\n  }\n\n  setSidebarMode(mode: string) {\n    this.store.dispatch(new SidebarActions.SetMode(mode));\n  }\n\n  setSidebarCollapsible(collapsible: boolean): void {\n    this.store.dispatch(new SidebarActions.SetCollapsible(collapsible));\n  }\n\n  setSidebarOpened(opened: boolean): void {\n    this.store.dispatch(new SidebarActions.SetOpened(opened));\n  }\n\n  setSidebarTitle(title: string): void {\n    this.store.dispatch(new SidebarActions.SetTitle(title));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MangolState.html":{"url":"interfaces/MangolState.html","title":"interface - MangolState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MangolState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/mangol.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        controllers\n                                \n                                \n                                        cursor\n                                \n                                \n                                        featureinfo\n                                \n                                \n                                        layers\n                                \n                                \n                                        layertree\n                                \n                                \n                                        map\n                                \n                                \n                                        measure\n                                \n                                \n                                        print\n                                \n                                \n                                        sidebar\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     fromConfig.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromConfig.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controllers\n                                    \n                                \n                                \n                                    \n                                        controllers:     fromControllers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromControllers.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                    \n                                \n                                \n                                    \n                                        cursor:     fromCursor.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromCursor.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        featureinfo\n                                    \n                                \n                                \n                                    \n                                        featureinfo:     fromFeatureinfo.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromFeatureinfo.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     fromLayers.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromLayers.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layertree\n                                    \n                                \n                                \n                                    \n                                        layertree:     fromLayertree.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromLayertree.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     fromMap.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMap.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measure\n                                    \n                                \n                                \n                                    \n                                        measure:     fromMeasure.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMeasure.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        print\n                                    \n                                \n                                \n                                    \n                                        print:     fromPrint.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPrint.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sidebar\n                                    \n                                \n                                \n                                    \n                                        sidebar:     fromSidebar.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSidebar.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducer, ActionReducerMap } from '@ngrx/store';\n\nimport * as fromConfig from './config/config.reducers';\nimport * as fromControllers from './controllers/controllers.reducers';\nimport * as fromCursor from './cursor/cursor.reducers';\nimport * as fromFeatureinfo from './featureinfo/featureinfo.reducers';\nimport * as fromLayers from './layers/layers.reducers';\nimport * as fromLayertree from './layertree/layertree.reducers';\nimport * as MangolActions from './mangol.actions';\nimport * as fromMap from './map/map.reducers';\nimport * as fromMeasure from './measure/measure.reducers';\nimport * as fromPrint from './print/print.reducers';\nimport * as fromSidebar from './sidebar/sidebar.reducers';\n\nexport interface MangolState {\n  config: fromConfig.State;\n  controllers: fromControllers.State;\n  cursor: fromCursor.State;\n  featureinfo: fromFeatureinfo.State;\n  layers: fromLayers.State;\n  layertree: fromLayertree.State;\n  map: fromMap.State;\n  measure: fromMeasure.State;\n  print: fromPrint.State;\n  sidebar: fromSidebar.State;\n}\n\nexport const mangolReducers: ActionReducerMap = {\n  config: fromConfig.configReducer,\n  controllers: fromControllers.controllersReducer,\n  cursor: fromCursor.cursorReducer,\n  featureinfo: fromFeatureinfo.featureinfoReducer,\n  layers: fromLayers.layersReducer,\n  layertree: fromLayertree.layertreeReducer,\n  map: fromMap.mapReducer,\n  measure: fromMeasure.measureReducer,\n  print: fromPrint.printReducer,\n  sidebar: fromSidebar.sidebarReducer\n};\n\nexport function clearState(\n  reducer: ActionReducer\n): ActionReducer {\n  return function(\n    state: MangolState,\n    action: MangolActions.MangolActions\n  ): MangolState {\n    switch (action.type) {\n      case MangolActions.CLEAR_STATE:\n        state = undefined;\n        break;\n      default:\n        break;\n    }\n    return reducer(state, action);\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/map/map.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSubscription\n                            \n                            \n                                cursorModeSubscription\n                            \n                            \n                                cursorStyle\n                            \n                            \n                                defaultMap\n                            \n                            \n                                layersSubscription\n                            \n                            \n                                mapSubscription\n                            \n                            \n                                pointerMoveFunction\n                            \n                            \n                                position\n                            \n                            \n                                positionSubscription\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createPointerMoveFunction\n                            \n                            \n                                    Private\n                                _formatCoordinates\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEnterOrLeaveMap\n                            \n                            \n                                    Private\n                                processLayer\n                            \n                            \n                                    Private\n                                processLayerGroup\n                            \n                            \n                                    Private\n                                processLayersAndLayerGroups\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, mapService: MapService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/map/map.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ngrx store\n\n                                                        \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    MangolConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _createPointerMoveFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _createPointerMoveFunction(evt: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:186\n                            \n                        \n\n\n                \n                    \n                            Creates the pointermove event handler function\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _formatCoordinates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _formatCoordinates(coords: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:201\n                            \n                        \n\n\n                \n                    \n                            Formats a pair of coordinates bz a given precision\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEnterOrLeaveMap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEnterOrLeaveMap(entered: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entered\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processLayer(layer: MangolLayer, layers: MangolLayer[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:233\n                            \n                        \n\n\n                \n                    \n                            Processes MangolLayers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layer\n                                                        \n                                                                    MangolLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the MangolLayer object to process\n\n                                                        \n                                                \n                                                \n                                                        layers\n                                                        \n                                                                    MangolLayer[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the array of MangolLayers\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processLayerGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processLayerGroup(group: MangolLayerGroup, layers: MangolLayer[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:242\n                            \n                        \n\n\n                \n                    \n                            Processes MangolLayerGroups\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    MangolLayerGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the MangolLayerGroup object to process\n\n                                                        \n                                                \n                                                \n                                                        layers\n                                                        \n                                                                    MangolLayer[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the array of MangolLayers\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processLayersAndLayerGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processLayersAndLayerGroups(layers: (MangolLayer | MangolLayerGroup)[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:214\n                            \n                        \n\n\n                \n                    \n                            Iterates over the layers and layergroups to get the MangolLayer objects which can be added to the map\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layers\n                                                        \n                                                                    (MangolLayer | MangolLayerGroup)[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an array of MangolLayer or MangolLayerGroup objects\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MangolLayer[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cursorModeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cursorModeSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cursorStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cursorStyle:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultMap:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layersSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layersSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pointerMoveFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointerMoveFunction:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     MangolControllersPositionStateModel\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersPositionStateModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/map/map.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { MangolLayer } from '../../classes/Layer';\nimport { MangolLayerGroup } from '../../classes/LayerGroup';\nimport { MangolConfig } from '../../interfaces/config.interface';\nimport { MangolConfigMap } from './../../interfaces/config-map.interface';\nimport * as ControllersActions from './../../store/controllers/controllers.actions';\nimport { MangolControllersPositionStateModel } from './../../store/controllers/controllers.reducers';\nimport * as CursorActions from './../../store/cursor/cursor.actions';\nimport * as LayersActions from './../../store/layers/layers.actions';\nimport * as fromMangol from './../../store/mangol.reducers';\nimport * as MapActions from './../../store/map/map.actions';\nimport { MapService } from './map.service';\n\n@Component({\n  selector: 'mangol-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  config: MangolConfig;\n  target: string;\n\n  cursorStyle: any = null;\n\n  configSubscription: Subscription;\n  layersSubscription: Subscription;\n  cursorModeSubscription: Subscription;\n  mapSubscription: Subscription;\n  positionSubscription: Subscription;\n\n  pointerMoveFunction: any = null;\n  position: MangolControllersPositionStateModel = null;\n\n  defaultMap: {\n    target: string;\n    renderer: string;\n    layers: MangolLayer[];\n    view: View;\n  } = null;\n\n  /**\n   *\n   * @param store Ngrx store\n   * @param mapService\n   */\n  constructor(\n    private store: Store,\n    private mapService: MapService\n  ) {\n    this.defaultMap = this.mapService.getDefaultMap();\n  }\n\n  ngOnInit() {\n    // Finds the Map target if possible\n    this.target =\n      typeof this.config !== 'undefined' &&\n      this.config !== null &&\n      !!this.config.map &&\n      !!this.config.map.target\n        ? this.config.map.target\n        : this.defaultMap.target;\n  }\n\n  ngAfterViewInit() {\n    // React to config changes in the store\n    this.configSubscription = this.store\n      .select(state => state.config.config)\n      .subscribe((config: MangolConfig) => {\n        let view: View = null;\n        let layers: MangolLayer[] = null;\n        if (typeof config !== 'undefined' && config !== null && !!config.map) {\n          const configMap: MangolConfigMap = config.map;\n          if (!!configMap.view) {\n            view = configMap.view;\n          }\n          layers = !!configMap.layers\n            ? this.processLayersAndLayerGroups(configMap.layers)\n            : this.processLayersAndLayerGroups(this.defaultMap.layers);\n        } else {\n          layers = this.processLayersAndLayerGroups(this.defaultMap.layers);\n        }\n        // Create the map\n        this.store.dispatch(\n          new MapActions.AddMap(\n            new Map({\n              target: this.target,\n              renderer: this.defaultMap.renderer,\n              view: view !== null ? view : this.defaultMap.view,\n              layers: []\n            })\n          )\n        );\n        // Register the layers\n        this.store.dispatch(new LayersActions.AddLayers(layers));\n      });\n\n    // React to layer changes in the store\n    this.layersSubscription = this.store\n      .select(state => state.layers.layers)\n      .subscribe((layers: MangolLayer[]) => {\n        this.store\n          .select(state => state.map.map)\n          .pipe(take(1))\n          .subscribe(map => {\n            // Delete all previously loaded layers in the map\n            map.getLayers().forEach(l => {\n              map.removeLayer(l);\n            });\n            // Add all OL layers\n            layers.forEach(l => {\n              map.addLayer(l.layer);\n            });\n          });\n      });\n\n    this.cursorModeSubscription = this.store\n      .select(state => state.cursor.mode)\n      .subscribe(cursorMode => {\n        this.cursorStyle = {\n          cursor:\n            cursorMode !== null && cursorMode.hasOwnProperty('cursor')\n              ? cursorMode.cursor\n              : 'default'\n        };\n      });\n\n    this.mapSubscription = this.store\n      .select(state => state.map.map)\n      .pipe(filter(m => m !== null))\n      .subscribe(m => {\n        if (this.pointerMoveFunction !== null) {\n          m.un('pointermove', this.pointerMoveFunction);\n        }\n        this.pointerMoveFunction = evt => this._createPointerMoveFunction(evt);\n        m.on('pointermove', this.pointerMoveFunction);\n      });\n\n    this.positionSubscription = this.store\n      .select(state => state.controllers.position)\n      .subscribe(position => (this.position = position));\n  }\n\n  ngOnDestroy() {\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n    if (this.layersSubscription) {\n      this.layersSubscription.unsubscribe();\n    }\n    if (this.cursorModeSubscription) {\n      this.cursorModeSubscription.unsubscribe();\n    }\n    if (this.mapSubscription) {\n      this.mapSubscription.unsubscribe();\n    }\n    if (this.pointerMoveFunction !== null) {\n      this.store\n        .select(state => state.map.map)\n        .pipe(\n          filter(m => m !== null),\n          take(1)\n        )\n        .subscribe(m => {\n          m.un('pointermove', this.pointerMoveFunction);\n        });\n    }\n  }\n\n  /**\n   * Creates the pointermove event handler function\n   * @param evt\n   */\n  private _createPointerMoveFunction(evt) {\n    if (evt.dragging) {\n      return;\n    } else {\n      const coords = this._formatCoordinates(evt.coordinate);\n      this.store.dispatch(\n        new ControllersActions.SetPositionCoordinates(coords)\n      );\n    }\n  }\n\n  /**\n   * Formats a pair of coordinates bz a given precision\n   * @param coords\n   */\n  private _formatCoordinates(coords: any[]): number[] {\n    const formattedCoords: number[] = [];\n    coords.forEach((coord: any) => {\n      coord = parseFloat(coord).toFixed(this.position.precision);\n      formattedCoords.push(coord);\n    });\n    return formattedCoords;\n  }\n\n  /**\n   * Iterates over the layers and layergroups to get the MangolLayer objects which can be added to the map\n   * @param layers an array of MangolLayer or MangolLayerGroup objects\n   */\n  private processLayersAndLayerGroups(\n    layers: (MangolLayer | MangolLayerGroup)[]\n  ): MangolLayer[] {\n    const myLayers: MangolLayer[] = [];\n    layers.forEach(l => {\n      if (l instanceof MangolLayer) {\n        this.processLayer(l, myLayers);\n      } else if (l instanceof MangolLayerGroup) {\n        this.processLayerGroup(l, myLayers);\n      }\n    });\n    return myLayers;\n  }\n\n  /**\n   * Processes MangolLayers\n   * @param layer the MangolLayer object to process\n   * @param layers the array of MangolLayers\n   */\n  private processLayer(layer: MangolLayer, layers: MangolLayer[]) {\n    layers.push(layer);\n  }\n\n  /**\n   * Processes MangolLayerGroups\n   * @param group the MangolLayerGroup object to process\n   * @param layers the array of MangolLayers\n   */\n  private processLayerGroup(group: MangolLayerGroup, layers: MangolLayer[]) {\n    group.children.forEach((c: MangolLayer | MangolLayerGroup) => {\n      if (c instanceof MangolLayer) {\n        this.processLayer(c, layers);\n      } else if (c instanceof MangolLayerGroup) {\n        this.processLayerGroup(c, layers);\n      }\n    });\n  }\n\n  onEnterOrLeaveMap(entered: boolean) {\n    this.store.dispatch(new CursorActions.SetVisible(entered));\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MapComponent } from './map.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MapComponent],\n  exports: [MapComponent]\n})\nexport class MapModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/map/map.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDefaultMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/map/map.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDefaultMap\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDefaultMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/map/map.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     literal type\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport TileLayer from 'ol/layer/Tile';\nimport { fromLonLat } from 'ol/proj.js';\nimport OSM from 'ol/source/OSM';\nimport View from 'ol/View';\n\nimport { MangolLayer } from '../../classes/Layer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n  constructor() {}\n\n  getDefaultMap(): {\n    target: string;\n    renderer: string;\n    layers: MangolLayer[];\n    view: View;\n  } {\n    return {\n      target: 'my-map',\n      renderer: 'canvas',\n      layers: [\n        new MangolLayer({\n          name: 'OpenStreetMap Layer',\n          layer: new TileLayer({\n            source: new OSM()\n          })\n        })\n      ],\n      view: new View({\n        projection: 'EPSG:3857',\n        center: fromLonLat([19.3956393810065, 47.168464955013], 'EPSG:3857'),\n        zoom: 4,\n        enableRotation: true\n      })\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeasureComponent.html":{"url":"components/MeasureComponent.html","title":"component - MeasureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeasureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/measure/measure.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-measure\n            \n\n            \n                styleUrls\n                measure.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./measure.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary$\n                            \n                            \n                                map$\n                            \n                            \n                                measureConfig$\n                            \n                            \n                                measureConfigSubscription\n                            \n                            \n                                measureLayer$\n                            \n                            \n                                measureMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cleanUp\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, measureService: MeasureService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/measure/measure.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        measureService\n                                                  \n                                                        \n                                                                    MeasureService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _cleanUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _cleanUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dictionary$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dictionary$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureConfig$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureConfig$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureConfigSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureConfigSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureLayer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureLayer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureMode$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureMode$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\nimport Map from 'ol/Map';\nimport VectorSource from 'ol/source/Vector';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport * as LayerActions from '../../store/layers/layers.actions';\nimport * as fromMangol from '../../store/mangol.reducers';\nimport * as MeasureActions from '../../store/measure/measure.actions';\nimport {\n  MeasureDictionary,\n  MeasureMode\n} from '../../store/measure/measure.reducers';\nimport { MangolConfigMeasureItem } from './../../interfaces/config-toolbar.interface';\nimport * as CursorActions from './../../store/cursor/cursor.actions';\nimport { MeasureService } from './measure.service';\n\n@Component({\n  selector: 'mangol-measure',\n  templateUrl: './measure.component.html',\n  styleUrls: ['./measure.component.scss']\n})\nexport class MeasureComponent implements OnInit, OnDestroy {\n  dictionary$: Observable;\n  measureConfig$: Observable;\n  map$: Observable;\n  measureLayer$: Observable;\n  measureMode$: Observable;\n\n  measureConfigSubscription: Subscription;\n\n  constructor(\n    private store: Store,\n    private measureService: MeasureService\n  ) {\n    this.dictionary$ = this.store.select(state => state.measure.dictionary);\n    this.measureConfig$ = this.store.select(\n      state => state.config.config.sidebar.toolbar.measure\n    );\n    this.map$ = this.store\n      .select(state => state.map.map)\n      .pipe(filter(m => m !== null));\n    this.measureLayer$ = this.store\n      .select(state => state.layers.measureLayer)\n      .pipe(filter(measureLayer => measureLayer !== null));\n    this.measureMode$ = this.store.select(state => state.measure.mode);\n\n    this.measureConfigSubscription = this.measureConfig$.subscribe(config => {\n      if (config.hasOwnProperty('dictionary')) {\n        this.store.dispatch(\n          new MeasureActions.SetDictionary(config.dictionary)\n        );\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.map$.pipe(take(1)).subscribe(m => {\n      const layer = new VectorLayer({\n        source: new VectorSource(),\n        style: (feature: Feature) => this.measureService.getStyle(feature)\n      });\n      m.addLayer(layer);\n      this.store.dispatch(new LayerActions.SetMeasureLayer(layer));\n    });\n  }\n\n  ngOnDestroy() {\n    this._cleanUp();\n    if (this.measureConfigSubscription) {\n      this.measureConfigSubscription.unsubscribe();\n    }\n  }\n\n  private _cleanUp() {\n    combineLatest(this.map$, this.measureLayer$)\n      .pipe(take(1))\n      .subscribe(([m, measureLayer]) => {\n        this.store.dispatch(new LayerActions.SetMeasureLayer(null));\n        m.removeLayer(measureLayer);\n        this.store.dispatch(new CursorActions.ResetMode());\n      });\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeasureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeasureDictionary.html":{"url":"interfaces/MeasureDictionary.html","title":"interface - MeasureDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MeasureDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        angle\n                                \n                                \n                                            Optional\n                                        area\n                                \n                                \n                                            Optional\n                                        chooseMode\n                                \n                                \n                                            Optional\n                                        clearSelection\n                                \n                                \n                                            Optional\n                                        clickOnMap\n                                \n                                \n                                            Optional\n                                        closeSnackbar\n                                \n                                \n                                            Optional\n                                        distance\n                                \n                                \n                                            Optional\n                                        drawStartText\n                                \n                                \n                                            Optional\n                                        drawStartTextRadius\n                                \n                                \n                                            Optional\n                                        line\n                                \n                                \n                                            Optional\n                                        radius\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        angle\n                                    \n                                \n                                \n                                    \n                                        angle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                    \n                                \n                                \n                                    \n                                        area:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chooseMode\n                                    \n                                \n                                \n                                    \n                                        chooseMode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearSelection\n                                    \n                                \n                                \n                                    \n                                        clearSelection:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clickOnMap\n                                    \n                                \n                                \n                                    \n                                        clickOnMap:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closeSnackbar\n                                    \n                                \n                                \n                                    \n                                        closeSnackbar:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        drawStartText\n                                    \n                                \n                                \n                                    \n                                        drawStartText:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        drawStartTextRadius\n                                    \n                                \n                                \n                                    \n                                        drawStartTextRadius:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                    \n                                \n                                \n                                    \n                                        line:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        radius\n                                    \n                                \n                                \n                                    \n                                        radius:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import GeometryType from 'ol/geom/GeometryType';\n\nimport * as MeasureActions from './measure.actions';\n\nexport interface MeasureMode {\n  type: string;\n  fontIcon: string;\n  fontSet: string;\n  geometryName: GeometryType;\n}\n\nexport interface MeasureDictionary {\n  clearSelection?: string;\n  chooseMode?: string;\n  clickOnMap?: string;\n  closeSnackbar?: string;\n  line?: string;\n  area?: string;\n  radius?: string;\n  distance?: string;\n  angle?: string;\n  drawStartText?: string;\n  drawStartTextRadius?: string;\n}\nexport interface State {\n  hasMeasure: boolean;\n  disabled: boolean;\n  title: string;\n  modes: MeasureMode[];\n  mode: MeasureMode;\n  dictionary: MeasureDictionary;\n}\n\nconst initialState: State = {\n  hasMeasure: false,\n  disabled: false,\n  title: 'Measure',\n  modes: [\n    {\n      type: 'line',\n      fontSet: 'ms',\n      fontIcon: 'ms-measure-distance',\n      geometryName: 'LineString'\n    },\n    {\n      type: 'area',\n      fontSet: 'ms',\n      fontIcon: 'ms-measure-area',\n      geometryName: 'Polygon'\n    },\n    {\n      type: 'radius',\n      fontSet: 'ms',\n      fontIcon: 'ms-geolocation',\n      geometryName: 'Circle'\n    }\n  ],\n  mode: null,\n  dictionary: {\n    clearSelection: 'Clear selection',\n    chooseMode: 'Choose measure mode...',\n    clickOnMap: 'Click on Map to start measurement',\n    closeSnackbar: 'Close',\n    line: 'Line',\n    area: 'Area',\n    radius: 'Radius',\n    distance: 'Distance',\n    angle: 'angle',\n    drawStartText:\n      'Insert new vertex with single click,\\nfinish measurement with double click',\n    drawStartTextRadius: 'Finish measurement with single click'\n  }\n};\n\nexport function measureReducer(\n  state = initialState,\n  action: MeasureActions.MeasureActions\n) {\n  switch (action.type) {\n    case MeasureActions.HAS_MEASURE:\n      return { ...state, hasMeasure: action.payload };\n    case MeasureActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case MeasureActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case MeasureActions.SET_DICTIONARY:\n      const dict = { ...state.dictionary };\n      for (const key in action.payload) {\n        if (action.payload.hasOwnProperty(key)) {\n          dict[key] = action.payload[key];\n        }\n      }\n      return { ...state, dictionary: dict };\n    case MeasureActions.SET_MODE:\n      return { ...state, mode: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeasureMode.html":{"url":"interfaces/MeasureMode.html","title":"interface - MeasureMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MeasureMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fontIcon\n                                \n                                \n                                        fontSet\n                                \n                                \n                                        geometryName\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fontIcon\n                                    \n                                \n                                \n                                    \n                                        fontIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSet\n                                    \n                                \n                                \n                                    \n                                        fontSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometryName\n                                    \n                                \n                                \n                                    \n                                        geometryName:     GeometryType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GeometryType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import GeometryType from 'ol/geom/GeometryType';\n\nimport * as MeasureActions from './measure.actions';\n\nexport interface MeasureMode {\n  type: string;\n  fontIcon: string;\n  fontSet: string;\n  geometryName: GeometryType;\n}\n\nexport interface MeasureDictionary {\n  clearSelection?: string;\n  chooseMode?: string;\n  clickOnMap?: string;\n  closeSnackbar?: string;\n  line?: string;\n  area?: string;\n  radius?: string;\n  distance?: string;\n  angle?: string;\n  drawStartText?: string;\n  drawStartTextRadius?: string;\n}\nexport interface State {\n  hasMeasure: boolean;\n  disabled: boolean;\n  title: string;\n  modes: MeasureMode[];\n  mode: MeasureMode;\n  dictionary: MeasureDictionary;\n}\n\nconst initialState: State = {\n  hasMeasure: false,\n  disabled: false,\n  title: 'Measure',\n  modes: [\n    {\n      type: 'line',\n      fontSet: 'ms',\n      fontIcon: 'ms-measure-distance',\n      geometryName: 'LineString'\n    },\n    {\n      type: 'area',\n      fontSet: 'ms',\n      fontIcon: 'ms-measure-area',\n      geometryName: 'Polygon'\n    },\n    {\n      type: 'radius',\n      fontSet: 'ms',\n      fontIcon: 'ms-geolocation',\n      geometryName: 'Circle'\n    }\n  ],\n  mode: null,\n  dictionary: {\n    clearSelection: 'Clear selection',\n    chooseMode: 'Choose measure mode...',\n    clickOnMap: 'Click on Map to start measurement',\n    closeSnackbar: 'Close',\n    line: 'Line',\n    area: 'Area',\n    radius: 'Radius',\n    distance: 'Distance',\n    angle: 'angle',\n    drawStartText:\n      'Insert new vertex with single click,\\nfinish measurement with double click',\n    drawStartTextRadius: 'Finish measurement with single click'\n  }\n};\n\nexport function measureReducer(\n  state = initialState,\n  action: MeasureActions.MeasureActions\n) {\n  switch (action.type) {\n    case MeasureActions.HAS_MEASURE:\n      return { ...state, hasMeasure: action.payload };\n    case MeasureActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case MeasureActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case MeasureActions.SET_DICTIONARY:\n      const dict = { ...state.dictionary };\n      for (const key in action.payload) {\n        if (action.payload.hasOwnProperty(key)) {\n          dict[key] = action.payload[key];\n        }\n      }\n      return { ...state, dictionary: dict };\n    case MeasureActions.SET_MODE:\n      return { ...state, mode: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeasureModule.html":{"url":"modules/MeasureModule.html","title":"module - MeasureModule","body":"\n                   \n\n\n\n\n  Modules\n  MeasureModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MeasureModule\n\n\n\ncluster_MeasureModule_declarations\n\n\n\ncluster_MeasureModule_exports\n\n\n\n\nMeasureComponent\n\nMeasureComponent\n\n\n\nMeasureModule\n\nMeasureModule\n\nMeasureModule -->\n\nMeasureComponent->MeasureModule\n\n\n\n\n\nMeasureResultsComponent\n\nMeasureResultsComponent\n\nMeasureModule -->\n\nMeasureResultsComponent->MeasureModule\n\n\n\n\n\nMeasureSelectComponent\n\nMeasureSelectComponent\n\nMeasureModule -->\n\nMeasureSelectComponent->MeasureModule\n\n\n\n\n\nMeasureComponent \n\nMeasureComponent \n\nMeasureComponent  -->\n\nMeasureModule->MeasureComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/measure/measure.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MeasureComponent\n                            \n                            \n                                MeasureResultsComponent\n                            \n                            \n                                MeasureSelectComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MeasureComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { MeasureSelectComponent } from './components/measure-select/measure-select.component';\nimport { MeasureComponent } from './measure.component';\nimport { MeasureResultsComponent } from './components/measure-results/measure-results.component';\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule, MatDividerModule, MatIconModule],\n  declarations: [MeasureComponent, MeasureSelectComponent, MeasureResultsComponent],\n  exports: [MeasureComponent]\n})\nexport class MeasureModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeasureResultsComponent.html":{"url":"components/MeasureResultsComponent.html","title":"component - MeasureResultsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeasureResultsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/measure/components/measure-results/measure-results.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-measure-results\n            \n\n            \n                styleUrls\n                measure-results.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./measure-results.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combinedSubscription\n                            \n                            \n                                cursorText$\n                            \n                            \n                                displayValue\n                            \n                            \n                                draw\n                            \n                            \n                                initialText\n                            \n                            \n                                layer$\n                            \n                            \n                                map$\n                            \n                            \n                                measureMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _activateDraw\n                            \n                            \n                                    Private\n                                _deactivateDraw\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, measureService: MeasureService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        measureService\n                                                  \n                                                        \n                                                                    MeasureService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dictionary\n                    \n                    \n                            \n                            Type :    MeasureDictionary\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _activateDraw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _activateDraw(map: Map, layer: VectorLayer, mode: MeasureMode)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        layer\n                                                        \n                                                                    VectorLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    MeasureMode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _deactivateDraw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _deactivateDraw(map: Map, layer: VectorLayer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        layer\n                                                        \n                                                                    VectorLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        combinedSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cursorText$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cursorText$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayValue:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            draw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        draw:     Draw\n\n                    \n                \n                    \n                        \n                            Type :     Draw\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layer$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureMode$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureMode$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-results/measure-results.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MeasureDictionary } from './../../../../store/measure/measure.reducers';\nimport VectorLayer from 'ol/layer/Vector';\nimport { filter, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport Map from 'ol/Map';\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport Feature from 'ol/Feature';\nimport Circle from 'ol/geom/Circle';\nimport LineString from 'ol/geom/LineString';\nimport Polygon from 'ol/geom/Polygon';\nimport Draw from 'ol/interaction/Draw';\n\nimport * as fromMangol from '../../../../store/mangol.reducers';\nimport { MeasureMode } from '../../../../store/measure/measure.reducers';\nimport { MeasureService } from '../../measure.service';\nimport * as CursorActions from '../../../../store/cursor/cursor.actions';\n\n@Component({\n  selector: 'mangol-measure-results',\n  templateUrl: './measure-results.component.html',\n  styleUrls: ['./measure-results.component.scss']\n})\nexport class MeasureResultsComponent implements OnInit, OnDestroy {\n  @Input()\n  dictionary: MeasureDictionary;\n  map$: Observable;\n  layer$: Observable;\n  measureMode$: Observable;\n  cursorText$: Observable;\n\n  combinedSubscription: Subscription;\n\n  draw: Draw = null;\n  initialText: string = null;\n  displayValue: string = null;\n\n  constructor(\n    private store: Store,\n    private measureService: MeasureService\n  ) {\n    this.map$ = this.store\n      .select(state => state.map.map)\n      .pipe(filter(m => m !== null));\n    this.layer$ = this.store\n      .select(state => state.layers.measureLayer)\n      .pipe(filter(l => l !== null));\n    this.measureMode$ = this.store\n      .select(state => state.measure.mode)\n      .pipe(filter(mode => mode !== null));\n    this.cursorText$ = this.store.select(state => state.cursor.mode.text);\n  }\n\n  ngOnInit() {\n    this.combinedSubscription = combineLatest(\n      this.map$,\n      this.layer$,\n      this.measureMode$\n    ).subscribe(([m, layer, mode]) => {\n      const mapLayers = m.getLayers().getArray();\n      let maxZIndex = mapLayers.length - 1;\n      m.getLayers()\n        .getArray()\n        .forEach(l => {\n          if (l !== layer) {\n            maxZIndex = l.getZIndex() > maxZIndex ? l.getZIndex() : maxZIndex;\n          }\n        });\n      layer.setZIndex(maxZIndex + 1);\n      layer.getSource().clear();\n      this._activateDraw(m, layer, mode);\n    });\n  }\n\n  ngOnDestroy() {\n    combineLatest(this.map$, this.layer$)\n      .pipe(take(1))\n      .subscribe(([m, layer]) => {\n        this._deactivateDraw(m, layer);\n      });\n    this.store.dispatch(new CursorActions.ResetMode());\n    if (this.combinedSubscription) {\n      this.combinedSubscription.unsubscribe();\n    }\n  }\n\n  private _activateDraw(map: Map, layer: VectorLayer, mode: MeasureMode) {\n    this._deactivateDraw(map, layer);\n    map.addLayer(layer);\n    this.draw = new Draw({\n      source: layer.getSource(),\n      style: (feature: Feature) => this.measureService.getStyle(feature),\n      type: mode.geometryName\n    });\n    this.initialText =\n      (mode.type === 'radius'\n        ? this.dictionary.drawStartTextRadius\n        : this.dictionary.drawStartText) + '.';\n    this.store.dispatch(\n      new CursorActions.SetMode({\n        text: this.initialText,\n        cursor: 'crosshair'\n      })\n    );\n    this.displayValue = this.initialText;\n    this.draw.on('drawstart', (e: any) => {\n      layer.getSource().clear();\n      this.store.dispatch(\n        new CursorActions.SetMode({\n          text: this.initialText,\n          cursor: 'crosshair'\n        })\n      );\n      this.displayValue = null;\n      const feature: Feature = e.feature;\n      feature.on('change', (evt: any) => {\n        const feat: Feature = evt.target;\n        let displayValue: string = null;\n        switch (mode.type) {\n          case 'line':\n            const lineString = feat.getGeometry();\n            displayValue = `${\n              this.dictionary.distance\n            }: ${this.measureService.exchangeMetersAndKilometers(\n              lineString.getLength()\n            )}.`;\n            break;\n          case 'area':\n            const polygon = feat.getGeometry();\n            displayValue = `${\n              this.dictionary.area\n            }: ${this.measureService.exchangeSqmetersAndSqkilometers(\n              polygon.getArea()\n            )}.`;\n            break;\n          case 'radius':\n            const circle = feat.getGeometry();\n            this.store\n              .select(state => state.controllers.position.coordinates)\n              .pipe(take(1))\n              .subscribe(position => {\n                const center = circle.getCenter();\n                const dx = position[0] - center[0];\n                const dy = position[1] - center[1];\n                // range (-PI, PI]\n                let angle = Math.atan2(dy, dx);\n                // rads to degs, range (-180, 180]\n                angle *= 180 / Math.PI;\n                // [0, 360]; clockwise; 0° = east\n                angle = angle  {\n      e.feature.setProperties({ text: this.displayValue });\n      this.store.dispatch(\n        new CursorActions.SetMode({\n          text: this.dictionary.clickOnMap,\n          cursor: 'crosshair'\n        })\n      );\n    });\n\n    this.draw.setActive(true);\n    map.addInteraction(this.draw);\n    this.store.dispatch(\n      new CursorActions.SetMode({\n        text: this.dictionary.clickOnMap,\n        cursor: 'crosshair'\n      })\n    );\n    this.displayValue = this.dictionary.clickOnMap;\n  }\n\n  private _deactivateDraw(map: Map, layer: VectorLayer) {\n    this.displayValue = null;\n    try {\n      map.removeLayer(layer);\n      map.removeInteraction(this.draw);\n    } catch (error) {}\n  }\n}\n\n    \n\n    \n        \n    \n    {{displayValue}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{displayValue}}'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeasureResultsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeasureSelectComponent.html":{"url":"components/MeasureSelectComponent.html","title":"component - MeasureSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeasureSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/measure/components/measure-select/measure-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-measure-select\n            \n\n            \n                styleUrls\n                measure-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./measure-select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modes$\n                            \n                            \n                                selectedMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectionChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dictionary\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/measure/components/measure-select/measure-select.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dictionary\n                    \n                    \n                            \n                            Type :    MeasureDictionary\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-select/measure-select.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-select/measure-select.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelectionChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSelectionChanged(evt: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-select/measure-select.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modes$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modes$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-select/measure-select.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMode$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedMode$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/measure/components/measure-select/measure-select.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Store } from '@ngrx/store';\nimport { Component, OnInit, Input } from '@angular/core';\nimport {\n  MeasureDictionary,\n  MeasureMode\n} from '../../../../store/measure/measure.reducers';\nimport { Observable } from 'rxjs';\nimport * as fromMangol from '../../../../store/mangol.reducers';\nimport { MatSelectChange } from '@angular/material';\nimport * as MeasureActions from '../../../../store/measure/measure.actions';\n\n@Component({\n  selector: 'mangol-measure-select',\n  templateUrl: './measure-select.component.html',\n  styleUrls: ['./measure-select.component.scss']\n})\nexport class MeasureSelectComponent implements OnInit {\n  @Input()\n  dictionary: MeasureDictionary;\n\n  modes$: Observable;\n  selectedMode$: Observable;\n\n  constructor(private store: Store) {\n    this.modes$ = this.store.select(state => state.measure.modes);\n    this.selectedMode$ = this.store.select(state => state.measure.mode);\n  }\n\n  ngOnInit() {}\n\n  onSelectionChanged(evt: MatSelectChange) {\n    if (typeof evt.value === 'undefined') {\n      this.store.dispatch(new MeasureActions.SetMode(null));\n    } else {\n      const mode: MeasureMode = evt.value;\n      this.store.dispatch(new MeasureActions.SetMode(mode));\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        clear\n        {{dictionary.clearSelection}}\n    \n    \n    \n        \n        {{dictionary[mode.type]}}\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear        {{dictionary.clearSelection}}                            {{dictionary[mode.type]}}    '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeasureSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeasureService.html":{"url":"injectables/MeasureService.html","title":"injectable - MeasureService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeasureService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/measure/measure.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exchangeMetersAndKilometers\n                            \n                            \n                                exchangeSqmetersAndSqkilometers\n                            \n                            \n                                getStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/measure/measure.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exchangeMetersAndKilometers\n                            \n                            \n                        \n                    \n                \n                \n                    \nexchangeMetersAndKilometers(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exchangeSqmetersAndSqkilometers\n                            \n                            \n                        \n                    \n                \n                \n                    \nexchangeSqmetersAndSqkilometers(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStyle(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/measure/measure.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Style[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Feature from 'ol/Feature';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport CircleStyle from 'ol/style/Circle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeasureService {\n  constructor() {}\n\n  exchangeMetersAndKilometers(value: number): string {\n    return value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OlxLayerLayerOptions.html":{"url":"interfaces/OlxLayerLayerOptions.html","title":"interface - OlxLayerLayerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OlxLayerLayerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/interfaces/config-layers.inteface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        extent\n                                \n                                \n                                            Optional\n                                        maxResolution\n                                \n                                \n                                            Optional\n                                        minResolution\n                                \n                                \n                                            Optional\n                                        opacity\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                                \n                                            Optional\n                                        zIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        extent\n                                    \n                                \n                                \n                                    \n                                        extent:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxResolution\n                                    \n                                \n                                \n                                    \n                                        maxResolution:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minResolution\n                                    \n                                \n                                \n                                    \n                                        minResolution:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                    \n                                \n                                \n                                    \n                                        opacity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     Source\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Source\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zIndex\n                                    \n                                \n                                \n                                    \n                                        zIndex:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Layer from 'ol/layer/Layer';\nimport Source from 'ol/source/Source';\n\nimport { MangolLayer } from '../classes/Layer';\nimport { MangolLayerGroup } from './../classes/LayerGroup';\n\nexport interface MangolConfigLayerColumn {\n  name: string;\n  label?: string;\n}\n\nexport interface MangolConfigLayer {\n  name: string;\n  layer: any;\n  visible?: boolean;\n  opacity?: number;\n  description?: string;\n  queryable?: boolean;\n  attrColumns?: MangolConfigLayerColumn[];\n}\n\nexport interface MangolConfigLayerGroup {\n  name: string;\n  description?: string;\n  children: MangolConfigLayertree;\n}\n\nexport interface MangolConfigLayertree {\n  layers?: MangolConfigLayer[];\n  groups?: MangolConfigLayerGroup[];\n}\n\nexport interface OlxLayerLayerOptions {\n  opacity?: number;\n  source?: Source;\n  visible?: boolean;\n  extent?: [number, number, number, number];\n  zIndex?: number;\n  minResolution?: number;\n  maxResolution?: number;\n}\n\nexport interface MangolLayerOptions extends OlxLayerLayerOptions {\n  name: string;\n  layer: Layer;\n  details?: string;\n  queryable?: boolean;\n  querySrs?: string;\n  queryIdProperty?: string;\n  queryColumns?: string[];\n}\n\nexport interface MangolLayerGroupOptions {\n  name: string;\n  details?: string;\n  children: (MangolLayer | MangolLayerGroup)[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PositionComponent.html":{"url":"components/PositionComponent.html","title":"component - PositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/position/position.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-position\n            \n\n            \n                styleUrls\n                position.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./position.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                copyIconId\n                            \n                            \n                                mapSubscription\n                            \n                            \n                                pointerMoveFunction\n                            \n                            \n                                position\n                            \n                            \n                                positionSubscription\n                            \n                            \n                                showCopyIcon\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyCoordinatesToClipboard\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/position/position.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyCoordinatesToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyCoordinatesToClipboard()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyIconId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        copyIconId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'mangol-mouse-position-text'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pointerMoveFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pointerMoveFunction:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     MangolControllersPositionStateModel\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersPositionStateModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCopyIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showCopyIcon:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/position/position.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\nimport { shownStateTrigger } from '../controllers.animations';\nimport { MangolControllersPositionStateModel } from './../../../store/controllers/controllers.reducers';\nimport * as fromMangol from './../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-position',\n  templateUrl: './position.component.html',\n  styleUrls: ['./position.component.scss'],\n  animations: [shownStateTrigger]\n})\nexport class PositionComponent implements OnInit, OnDestroy {\n  position: MangolControllersPositionStateModel = null;\n\n  pointerMoveFunction: any = null;\n  mapSubscription: Subscription;\n\n  showCopyIcon = false;\n  copyIconId = 'mangol-mouse-position-text';\n\n  positionSubscription: Subscription;\n\n  constructor(\n    private store: Store,\n    public snackBar: MatSnackBar\n  ) {\n    this.positionSubscription = this.store\n      .select(state => state.controllers.position)\n      .subscribe(position => (this.position = position));\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this.positionSubscription) {\n      this.positionSubscription.unsubscribe();\n    }\n  }\n\n  copyCoordinatesToClipboard() {\n    const range = document.createRange();\n    const element = document.getElementById(this.copyIconId);\n    range.selectNode(element);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges();\n    this.snackBar.open(\n      `${this.position.dictionary.textCopied}: ${element.textContent.trim()}`,\n      this.position.dictionary.closeSnackbar,\n      {\n        duration: 2000,\n        panelClass: 'mangol-snackbar'\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        \n          {{position.coordinates.join(', ')}}\n        \n        file_copy\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{position.coordinates.join(\\', \\')}}                file_copy    '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrintComponent.html":{"url":"components/PrintComponent.html","title":"component - PrintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/print/print.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-print\n            \n\n            \n                styleUrls\n                print.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./print.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/print/print.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/print/print.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mangol-print',\n  templateUrl: './print.component.html',\n  styleUrls: ['./print.component.scss']\n})\nexport class PrintComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  print works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  print works!'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrintModule.html":{"url":"modules/PrintModule.html","title":"module - PrintModule","body":"\n                   \n\n\n\n\n  Modules\n  PrintModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrintModule\n\n\n\ncluster_PrintModule_declarations\n\n\n\ncluster_PrintModule_exports\n\n\n\n\nPrintComponent\n\nPrintComponent\n\n\n\nPrintModule\n\nPrintModule\n\nPrintModule -->\n\nPrintComponent->PrintModule\n\n\n\n\n\nPrintComponent \n\nPrintComponent \n\nPrintComponent  -->\n\nPrintModule->PrintComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/print/print.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PrintComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PrintComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PrintComponent } from './print.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PrintComponent],\n  exports: [PrintComponent]\n})\nexport class PrintModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetMode.html":{"url":"classes/ResetMode.html","title":"class - ResetMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/cursor/cursor.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/cursor/cursor.actions.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_MODE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { CursorMode } from './../../interfaces/cursor-mode';\n\nexport const SET_MODE = '[Cursor] Set Mode';\nexport const RESET_MODE = '[Cursor] Reset Mode';\nexport const SET_VISIBLE = '[Cursor] Set Visible';\nexport const SET_LAYER = '[Cursor] Set Layer';\n\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: CursorMode) {}\n}\nexport class ResetMode implements Action {\n  readonly type = RESET_MODE;\n  constructor() {}\n}\nexport class SetVisible implements Action {\n  readonly type = SET_VISIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetLayer implements Action {\n  readonly type = SET_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\n\nexport type CursorActions = SetMode | ResetMode | SetVisible | SetLayer;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationButtonComponent.html":{"url":"components/RotationButtonComponent.html","title":"component - RotationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RotationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/rotation-button/rotation-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-rotation-button\n            \n\n            \n                styleUrls\n                rotation-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationDuration\n                            \n                            \n                                mapSubscription\n                            \n                            \n                                rotation$\n                            \n                            \n                                rotationFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _createRotationFunction\n                            \n                            \n                                getRotationStyle\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                rotateNorth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _createRotationFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _createRotationFunction(evt: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRotationStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRotationStyle(rotation: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rotation\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { transform: string; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotateNorth\n                            \n                            \n                        \n                    \n                \n                \n                    \nrotateNorth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animationDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationDuration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotation$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotation$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rotationFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotationFunction:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/rotation-button/rotation-button.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport View from 'ol/View';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { shownStateTrigger } from '../controllers.animations';\nimport * as ControllersActions from './../../../store/controllers/controllers.actions';\nimport { MangolControllersRotationStateModel } from './../../../store/controllers/controllers.reducers';\nimport * as fromMangol from './../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-rotation-button',\n  templateUrl: './rotation-button.component.html',\n  styleUrls: ['./rotation-button.component.scss'],\n  animations: [shownStateTrigger]\n})\nexport class RotationButtonComponent implements OnInit, OnDestroy {\n  rotation$: Observable;\n  rotationFunction: any = null;\n  animationDuration = 500;\n\n  mapSubscription: Subscription;\n\n  constructor(private store: Store) {\n    this.rotation$ = this.store.select(state => state.controllers.rotation);\n\n    this.mapSubscription = this.store\n      .select(state => state.map.map)\n      .pipe(filter(m => m !== null))\n      .subscribe(m => {\n        const view = m.getView();\n        this.store.dispatch(\n          new ControllersActions.SetRotationValue(view.getRotation())\n        );\n        if (this.rotationFunction !== null) {\n          view.un('change:rotation', this.rotationFunction);\n        }\n        this.rotationFunction = evt => this._createRotationFunction(evt);\n        view.on('change:rotation', this.rotationFunction);\n      });\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this.mapSubscription) {\n      this.mapSubscription.unsubscribe();\n    }\n    this.store\n      .select(state => state.map.map)\n      .pipe(\n        filter(m => m !== null),\n        take(1)\n      )\n      .subscribe(m => {\n        m.getView().un('change:rotation', this.rotationFunction);\n      });\n  }\n\n  rotateNorth() {\n    this.store\n      .select(state => state.map.map)\n      .pipe(\n        filter(m => m !== null),\n        take(1)\n      )\n      .subscribe(m => {\n        const view = m.getView();\n        if (view.getRotation() !== 0) {\n          view.animate({ rotation: 0, duration: this.animationDuration });\n          setTimeout(() => {\n            view.setRotation(0);\n          }, this.animationDuration + 1);\n        }\n      });\n  }\n\n  getRotationStyle(rotation: number) {\n    return { transform: `rotate(${rotation}rad)` };\n  }\n\n  private _createRotationFunction(evt) {\n    const targetView = evt.target;\n    this.store.dispatch(\n      new ControllersActions.SetRotationValue(targetView.getRotation())\n    );\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScalebarComponent.html":{"url":"components/ScalebarComponent.html","title":"component - ScalebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScalebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/scalebar/scalebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-scalebar\n            \n\n            \n                styleUrls\n                scalebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scalebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                            \n                                mapSubscription\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mapSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/scalebar/scalebar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { filter, take } from 'rxjs/operators';\nimport { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromMangol from './../../../store/mangol.reducers';\nimport ScaleLine from 'ol/control/ScaleLine';\nimport Map from 'ol/Map';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mangol-scalebar',\n  templateUrl: './scalebar.component.html',\n  styleUrls: ['./scalebar.component.scss']\n})\nexport class ScalebarComponent implements OnInit, AfterViewInit, OnDestroy {\n  target: string = null;\n\n  map: Map = null;\n\n  mapSubscription: Subscription;\n\n  constructor(private store: Store) {}\n\n  ngOnInit() {\n    this.store\n      .select(state => state.map.map)\n      .pipe(\n        filter(m => m !== null),\n        take(1)\n      )\n      .subscribe(m => {\n        this.map = m;\n        this.target = `${this.map.getTarget()}-scale-line`;\n      });\n  }\n\n  ngAfterViewInit() {\n    const scaleLineControl = new ScaleLine({\n      target: document.getElementById(this.target),\n      units: 'metric'\n    });\n    setTimeout(() => {\n      this.map.addControl(scaleLineControl);\n    }, 0);\n  }\n\n  ngOnDestroy() {\n    if (this.mapSubscription) {\n      this.mapSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScalebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCollapsible.html":{"url":"classes/SetCollapsible.html","title":"class - SetCollapsible","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCollapsible\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_COLLAPSIBLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetConfig.html":{"url":"classes/SetConfig.html","title":"class - SetConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/config/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolConfig)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/config/config.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolConfig\n\n                    \n                \n                    \n                        \n                            Type :     MangolConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/config/config.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_CONFIG\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/config/config.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { MangolConfig } from '../../interfaces/config.interface';\n\nexport const SET_CONFIG = '[Config] Set Config';\n\nexport class SetConfig implements Action {\n  readonly type = SET_CONFIG;\n  constructor(public payload: MangolConfig) {}\n}\n\nexport type ConfigActions = SetConfig;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDictionary.html":{"url":"classes/SetDictionary.html","title":"class - SetDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: FeatureinfoDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    FeatureinfoDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     FeatureinfoDictionary\n\n                    \n                \n                    \n                        \n                            Type :     FeatureinfoDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDictionary-1.html":{"url":"classes/SetDictionary-1.html","title":"class - SetDictionary-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: LayertreeDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layertree/layertree.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    LayertreeDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     LayertreeDictionary\n\n                    \n                \n                    \n                        \n                            Type :     LayertreeDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { LayertreeDictionary } from './layertree.reducers';\n\nexport const HAS_LAYERTREE = '[Layertree] Has Layertree';\nexport const SET_DISABLED = '[Layertree] Set Disabled';\nexport const SET_TITLE = '[Layertree] Set Title';\nexport const SET_DICTIONARY = '[Layertree] Set Dictionary';\nexport const SHOW_LAYERGROUP_BADGES = '[Layertree] Show Layergroup Badges';\n\nexport class HasLayertree implements Action {\n  readonly type = HAS_LAYERTREE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: LayertreeDictionary) {}\n}\nexport class ShowLayergroupBadges implements Action {\n  readonly type = SHOW_LAYERGROUP_BADGES;\n  constructor(public payload: boolean) {}\n}\n\nexport type LayertreeActions =\n  | HasLayertree\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | ShowLayergroupBadges;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDictionary-2.html":{"url":"classes/SetDictionary-2.html","title":"class - SetDictionary-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MeasureDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/measure/measure.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MeasureDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MeasureDictionary\n\n                    \n                \n                    \n                        \n                            Type :     MeasureDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeasureDictionary, MeasureMode } from './measure.reducers';\nimport { Action } from '@ngrx/store';\n\nexport const HAS_MEASURE = '[Measure] Has Measure';\nexport const SET_DISABLED = '[Measure] Set Disabled';\nexport const SET_TITLE = '[Measure] Set Title';\nexport const SET_DICTIONARY = '[Measure] Set Dictionary';\nexport const SET_MODE = '[Measure] Set Mode';\n\nexport class HasMeasure implements Action {\n  readonly type = HAS_MEASURE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: MeasureDictionary) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: MeasureMode) {}\n}\n\nexport type MeasureActions =\n  | HasMeasure\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | SetMode;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDisabled.html":{"url":"classes/SetDisabled.html","title":"class - SetDisabled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDisabled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DISABLED\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDisabled-1.html":{"url":"classes/SetDisabled-1.html","title":"class - SetDisabled-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDisabled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layertree/layertree.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DISABLED\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { LayertreeDictionary } from './layertree.reducers';\n\nexport const HAS_LAYERTREE = '[Layertree] Has Layertree';\nexport const SET_DISABLED = '[Layertree] Set Disabled';\nexport const SET_TITLE = '[Layertree] Set Title';\nexport const SET_DICTIONARY = '[Layertree] Set Dictionary';\nexport const SHOW_LAYERGROUP_BADGES = '[Layertree] Show Layergroup Badges';\n\nexport class HasLayertree implements Action {\n  readonly type = HAS_LAYERTREE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: LayertreeDictionary) {}\n}\nexport class ShowLayergroupBadges implements Action {\n  readonly type = SHOW_LAYERGROUP_BADGES;\n  constructor(public payload: boolean) {}\n}\n\nexport type LayertreeActions =\n  | HasLayertree\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | ShowLayergroupBadges;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDisabled-2.html":{"url":"classes/SetDisabled-2.html","title":"class - SetDisabled-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDisabled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/measure/measure.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DISABLED\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeasureDictionary, MeasureMode } from './measure.reducers';\nimport { Action } from '@ngrx/store';\n\nexport const HAS_MEASURE = '[Measure] Has Measure';\nexport const SET_DISABLED = '[Measure] Set Disabled';\nexport const SET_TITLE = '[Measure] Set Title';\nexport const SET_DICTIONARY = '[Measure] Set Dictionary';\nexport const SET_MODE = '[Measure] Set Mode';\n\nexport class HasMeasure implements Action {\n  readonly type = HAS_MEASURE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: MeasureDictionary) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: MeasureMode) {}\n}\n\nexport type MeasureActions =\n  | HasMeasure\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | SetMode;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDisabled-3.html":{"url":"classes/SetDisabled-3.html","title":"class - SetDisabled-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDisabled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/print/print.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/print/print.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/print/print.actions.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_DISABLED\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/print/print.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const HAS_PRINT = '[Print] Has Print ';\nexport const SET_DISABLED = '[Print] Set Disabled';\nexport const SET_TITLE = '[Print] Set Title';\n\nexport class HasPrint implements Action {\n  readonly type = HAS_PRINT;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\n\nexport type PrintActions = HasPrint | SetDisabled | SetTitle;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetFullscreenDictionary.html":{"url":"classes/SetFullscreenDictionary.html","title":"class - SetFullscreenDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetFullscreenDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolControllersFullScreenDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolControllersFullScreenDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolControllersFullScreenDictionary\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersFullScreenDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_FULLSCREEN_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetHasSidebar.html":{"url":"classes/SetHasSidebar.html","title":"class - SetHasSidebar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetHasSidebar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_HAS_SIDEBAR\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetHoverColor.html":{"url":"classes/SetHoverColor.html","title":"class - SetHoverColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetHoverColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: [number, number, number])\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    [number, number, number]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     [number, number, number]\n\n                    \n                \n                    \n                        \n                            Type :     [number, number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_HOVER_COLOR\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLayer.html":{"url":"classes/SetLayer.html","title":"class - SetLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/cursor/cursor.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: VectorLayer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/cursor/cursor.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    VectorLayer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     VectorLayer\n\n                    \n                \n                    \n                        \n                            Type :     VectorLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAYER\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { CursorMode } from './../../interfaces/cursor-mode';\n\nexport const SET_MODE = '[Cursor] Set Mode';\nexport const RESET_MODE = '[Cursor] Reset Mode';\nexport const SET_VISIBLE = '[Cursor] Set Visible';\nexport const SET_LAYER = '[Cursor] Set Layer';\n\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: CursorMode) {}\n}\nexport class ResetMode implements Action {\n  readonly type = RESET_MODE;\n  constructor() {}\n}\nexport class SetVisible implements Action {\n  readonly type = SET_VISIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetLayer implements Action {\n  readonly type = SET_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\n\nexport type CursorActions = SetMode | ResetMode | SetVisible | SetLayer;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLayers.html":{"url":"classes/SetLayers.html","title":"class - SetLayers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLayers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolLayer[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolLayer[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolLayer[]\n\n                    \n                \n                    \n                        \n                            Type :     MangolLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAYERS\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMaxFeatures.html":{"url":"classes/SetMaxFeatures.html","title":"class - SetMaxFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMaxFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_MAX_FEATURES\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMeasureLayer.html":{"url":"classes/SetMeasureLayer.html","title":"class - SetMeasureLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMeasureLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layers/layers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: VectorLayer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layers/layers.actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    VectorLayer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     VectorLayer\n\n                    \n                \n                    \n                        \n                            Type :     VectorLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layers/layers.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_MEASURE_LAYER\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layers/layers.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport VectorLayer from 'ol/layer/Vector';\n\nexport const ADD_LAYERS = '[Layers] Add Layers';\nexport const SET_MEASURE_LAYER = '[Layers] Set Measure Layer';\n\nexport class AddLayers implements Action {\n  readonly type = ADD_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetMeasureLayer implements Action {\n  readonly type = SET_MEASURE_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\n\nexport type LayersActions = AddLayers | SetMeasureLayer;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMode.html":{"url":"classes/SetMode.html","title":"class - SetMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/cursor/cursor.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: CursorMode)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/cursor/cursor.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    CursorMode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     CursorMode\n\n                    \n                \n                    \n                        \n                            Type :     CursorMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_MODE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { CursorMode } from './../../interfaces/cursor-mode';\n\nexport const SET_MODE = '[Cursor] Set Mode';\nexport const RESET_MODE = '[Cursor] Reset Mode';\nexport const SET_VISIBLE = '[Cursor] Set Visible';\nexport const SET_LAYER = '[Cursor] Set Layer';\n\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: CursorMode) {}\n}\nexport class ResetMode implements Action {\n  readonly type = RESET_MODE;\n  constructor() {}\n}\nexport class SetVisible implements Action {\n  readonly type = SET_VISIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetLayer implements Action {\n  readonly type = SET_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\n\nexport type CursorActions = SetMode | ResetMode | SetVisible | SetLayer;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMode-1.html":{"url":"classes/SetMode-1.html","title":"class - SetMode-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MeasureMode)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/measure/measure.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MeasureMode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MeasureMode\n\n                    \n                \n                    \n                        \n                            Type :     MeasureMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_MODE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeasureDictionary, MeasureMode } from './measure.reducers';\nimport { Action } from '@ngrx/store';\n\nexport const HAS_MEASURE = '[Measure] Has Measure';\nexport const SET_DISABLED = '[Measure] Set Disabled';\nexport const SET_TITLE = '[Measure] Set Title';\nexport const SET_DICTIONARY = '[Measure] Set Dictionary';\nexport const SET_MODE = '[Measure] Set Mode';\n\nexport class HasMeasure implements Action {\n  readonly type = HAS_MEASURE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: MeasureDictionary) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: MeasureMode) {}\n}\n\nexport type MeasureActions =\n  | HasMeasure\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | SetMode;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetMode-2.html":{"url":"classes/SetMode-2.html","title":"class - SetMode-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_MODE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetOpened.html":{"url":"classes/SetOpened.html","title":"class - SetOpened","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetOpened\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_OPENED\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPositionCoordinates.html":{"url":"classes/SetPositionCoordinates.html","title":"class - SetPositionCoordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPositionCoordinates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: [number, number])\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    [number, number]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     [number, number]\n\n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_POSITION_COORDINATES\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPositionDictionary.html":{"url":"classes/SetPositionDictionary.html","title":"class - SetPositionDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPositionDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolControllersPositionDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolControllersPositionDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolControllersPositionDictionary\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersPositionDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_POSITION_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPositionPrecision.html":{"url":"classes/SetPositionPrecision.html","title":"class - SetPositionPrecision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPositionPrecision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_POSITION_PRECISION\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetResultsItems.html":{"url":"classes/SetResultsItems.html","title":"class - SetResultsItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetResultsItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Feature[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Feature[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Feature[]\n\n                    \n                \n                    \n                        \n                            Type :     Feature[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_RESULTS_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetResultsLayer.html":{"url":"classes/SetResultsLayer.html","title":"class - SetResultsLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetResultsLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: VectorLayer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    VectorLayer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     VectorLayer\n\n                    \n                \n                    \n                        \n                            Type :     VectorLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_RESULTS_LAYER\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetRotationDictionary.html":{"url":"classes/SetRotationDictionary.html","title":"class - SetRotationDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetRotationDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolControllersRotationDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolControllersRotationDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolControllersRotationDictionary\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersRotationDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ROTATION_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetRotationValue.html":{"url":"classes/SetRotationValue.html","title":"class - SetRotationValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetRotationValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ROTATION_VALUE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetScalebar.html":{"url":"classes/SetScalebar.html","title":"class - SetScalebar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetScalebar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolControllersScalebarOptions)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolControllersScalebarOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolControllersScalebarOptions\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersScalebarOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SCALEBAR\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelectedLayer.html":{"url":"classes/SetSelectedLayer.html","title":"class - SetSelectedLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelectedLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolLayer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolLayer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolLayer\n\n                    \n                \n                    \n                        \n                            Type :     MangolLayer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SELECTED_LAYER\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelectedModule.html":{"url":"classes/SetSelectedModule.html","title":"class - SetSelectedModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelectedModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SELECTED_MODULE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowFullscreen.html":{"url":"classes/SetShowFullscreen.html","title":"class - SetShowFullscreen","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowFullscreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_FULLSCREEN\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:85\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowFullscreenTooltip.html":{"url":"classes/SetShowFullscreenTooltip.html","title":"class - SetShowFullscreenTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowFullscreenTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_FULLSCREEN_TOOLTIP\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowPosition.html":{"url":"classes/SetShowPosition.html","title":"class - SetShowPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_POSITION\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowRotation.html":{"url":"classes/SetShowRotation.html","title":"class - SetShowRotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowRotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_ROTATION\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:69\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowRotationTooltip.html":{"url":"classes/SetShowRotationTooltip.html","title":"class - SetShowRotationTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowRotationTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_ROTATION_TOOLTIP\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowTooltip.html":{"url":"classes/SetShowTooltip.html","title":"class - SetShowTooltip","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowTooltip\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_TOOLTIP\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowZoom.html":{"url":"classes/SetShowZoom.html","title":"class - SetShowZoom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowZoom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_ZOOM\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTitle.html":{"url":"classes/SetTitle.html","title":"class - SetTitle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/featureinfo/featureinfo.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TITLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/featureinfo/featureinfo.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport { FeatureinfoDictionary } from './featureinfo.reducers';\n\nexport const HAS_FEATUREINFO = '[Featureinfo] Has Featureinfo';\nexport const SET_DISABLED = '[Featureinfo] Set Disabled';\nexport const SET_TITLE = '[Featureinfo] Set Title';\nexport const SET_MAX_FEATURES = '[Featureinfo] Set Max Features';\nexport const SET_LAYERS = '[Featureinfo] Set Layers';\nexport const SET_SELECTED_LAYER = '[Featureinfo] Set Selected Layer';\nexport const SET_RESULTS_LAYER = '[Featureinfo] Set Results Layer';\nexport const SET_RESULTS_ITEMS = '[Featureinfo] Set Results Items';\nexport const SET_DICTIONARY = '[Featureinfo] Set Dictionary';\nexport const SET_HOVER_COLOR = '[Featureinfo] Set Hover Color';\n\nexport class HasFeatureinfo implements Action {\n  readonly type = HAS_FEATUREINFO;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetMaxFeatures implements Action {\n  readonly type = SET_MAX_FEATURES;\n  constructor(public payload: number) {}\n}\nexport class SetLayers implements Action {\n  readonly type = SET_LAYERS;\n  constructor(public payload: MangolLayer[]) {}\n}\nexport class SetSelectedLayer implements Action {\n  readonly type = SET_SELECTED_LAYER;\n  constructor(public payload: MangolLayer) {}\n}\nexport class SetResultsLayer implements Action {\n  readonly type = SET_RESULTS_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\nexport class SetResultsItems implements Action {\n  readonly type = SET_RESULTS_ITEMS;\n  constructor(public payload: Feature[]) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: FeatureinfoDictionary) {}\n}\nexport class SetHoverColor implements Action {\n  readonly type = SET_HOVER_COLOR;\n  constructor(public payload: [number, number, number]) {}\n}\n\nexport type FeatureinfoActions =\n  | HasFeatureinfo\n  | SetDisabled\n  | SetTitle\n  | SetMaxFeatures\n  | SetLayers\n  | SetSelectedLayer\n  | SetResultsLayer\n  | SetResultsItems\n  | SetDictionary\n  | SetHoverColor;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTitle-1.html":{"url":"classes/SetTitle-1.html","title":"class - SetTitle-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layertree/layertree.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TITLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { LayertreeDictionary } from './layertree.reducers';\n\nexport const HAS_LAYERTREE = '[Layertree] Has Layertree';\nexport const SET_DISABLED = '[Layertree] Set Disabled';\nexport const SET_TITLE = '[Layertree] Set Title';\nexport const SET_DICTIONARY = '[Layertree] Set Dictionary';\nexport const SHOW_LAYERGROUP_BADGES = '[Layertree] Show Layergroup Badges';\n\nexport class HasLayertree implements Action {\n  readonly type = HAS_LAYERTREE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: LayertreeDictionary) {}\n}\nexport class ShowLayergroupBadges implements Action {\n  readonly type = SHOW_LAYERGROUP_BADGES;\n  constructor(public payload: boolean) {}\n}\n\nexport type LayertreeActions =\n  | HasLayertree\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | ShowLayergroupBadges;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTitle-2.html":{"url":"classes/SetTitle-2.html","title":"class - SetTitle-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/measure/measure.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TITLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/measure/measure.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeasureDictionary, MeasureMode } from './measure.reducers';\nimport { Action } from '@ngrx/store';\n\nexport const HAS_MEASURE = '[Measure] Has Measure';\nexport const SET_DISABLED = '[Measure] Set Disabled';\nexport const SET_TITLE = '[Measure] Set Title';\nexport const SET_DICTIONARY = '[Measure] Set Dictionary';\nexport const SET_MODE = '[Measure] Set Mode';\n\nexport class HasMeasure implements Action {\n  readonly type = HAS_MEASURE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: MeasureDictionary) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: MeasureMode) {}\n}\n\nexport type MeasureActions =\n  | HasMeasure\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | SetMode;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTitle-3.html":{"url":"classes/SetTitle-3.html","title":"class - SetTitle-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/print/print.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/print/print.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/print/print.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TITLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/print/print.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const HAS_PRINT = '[Print] Has Print ';\nexport const SET_DISABLED = '[Print] Set Disabled';\nexport const SET_TITLE = '[Print] Set Title';\n\nexport class HasPrint implements Action {\n  readonly type = HAS_PRINT;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\n\nexport type PrintActions = HasPrint | SetDisabled | SetTitle;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTitle-4.html":{"url":"classes/SetTitle-4.html","title":"class - SetTitle-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTitle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TITLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetVisible.html":{"url":"classes/SetVisible.html","title":"class - SetVisible","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetVisible\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/cursor/cursor.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/cursor/cursor.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VISIBLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/cursor/cursor.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { CursorMode } from './../../interfaces/cursor-mode';\n\nexport const SET_MODE = '[Cursor] Set Mode';\nexport const RESET_MODE = '[Cursor] Reset Mode';\nexport const SET_VISIBLE = '[Cursor] Set Visible';\nexport const SET_LAYER = '[Cursor] Set Layer';\n\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: CursorMode) {}\n}\nexport class ResetMode implements Action {\n  readonly type = RESET_MODE;\n  constructor() {}\n}\nexport class SetVisible implements Action {\n  readonly type = SET_VISIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetLayer implements Action {\n  readonly type = SET_LAYER;\n  constructor(public payload: VectorLayer) {}\n}\n\nexport type CursorActions = SetMode | ResetMode | SetVisible | SetLayer;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetZoomDictionary.html":{"url":"classes/SetZoomDictionary.html","title":"class - SetZoomDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetZoomDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MangolControllersZoomDictionary)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/controllers/controllers.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MangolControllersZoomDictionary\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MangolControllersZoomDictionary\n\n                    \n                \n                    \n                        \n                            Type :     MangolControllersZoomDictionary\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ZOOM_DICTIONARY\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/controllers/controllers.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  MangolControllersFullScreenDictionary,\n  MangolControllersPositionDictionary,\n  MangolControllersRotationDictionary,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomDictionary\n} from '../../interfaces/config-map-controllers.interface';\n\nexport const RESET = '[Controllers] Reset';\nexport const SET_SHOW_ZOOM = '[Controllers] Set Show Zoom';\nexport const SET_ZOOM_DICTIONARY = '[Controllers] Set Zoom Dictionary';\nexport const SET_SHOW_TOOLTIP = '[Controllers] Set Zoom Show Tooltip';\nexport const SET_SCALEBAR = '[Controllers] Set Scalebar';\nexport const SET_SHOW_POSITION = '[Controllers] Set Show Position';\nexport const SET_POSITION_PRECISION = '[Controllers] Set Position Precision';\nexport const SET_POSITION_COORDINATES =\n  '[Controllers] Set Position Coordinates';\nexport const SET_POSITION_DICTIONARY = '[Controllers] Set Position Dictionary';\nexport const SET_SHOW_ROTATION = '[Controllers] Set Show Rotation';\nexport const SET_ROTATION_DICTIONARY = '[Controllers] Set Rotation Dictionary';\nexport const SET_SHOW_ROTATION_TOOLTIP =\n  '[Controllers] Set Show Rotation Tooltip';\nexport const SET_ROTATION_VALUE = '[Controllers] Set Rotation Value';\nexport const SET_SHOW_FULLSCREEN = '[Controllers] Set Show FullScreen';\nexport const SET_SHOW_FULLSCREEN_TOOLTIP =\n  '[Controllers] Set Show FullScreen Tooltip';\nexport const SET_FULLSCREEN_DICTIONARY =\n  '[Controllers] Set FullScreen Dictionary';\n\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() {}\n}\nexport class SetShowZoom implements Action {\n  readonly type = SET_SHOW_ZOOM;\n  constructor(public payload: boolean) {}\n}\nexport class SetZoomDictionary implements Action {\n  readonly type = SET_ZOOM_DICTIONARY;\n  constructor(public payload: MangolControllersZoomDictionary) {}\n}\nexport class SetShowTooltip implements Action {\n  readonly type = SET_SHOW_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetScalebar implements Action {\n  readonly type = SET_SCALEBAR;\n  constructor(public payload: MangolControllersScalebarOptions) {}\n}\nexport class SetShowPosition implements Action {\n  readonly type = SET_SHOW_POSITION;\n  constructor(public payload: boolean) {}\n}\nexport class SetPositionPrecision implements Action {\n  readonly type = SET_POSITION_PRECISION;\n  constructor(public payload: number) {}\n}\nexport class SetPositionCoordinates implements Action {\n  readonly type = SET_POSITION_COORDINATES;\n  constructor(public payload: [number, number]) {}\n}\nexport class SetPositionDictionary implements Action {\n  readonly type = SET_POSITION_DICTIONARY;\n  constructor(public payload: MangolControllersPositionDictionary) {}\n}\nexport class SetShowRotation implements Action {\n  readonly type = SET_SHOW_ROTATION;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationDictionary implements Action {\n  readonly type = SET_ROTATION_DICTIONARY;\n  constructor(public payload: MangolControllersRotationDictionary) {}\n}\nexport class SetShowRotationTooltip implements Action {\n  readonly type = SET_SHOW_ROTATION_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetRotationValue implements Action {\n  readonly type = SET_ROTATION_VALUE;\n  constructor(public payload: number) {}\n}\nexport class SetShowFullscreen implements Action {\n  readonly type = SET_SHOW_FULLSCREEN;\n  constructor(public payload: boolean) {}\n}\nexport class SetShowFullscreenTooltip implements Action {\n  readonly type = SET_SHOW_FULLSCREEN_TOOLTIP;\n  constructor(public payload: boolean) {}\n}\nexport class SetFullscreenDictionary implements Action {\n  readonly type = SET_FULLSCREEN_DICTIONARY;\n  constructor(public payload: MangolControllersFullScreenDictionary) {}\n}\n\nexport type ControllersActions =\n  | Reset\n  | SetShowZoom\n  | SetZoomDictionary\n  | SetShowTooltip\n  | SetScalebar\n  | SetShowPosition\n  | SetPositionPrecision\n  | SetPositionCoordinates\n  | SetPositionDictionary\n  | SetShowRotation\n  | SetRotationDictionary\n  | SetShowRotationTooltip\n  | SetRotationValue\n  | SetShowFullscreen\n  | SetShowFullscreenTooltip\n  | SetFullscreenDictionary;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nShortenPipe\n\nShortenPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nShortenPipe->SharedModule\n\n\n\n\n\nShortenPipe \n\nShortenPipe \n\nShortenPipe  -->\n\nSharedModule->ShortenPipe \n\n\n\n\n\nStyleService\n\nStyleService\n\nSharedModule -->\n\nStyleService->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/_shared/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ShortenPipe\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StyleService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ShortenPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShortenPipe } from './pipes/shorten.pipe';\nimport { StyleService } from './services/style.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ShortenPipe],\n  exports: [ShortenPipe],\n  providers: [StyleService]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortenPipe.html":{"url":"pipes/ShortenPipe.html","title":"pipe - ShortenPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortenPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/_shared/shared/pipes/shorten.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shorten\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, limitTo: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/_shared/shared/pipes/shorten.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        limitTo\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shorten'\n})\nexport class ShortenPipe implements PipeTransform {\n  transform(value: string, limitTo: number): any {\n    if (value.length > limitTo) {\n      return value.substr(0, limitTo) + ' ...';\n    } else {\n      return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowLayergroupBadges.html":{"url":"classes/ShowLayergroupBadges.html","title":"class - ShowLayergroupBadges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowLayergroupBadges\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/layertree/layertree.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SHOW_LAYERGROUP_BADGES\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/layertree/layertree.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { LayertreeDictionary } from './layertree.reducers';\n\nexport const HAS_LAYERTREE = '[Layertree] Has Layertree';\nexport const SET_DISABLED = '[Layertree] Set Disabled';\nexport const SET_TITLE = '[Layertree] Set Title';\nexport const SET_DICTIONARY = '[Layertree] Set Dictionary';\nexport const SHOW_LAYERGROUP_BADGES = '[Layertree] Show Layergroup Badges';\n\nexport class HasLayertree implements Action {\n  readonly type = HAS_LAYERTREE;\n  constructor(public payload: boolean) {}\n}\nexport class SetDisabled implements Action {\n  readonly type = SET_DISABLED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetDictionary implements Action {\n  readonly type = SET_DICTIONARY;\n  constructor(public payload: LayertreeDictionary) {}\n}\nexport class ShowLayergroupBadges implements Action {\n  readonly type = SHOW_LAYERGROUP_BADGES;\n  constructor(public payload: boolean) {}\n}\n\nexport type LayertreeActions =\n  | HasLayertree\n  | SetDisabled\n  | SetTitle\n  | SetDictionary\n  | ShowLayergroupBadges;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarButtonComponent.html":{"url":"components/SidebarButtonComponent.html","title":"component - SidebarButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/sidebar-button/sidebar-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-sidebar-button\n            \n\n            \n                styleUrls\n                sidebar-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidebarOpened$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/sidebar-button/sidebar-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/sidebar-button/sidebar-button.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/sidebar-button/sidebar-button.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarOpened$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarOpened$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/sidebar-button/sidebar-button.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport {\n  shownStateTrigger,\n  sidebarButtonStateTrigger\n} from '../controllers.animations';\nimport * as fromMangol from './../../../store/mangol.reducers';\nimport * as SidebarActions from './../../../store/sidebar/sidebar.actions';\n\n@Component({\n  selector: 'mangol-sidebar-button',\n  templateUrl: './sidebar-button.component.html',\n  styleUrls: ['./sidebar-button.component.scss'],\n  animations: [sidebarButtonStateTrigger, shownStateTrigger]\n})\nexport class SidebarButtonComponent implements OnInit {\n  sidebarOpened$: Observable;\n\n  constructor(private store: Store) {\n    this.sidebarOpened$ = this.store.select(state => state.sidebar.opened);\n  }\n\n  ngOnInit() {}\n\n  toggleSidebar() {\n    this.store.dispatch(new SidebarActions.Toggle());\n  }\n}\n\n    \n\n    \n        \n  keyboard_arrow_left\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  keyboard_arrow_left'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/config/config.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     MangolConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MangolConfig } from '../../interfaces/config.interface';\nimport * as ConfigActions from './config.actions';\n\nexport interface State {\n  config: MangolConfig;\n}\n\nconst initialState: State = {\n  config: null\n};\n\nexport function configReducer(\n  state = initialState,\n  action: ConfigActions.ConfigActions\n) {\n  switch (action.type) {\n    case ConfigActions.SET_CONFIG:\n      return { ...state, config: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/controllers/controllers.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fullScreen\n                                \n                                \n                                        position\n                                \n                                \n                                        rotation\n                                \n                                \n                                        scalebar\n                                \n                                \n                                        zoom\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullScreen\n                                    \n                                \n                                \n                                    \n                                        fullScreen:     MangolControllersFullScreenOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersFullScreenOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     MangolControllersPositionStateModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersPositionStateModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                    \n                                \n                                \n                                    \n                                        rotation:     MangolControllersRotationStateModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersRotationStateModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scalebar\n                                    \n                                \n                                \n                                    \n                                        scalebar:     MangolControllersScalebarOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersScalebarOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                    \n                                \n                                \n                                    \n                                        zoom:     MangolControllersZoomOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolControllersZoomOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangolControllersPositionOptions,\n  MangolControllersRotationOptions,\n  MangolControllersScalebarOptions,\n  MangolControllersZoomOptions,\n  MangolControllersFullScreenOptions\n} from './../../interfaces/config-map-controllers.interface';\nimport * as ControllersActions from './controllers.actions';\n\nexport interface MangolControllersPositionStateModel\n  extends MangolControllersPositionOptions {\n  coordinates: number[];\n}\n\nexport interface MangolControllersRotationStateModel\n  extends MangolControllersRotationOptions {\n  rotation: number;\n}\n\nexport interface ControllersStateModel {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n}\n\nexport interface State {\n  zoom: MangolControllersZoomOptions;\n  scalebar: MangolControllersScalebarOptions;\n  position: MangolControllersPositionStateModel;\n  rotation: MangolControllersRotationStateModel;\n  fullScreen: MangolControllersFullScreenOptions;\n}\n\nconst initialState: State = {\n  zoom: {\n    show: false,\n    dictionary: {\n      zoomIn: 'Zoom in',\n      zoomOut: 'Zoom out'\n    },\n    showTooltip: true\n  },\n  scalebar: { show: false },\n  position: {\n    show: false,\n    coordinates: [],\n    precision: 2,\n    dictionary: {\n      textCopied: 'Copied',\n      copyCoordinates: 'Copy coordinates',\n      closeSnackbar: 'Close'\n    }\n  },\n  rotation: {\n    show: false,\n    dictionary: { rotateToNorth: 'Rotate to North' },\n    showTooltip: true,\n    rotation: 0\n  },\n  fullScreen: {\n    show: false,\n    showTooltip: true,\n    dictionary: {\n      maximize: 'Maximize',\n      minimize: 'Minimize'\n    }\n  }\n};\n\nexport function controllersReducer(\n  state = initialState,\n  action: ControllersActions.ControllersActions\n) {\n  switch (action.type) {\n    case ControllersActions.RESET:\n      return {\n        ...state,\n        zoom: initialState.zoom,\n        scalebar: initialState.scalebar,\n        position: initialState.position,\n        rotation: initialState.rotation,\n        fullScreen: initialState.fullScreen\n      };\n    case ControllersActions.SET_SHOW_ZOOM:\n      return { ...state, zoom: { ...state.zoom, show: action.payload } };\n    case ControllersActions.SET_ZOOM_DICTIONARY:\n      return { ...state, zoom: { ...state.zoom, dictionary: action.payload } };\n    case ControllersActions.SET_SHOW_TOOLTIP:\n      return { ...state, zoom: { ...state.zoom, showTooltip: action.payload } };\n    case ControllersActions.SET_SCALEBAR:\n      return { ...state, scalebar: action.payload };\n    case ControllersActions.SET_SHOW_POSITION:\n      return {\n        ...state,\n        position: { ...state.position, show: action.payload }\n      };\n    case ControllersActions.SET_POSITION_PRECISION:\n      return {\n        ...state,\n        position: { ...state.position, precision: action.payload }\n      };\n    case ControllersActions.SET_POSITION_COORDINATES:\n      return {\n        ...state,\n        position: { ...state.position, coordinates: action.payload }\n      };\n    case ControllersActions.SET_POSITION_DICTIONARY:\n      return {\n        ...state,\n        position: { ...state.position, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION:\n      return {\n        ...state,\n        rotation: { ...state.rotation, show: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_DICTIONARY:\n      return {\n        ...state,\n        rotation: { ...state.rotation, dictionary: action.payload }\n      };\n    case ControllersActions.SET_SHOW_ROTATION_TOOLTIP:\n      return {\n        ...state,\n        rotation: { ...state.rotation, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_ROTATION_VALUE:\n      return {\n        ...state,\n        rotation: { ...state.rotation, rotation: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, show: action.payload }\n      };\n    case ControllersActions.SET_SHOW_FULLSCREEN_TOOLTIP:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, showTooltip: action.payload }\n      };\n    case ControllersActions.SET_FULLSCREEN_DICTIONARY:\n      return {\n        ...state,\n        fullScreen: { ...state.fullScreen, dictionary: action.payload }\n      };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/cursor/cursor.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layer\n                                \n                                \n                                        mode\n                                \n                                \n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                    \n                                \n                                \n                                    \n                                        layer:     VectorLayer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     VectorLayer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:     CursorMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CursorMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import VectorLayer from 'ol/layer/Vector';\n\nimport { CursorMode } from './../../interfaces/cursor-mode';\nimport * as CursorActions from './cursor.actions';\n\nexport interface State {\n  mode: CursorMode;\n  visible: boolean;\n  layer: VectorLayer;\n}\n\nconst initialState: State = {\n  mode: { text: null, cursor: 'default' },\n  visible: false,\n  layer: null\n};\n\nexport function cursorReducer(\n  state = initialState,\n  action: CursorActions.CursorActions\n) {\n  switch (action.type) {\n    case CursorActions.SET_MODE:\n      const cursorLayer = state.layer;\n      if (cursorLayer !== null) {\n        cursorLayer.getSource().refresh();\n      }\n      return { ...state, mode: action.payload };\n    case CursorActions.RESET_MODE:\n      const layer = state.layer;\n      if (layer !== null) {\n        layer.getSource().refresh();\n      }\n      return { ...state, mode: initialState.mode };\n    case CursorActions.SET_VISIBLE:\n      return { ...state, visible: action.payload };\n    case CursorActions.SET_LAYER:\n      return { ...state, layer: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/featureinfo/featureinfo.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        disabled\n                                \n                                \n                                        hasFeatureinfo\n                                \n                                \n                                        hoverColor\n                                \n                                \n                                        layers\n                                \n                                \n                                        maxFeatures\n                                \n                                \n                                        resultsItems\n                                \n                                \n                                        resultsLayer\n                                \n                                \n                                        selectedLayer\n                                \n                                \n                                        snackbarDuration\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     FeatureinfoDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FeatureinfoDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFeatureinfo\n                                    \n                                \n                                \n                                    \n                                        hasFeatureinfo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoverColor\n                                    \n                                \n                                \n                                    \n                                        hoverColor:     [number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     MangolLayer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolLayer[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFeatures\n                                    \n                                \n                                \n                                    \n                                        maxFeatures:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultsItems\n                                    \n                                \n                                \n                                    \n                                        resultsItems:     Feature[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Feature[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultsLayer\n                                    \n                                \n                                \n                                    \n                                        resultsLayer:     VectorLayer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     VectorLayer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedLayer\n                                    \n                                \n                                \n                                    \n                                        selectedLayer:     MangolLayer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolLayer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snackbarDuration\n                                    \n                                \n                                \n                                    \n                                        snackbarDuration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Feature from 'ol/Feature';\nimport VectorLayer from 'ol/layer/Vector';\n\nimport { MangolLayer } from './../../classes/Layer';\nimport * as FeatureinfoActions from './featureinfo.actions';\n\nexport interface FeatureinfoDictionary {\n  clearSelection?: string;\n  chooseLayer?: string;\n  clickOnMap?: string;\n  noLayers?: string;\n  numberOfFeaturesFound?: string;\n  closeSnackbar?: string;\n  zoomToFeature?: string;\n  showAllResults?: string;\n  feature?: string;\n  exportToCsv?: string;\n}\n\nexport interface State {\n  hasFeatureinfo: boolean;\n  disabled: boolean;\n  title: string;\n  maxFeatures: number;\n  layers: MangolLayer[];\n  selectedLayer: MangolLayer;\n  resultsLayer: VectorLayer;\n  resultsItems: Feature[];\n  snackbarDuration: number;\n  hoverColor: [number, number, number];\n  dictionary: FeatureinfoDictionary;\n}\n\nconst initialState: State = {\n  hasFeatureinfo: false,\n  disabled: false,\n  title: 'Select on Map',\n  maxFeatures: 10,\n  layers: [],\n  selectedLayer: null,\n  resultsLayer: null,\n  resultsItems: [],\n  snackbarDuration: 3000,\n  hoverColor: [255, 255, 0],\n  dictionary: {\n    clearSelection: 'Clear selection',\n    chooseLayer: 'Choose a layer...',\n    clickOnMap: 'Click on Map',\n    noLayers: 'There are currently no queryable layers configured.',\n    numberOfFeaturesFound: 'Number of features found',\n    closeSnackbar: 'Close',\n    zoomToFeature: 'Zoom to Feature',\n    showAllResults: 'Open results dialog',\n    feature: 'Feature',\n    exportToCsv: 'Export to CSV'\n  }\n};\n\nexport function featureinfoReducer(\n  state = initialState,\n  action: FeatureinfoActions.FeatureinfoActions\n) {\n  switch (action.type) {\n    case FeatureinfoActions.HAS_FEATUREINFO:\n      return { ...state, hasFeatureinfo: action.payload };\n    case FeatureinfoActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case FeatureinfoActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case FeatureinfoActions.SET_MAX_FEATURES:\n      return { ...state, maxFeatures: action.payload };\n    case FeatureinfoActions.SET_LAYERS:\n      return { ...state, layers: action.payload };\n    case FeatureinfoActions.SET_SELECTED_LAYER:\n      return { ...state, selectedLayer: action.payload };\n    case FeatureinfoActions.SET_RESULTS_LAYER:\n      return { ...state, resultsLayer: action.payload };\n    case FeatureinfoActions.SET_RESULTS_ITEMS:\n      return { ...state, resultsItems: action.payload };\n    case FeatureinfoActions.SET_DICTIONARY:\n      return { ...state, dictionary: action.payload };\n    case FeatureinfoActions.SET_HOVER_COLOR:\n      return { ...state, hoverColor: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layers/layers.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        layers\n                                \n                                \n                                        measureLayer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layers\n                                    \n                                \n                                \n                                    \n                                        layers:     MangolLayer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MangolLayer[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measureLayer\n                                    \n                                \n                                \n                                    \n                                        measureLayer:     VectorLayer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     VectorLayer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MangolLayer } from './../../classes/Layer';\nimport * as LayersActions from './layers.actions';\nimport VectorLayer from 'ol/layer/Vector';\n\nexport interface State {\n  layers: MangolLayer[];\n  measureLayer: VectorLayer;\n}\n\nconst initialState: State = {\n  layers: [],\n  measureLayer: null\n};\n\nexport function layersReducer(\n  state = initialState,\n  action: LayersActions.LayersActions\n) {\n  switch (action.type) {\n    case LayersActions.ADD_LAYERS:\n      return { ...state, layers: action.payload };\n    case LayersActions.SET_MEASURE_LAYER:\n      return { ...state, measureLayer: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/layertree/layertree.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        disabled\n                                \n                                \n                                        hasLayertree\n                                \n                                \n                                        showLayergroupBadges\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     LayertreeDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LayertreeDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasLayertree\n                                    \n                                \n                                \n                                    \n                                        hasLayertree:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLayergroupBadges\n                                    \n                                \n                                \n                                    \n                                        showLayergroupBadges:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as LayertreeActions from './layertree.actions';\n\nexport interface LayertreeDictionary {\n  groups?: string;\n  layers?: string;\n  expandAll?: string;\n  collapseAll?: string;\n  turnLayersOn?: string;\n  turnLayersOff?: string;\n  showLayerTransparency?: string;\n  showLayerDescription?: string;\n}\n\nexport interface State {\n  hasLayertree: boolean;\n  disabled: boolean;\n  title: string;\n  showLayergroupBadges: boolean;\n  dictionary: LayertreeDictionary;\n}\n\nconst initialState: State = {\n  hasLayertree: false,\n  disabled: false,\n  title: 'Layertree',\n  showLayergroupBadges: true,\n  dictionary: {\n    groups: 'Groups',\n    layers: 'Layers',\n    expandAll: 'Expand all',\n    collapseAll: 'Collapse all',\n    turnLayersOn: 'Turn layers on',\n    turnLayersOff: 'Turn layers off',\n    showLayerTransparency: 'Transparency',\n    showLayerDescription: 'Layer description'\n  }\n};\n\nexport function layertreeReducer(\n  state = initialState,\n  action: LayertreeActions.LayertreeActions\n) {\n  switch (action.type) {\n    case LayertreeActions.HAS_LAYERTREE:\n      return { ...state, hasLayertree: action.payload };\n    case LayertreeActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case LayertreeActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case LayertreeActions.SET_DICTIONARY:\n      return { ...state, dictionary: action.payload };\n    case LayertreeActions.SHOW_LAYERGROUP_BADGES:\n      return { ...state, showLayergroupBadges: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-6.html":{"url":"interfaces/State-6.html","title":"interface - State-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/map/map.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        map\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                    \n                                \n                                \n                                    \n                                        map:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Map from 'ol/Map';\n\nimport * as MapActions from './map.actions';\n\nexport interface State {\n  map: Map;\n}\n\nconst initialState: State = {\n  map: null\n};\n\nexport function mapReducer(\n  state = initialState,\n  action: MapActions.MapActions\n) {\n  switch (action.type) {\n    case MapActions.ADD_MAP:\n      return { ...state, map: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-7.html":{"url":"interfaces/State-7.html","title":"interface - State-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/measure/measure.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dictionary\n                                \n                                \n                                        disabled\n                                \n                                \n                                        hasMeasure\n                                \n                                \n                                        mode\n                                \n                                \n                                        modes\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionary\n                                    \n                                \n                                \n                                    \n                                        dictionary:     MeasureDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MeasureDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasMeasure\n                                    \n                                \n                                \n                                    \n                                        hasMeasure:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:     MeasureMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MeasureMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modes\n                                    \n                                \n                                \n                                    \n                                        modes:     MeasureMode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MeasureMode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import GeometryType from 'ol/geom/GeometryType';\n\nimport * as MeasureActions from './measure.actions';\n\nexport interface MeasureMode {\n  type: string;\n  fontIcon: string;\n  fontSet: string;\n  geometryName: GeometryType;\n}\n\nexport interface MeasureDictionary {\n  clearSelection?: string;\n  chooseMode?: string;\n  clickOnMap?: string;\n  closeSnackbar?: string;\n  line?: string;\n  area?: string;\n  radius?: string;\n  distance?: string;\n  angle?: string;\n  drawStartText?: string;\n  drawStartTextRadius?: string;\n}\nexport interface State {\n  hasMeasure: boolean;\n  disabled: boolean;\n  title: string;\n  modes: MeasureMode[];\n  mode: MeasureMode;\n  dictionary: MeasureDictionary;\n}\n\nconst initialState: State = {\n  hasMeasure: false,\n  disabled: false,\n  title: 'Measure',\n  modes: [\n    {\n      type: 'line',\n      fontSet: 'ms',\n      fontIcon: 'ms-measure-distance',\n      geometryName: 'LineString'\n    },\n    {\n      type: 'area',\n      fontSet: 'ms',\n      fontIcon: 'ms-measure-area',\n      geometryName: 'Polygon'\n    },\n    {\n      type: 'radius',\n      fontSet: 'ms',\n      fontIcon: 'ms-geolocation',\n      geometryName: 'Circle'\n    }\n  ],\n  mode: null,\n  dictionary: {\n    clearSelection: 'Clear selection',\n    chooseMode: 'Choose measure mode...',\n    clickOnMap: 'Click on Map to start measurement',\n    closeSnackbar: 'Close',\n    line: 'Line',\n    area: 'Area',\n    radius: 'Radius',\n    distance: 'Distance',\n    angle: 'angle',\n    drawStartText:\n      'Insert new vertex with single click,\\nfinish measurement with double click',\n    drawStartTextRadius: 'Finish measurement with single click'\n  }\n};\n\nexport function measureReducer(\n  state = initialState,\n  action: MeasureActions.MeasureActions\n) {\n  switch (action.type) {\n    case MeasureActions.HAS_MEASURE:\n      return { ...state, hasMeasure: action.payload };\n    case MeasureActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case MeasureActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case MeasureActions.SET_DICTIONARY:\n      const dict = { ...state.dictionary };\n      for (const key in action.payload) {\n        if (action.payload.hasOwnProperty(key)) {\n          dict[key] = action.payload[key];\n        }\n      }\n      return { ...state, dictionary: dict };\n    case MeasureActions.SET_MODE:\n      return { ...state, mode: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-8.html":{"url":"interfaces/State-8.html","title":"interface - State-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/print/print.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        disabled\n                                \n                                \n                                        hasPrint\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrint\n                                    \n                                \n                                \n                                    \n                                        hasPrint:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as PrintActions from './print.actions';\n\nexport interface State {\n  hasPrint: boolean;\n  disabled: boolean;\n  title: string;\n}\n\nconst initialState: State = {\n  hasPrint: false,\n  disabled: false,\n  title: 'Print'\n};\n\nexport function printReducer(\n  state = initialState,\n  action: PrintActions.PrintActions\n) {\n  switch (action.type) {\n    case PrintActions.HAS_PRINT:\n      return { ...state, hasPrint: action.payload };\n    case PrintActions.SET_DISABLED:\n      return { ...state, disabled: action.payload };\n    case PrintActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-9.html":{"url":"interfaces/State-9.html","title":"interface - State-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        collapsible\n                                \n                                \n                                        hasSidebar\n                                \n                                \n                                        mode\n                                \n                                \n                                        opened\n                                \n                                \n                                        selectedModule\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapsible\n                                    \n                                \n                                \n                                    \n                                        collapsible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSidebar\n                                    \n                                \n                                \n                                    \n                                        hasSidebar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedModule\n                                    \n                                \n                                \n                                    \n                                        selectedModule:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as SidebarActions from './sidebar.actions';\n\nexport interface State {\n  hasSidebar: boolean;\n  opened: boolean;\n  collapsible: boolean;\n  title: string;\n  mode: string;\n  selectedModule: string;\n}\n\nconst initialState: State = {\n  hasSidebar: false,\n  collapsible: true,\n  opened: false,\n  title: null,\n  mode: 'side',\n  selectedModule: null\n};\n\nexport function sidebarReducer(\n  state = initialState,\n  action: SidebarActions.SidebarActions\n) {\n  switch (action.type) {\n    case SidebarActions.TOGGLE:\n      return { ...state, opened: !state.opened };\n    case SidebarActions.SET_HAS_SIDEBAR:\n      return { ...state, hasSidebar: action.payload };\n    case SidebarActions.SET_MODE:\n      return { ...state, mode: action.payload };\n    case SidebarActions.SET_COLLAPSIBLE:\n      return { ...state, collapsible: action.payload };\n    case SidebarActions.SET_OPENED:\n      return { ...state, opened: action.payload };\n    case SidebarActions.SET_TITLE:\n      return { ...state, title: action.payload };\n    case SidebarActions.SET_SELECTED_MODULE:\n      return { ...state, selectedModule: action.payload };\n    default:\n      return state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StyleService.html":{"url":"injectables/StyleService.html","title":"injectable - StyleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StyleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/modules/_shared/shared/services/style.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hoverColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _colorWithOpacity\n                            \n                            \n                                hoverStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/_shared/shared/services/style.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _colorWithOpacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _colorWithOpacity(color: number[], opacity: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/_shared/shared/services/style.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        opacity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverStyle(feature: Feature)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/_shared/shared/services/style.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feature\n                                                        \n                                                                    Feature\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hoverColor:     [number, number, number]\n\n                    \n                \n                    \n                        \n                            Type :     [number, number, number]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/_shared/shared/services/style.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport Feature from 'ol/Feature';\nimport CircleStyle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport Icon from 'ol/style/Icon';\nimport * as fromMangol from './../../../../store/mangol.reducers';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StyleService {\n  hoverColor: [number, number, number];\n\n  constructor(private store: Store) {\n    this.store\n      .select(state => state.featureinfo.hoverColor)\n      .subscribe(color => (this.hoverColor = color));\n  }\n\n  hoverStyle(feature: Feature) {\n    return [\n      new Style({\n        fill: new Fill({\n          color: this._colorWithOpacity(this.hoverColor, 0.3)\n        }),\n        stroke: new Stroke({\n          color: this._colorWithOpacity(this.hoverColor, 0.5),\n          width: 10\n        }),\n        image: new CircleStyle({\n          fill: new Fill({\n            color: this._colorWithOpacity(this.hoverColor, 0.7)\n          }),\n          stroke: new Stroke({\n            width: 1,\n            color: this._colorWithOpacity(this.hoverColor, 0.9)\n          }),\n          radius: 7\n        })\n      })\n    ];\n  }\n\n  private _colorWithOpacity(\n    color: number[],\n    opacity: number\n  ): [number, number, number, number] {\n    return [\n      color[0],\n      color[1],\n      color[2],\n      opacity\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/tabs/tabs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-tabs\n            \n\n            \n                styleUrls\n                tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSubscription\n                            \n                            \n                                featureinfoDisabled$\n                            \n                            \n                                featureinfoTitle$\n                            \n                            \n                                hasFeatureinfo$\n                            \n                            \n                                hasLayertree$\n                            \n                            \n                                hasMeasure$\n                            \n                            \n                                hasPrint$\n                            \n                            \n                                items\n                            \n                            \n                                layertreeDisabled$\n                            \n                            \n                                layertreeTitle$\n                            \n                            \n                                measureDisabled$\n                            \n                            \n                                measureTitle$\n                            \n                            \n                                printDisabled$\n                            \n                            \n                                printTitle$\n                            \n                            \n                                selectedModule$\n                            \n                            \n                                title$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectTab\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/tabs/tabs.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'mangol-tabs'\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTab\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectTab(tabName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tabName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidebar\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidebar()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:191\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureinfoDisabled$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureinfoDisabled$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featureinfoTitle$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        featureinfoTitle$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFeatureinfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasFeatureinfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:36\n                            \n                        \n\n                \n                    \n                        FeatureInfo \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasLayertree$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasLayertree$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:32\n                            \n                        \n\n                \n                    \n                        Layertree \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasMeasure$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasMeasure$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:40\n                            \n                        \n\n                \n                    \n                        MeasureInfo \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrint$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasPrint$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:44\n                            \n                        \n\n                \n                    \n                        Print \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layertreeDisabled$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layertreeDisabled$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layertreeTitle$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layertreeTitle$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureDisabled$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureDisabled$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            measureTitle$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        measureTitle$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            printDisabled$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        printDisabled$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            printTitle$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        printTitle$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedModule$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedModule$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/tabs/tabs.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\n\nimport {\n  MangolConfigFeatureInfoItem,\n  MangolConfigLayertreeItem,\n  MangolConfigMeasureItem\n} from '../../interfaces/config-toolbar.interface';\nimport { MangolConfig } from '../../interfaces/config.interface';\nimport { MangolConfigPrintItem } from './../../interfaces/config-toolbar.interface';\nimport * as FeatureinfoActions from './../../store/featureinfo/featureinfo.actions';\nimport * as fromMangol from './../../store/mangol.reducers';\nimport * as LayertreeActions from './../../store/layertree/layertree.actions';\nimport * as MeasureActions from './../../store/measure/measure.actions';\nimport * as PrintActions from './../../store/print/print.actions';\nimport * as SidebarActions from './../../store/sidebar/sidebar.actions';\nimport { filter } from 'rxjs/operators';\n@Component({\n  selector: 'mangol-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss']\n})\nexport class TabsComponent implements OnInit, OnDestroy {\n  @HostBinding('class')\n  class = 'mangol-tabs';\n\n  selectedModule$: Observable;\n\n  title$: Observable;\n  /** Layertree */\n  hasLayertree$: Observable;\n  layertreeDisabled$: Observable;\n  layertreeTitle$: Observable;\n  /** FeatureInfo */\n  hasFeatureinfo$: Observable;\n  featureinfoDisabled$: Observable;\n  featureinfoTitle$: Observable;\n  /** MeasureInfo */\n  hasMeasure$: Observable;\n  measureDisabled$: Observable;\n  measureTitle$: Observable;\n  /** Print */\n  hasPrint$: Observable;\n  printDisabled$: Observable;\n  printTitle$: Observable;\n\n  configSubscription: Subscription;\n\n  items: string[] = [];\n\n  constructor(private store: Store) {\n    this.selectedModule$ = this.store.select(\n      state => state.sidebar.selectedModule\n    );\n    this.title$ = this.store.select(state => state.sidebar.title);\n    /** Layertree */\n    this.hasLayertree$ = this.store.select(\n      state => state.layertree.hasLayertree\n    );\n    this.layertreeTitle$ = this.store.select(state => state.layertree.title);\n    this.layertreeDisabled$ = this.store.select(\n      state => state.layertree.disabled\n    );\n    /** Featureinfo */\n    this.hasFeatureinfo$ = this.store.select(\n      state => state.featureinfo.hasFeatureinfo\n    );\n    this.featureinfoTitle$ = this.store.select(\n      state => state.featureinfo.title\n    );\n    this.featureinfoDisabled$ = this.store.select(\n      state => state.featureinfo.disabled\n    );\n    /** Measure */\n    this.hasMeasure$ = this.store.select(state => state.measure.hasMeasure);\n    this.measureTitle$ = this.store.select(state => state.measure.title);\n    this.measureDisabled$ = this.store.select(state => state.measure.disabled);\n    /** Print */\n    this.hasPrint$ = this.store.select(state => state.print.hasPrint);\n    this.printTitle$ = this.store.select(state => state.print.title);\n    this.printDisabled$ = this.store.select(state => state.print.disabled);\n  }\n\n  ngOnInit() {\n    this.configSubscription = this.store\n      .select(state => state.config.config)\n      .pipe(filter(config => config !== null))\n      .subscribe((config: MangolConfig) => {\n        this.items = [];\n        /** Layertree */\n        const hasLayertree =\n          typeof config !== 'undefined' &&\n          config !== null &&\n          !!config.sidebar &&\n          !!config.sidebar.toolbar &&\n          !!config.sidebar.toolbar.layertree;\n        this.store.dispatch(new LayertreeActions.HasLayertree(hasLayertree));\n        if (hasLayertree) {\n          this.items.push('layertree');\n          const layertree: MangolConfigLayertreeItem =\n            config.sidebar.toolbar.layertree;\n          if (layertree.hasOwnProperty('disabled')) {\n            this.store.dispatch(\n              new LayertreeActions.SetDisabled(layertree.disabled)\n            );\n          }\n          if (layertree.hasOwnProperty('title')) {\n            this.store.dispatch(new LayertreeActions.SetTitle(layertree.title));\n          }\n        }\n        /** Featureinfo */\n        const hasFeatureinfo =\n          typeof config !== 'undefined' &&\n          config !== null &&\n          !!config.sidebar &&\n          !!config.sidebar.toolbar &&\n          !!config.sidebar.toolbar.featureinfo;\n        this.store.dispatch(\n          new FeatureinfoActions.HasFeatureinfo(hasFeatureinfo)\n        );\n        if (hasFeatureinfo) {\n          this.items.push('featureinfo');\n          const featureinfo: MangolConfigFeatureInfoItem =\n            config.sidebar.toolbar.featureinfo;\n          if (featureinfo.hasOwnProperty('disabled')) {\n            this.store.dispatch(\n              new FeatureinfoActions.SetDisabled(featureinfo.disabled)\n            );\n          }\n          if (featureinfo.hasOwnProperty('title')) {\n            this.store.dispatch(\n              new FeatureinfoActions.SetTitle(featureinfo.title)\n            );\n          }\n        }\n        /** Measure */\n        const hasMeasure =\n          typeof config !== 'undefined' &&\n          config !== null &&\n          !!config.sidebar &&\n          !!config.sidebar.toolbar &&\n          !!config.sidebar.toolbar.measure;\n        this.store.dispatch(new MeasureActions.HasMeasure(hasMeasure));\n        if (hasMeasure) {\n          this.items.push('measure');\n          const measure: MangolConfigMeasureItem =\n            config.sidebar.toolbar.measure;\n          if (measure.hasOwnProperty('disabled')) {\n            this.store.dispatch(\n              new MeasureActions.SetDisabled(measure.disabled)\n            );\n          }\n          if (measure.hasOwnProperty('title')) {\n            this.store.dispatch(new MeasureActions.SetTitle(measure.title));\n          }\n        }\n        /** Print */\n        const hasPrint =\n          typeof config !== 'undefined' &&\n          config !== null &&\n          !!config.sidebar &&\n          !!config.sidebar.toolbar &&\n          !!config.sidebar.toolbar.print;\n        this.store.dispatch(new PrintActions.HasPrint(hasPrint));\n        if (hasPrint) {\n          this.items.push('print');\n          const print: MangolConfigPrintItem = config.sidebar.toolbar.print;\n          if (print.hasOwnProperty('disabled')) {\n            this.store.dispatch(new PrintActions.SetDisabled(print.disabled));\n          }\n          if (print.hasOwnProperty('title')) {\n            this.store.dispatch(new PrintActions.SetTitle(print.title));\n          }\n        }\n\n        if (this.items.length > 0) {\n          this.store.dispatch(\n            new SidebarActions.SetSelectedModule(this.items[0])\n          );\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n  }\n\n  toggleSidebar() {\n    this.store.dispatch(new SidebarActions.Toggle());\n  }\n\n  selectTab(tabName: string) {\n    this.store.dispatch(new SidebarActions.SetSelectedModule(tabName));\n  }\n}\n\n    \n\n    \n        \n\n    \n        {{title$ | async}}\n        \n        \n            keyboard_arrow_left\n        \n    \n\n\n\n    \n    \n        \n            \n                \n            \n        \n        \n            \n        \n    \n    \n    \n        \n            \n                \n            \n        \n        \n            \n        \n    \n    \n    \n        \n            \n                \n            \n        \n        \n            \n        \n    \n    \n    \n        \n            \n                \n            \n        \n        \n            \n        \n    \n    \n    \n        \n            \n                EDIT\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title$ | async}}                            keyboard_arrow_left                                                                                                                                                                                                                                                                                                                                                                                                                                                        EDIT                                                    '\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsModule.html":{"url":"modules/TabsModule.html","title":"module - TabsModule","body":"\n                   \n\n\n\n\n  Modules\n  TabsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsModule\n\n\n\ncluster_TabsModule_declarations\n\n\n\ncluster_TabsModule_imports\n\n\n\ncluster_TabsModule_exports\n\n\n\n\nTabsComponent\n\nTabsComponent\n\n\n\nTabsModule\n\nTabsModule\n\nTabsModule -->\n\nTabsComponent->TabsModule\n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nTabsModule->TabsComponent \n\n\n\n\n\nEditModule\n\nEditModule\n\nTabsModule -->\n\nEditModule->TabsModule\n\n\n\n\n\nFeatureinfoModule\n\nFeatureinfoModule\n\nTabsModule -->\n\nFeatureinfoModule->TabsModule\n\n\n\n\n\nLayertreeModule\n\nLayertreeModule\n\nTabsModule -->\n\nLayertreeModule->TabsModule\n\n\n\n\n\nMeasureModule\n\nMeasureModule\n\nTabsModule -->\n\nMeasureModule->TabsModule\n\n\n\nTabsModule -->\n\nMeasureModule->TabsModule\n\n\n\n\n\nPrintModule\n\nPrintModule\n\nTabsModule -->\n\nPrintModule->TabsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/tabs/tabs.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    EditModule\n                            \n                            \n                                    FeatureinfoModule\n                            \n                            \n                                    LayertreeModule\n                            \n                            \n                                    MeasureModule\n                            \n                            \n                                    MeasureModule\n                            \n                            \n                                    PrintModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { EditModule } from '../edit/edit.module';\nimport { LayertreeModule } from '../layertree/layertree.module';\nimport { MeasureModule } from '../measure/measure.module';\nimport { PrintModule } from '../print/print.module';\nimport { FeatureinfoModule } from './../featureinfo/featureinfo.module';\nimport { TabsComponent } from './tabs.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatTooltipModule,\n    PrintModule,\n    LayertreeModule,\n    MeasureModule,\n    EditModule,\n    MeasureModule,\n    FeatureinfoModule\n  ],\n  declarations: [TabsComponent],\n  exports: [TabsComponent]\n})\nexport class TabsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Toggle.html":{"url":"classes/Toggle.html","title":"class - Toggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Toggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/store/sidebar/sidebar.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/store/sidebar/sidebar.actions.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : TOGGLE\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/store/sidebar/sidebar.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const TOGGLE = '[Sidebar] Toggle';\nexport const SET_HAS_SIDEBAR = '[Sidebar] Set Has Sidebar';\nexport const SET_MODE = '[Sidebar] Set Mode';\nexport const SET_COLLAPSIBLE = '[Sidebar] Set Collapsible';\nexport const SET_OPENED = '[Sidebar] Set Opened';\nexport const SET_TITLE = '[Sidebar] Set Title';\nexport const SET_SELECTED_MODULE = '[Sidebar] Set Selected Module';\n\nexport class Toggle implements Action {\n  readonly type = TOGGLE;\n  constructor() {}\n}\nexport class SetHasSidebar implements Action {\n  readonly type = SET_HAS_SIDEBAR;\n  constructor(public payload: boolean) {}\n}\nexport class SetMode implements Action {\n  readonly type = SET_MODE;\n  constructor(public payload: string) {}\n}\nexport class SetCollapsible implements Action {\n  readonly type = SET_COLLAPSIBLE;\n  constructor(public payload: boolean) {}\n}\nexport class SetOpened implements Action {\n  readonly type = SET_OPENED;\n  constructor(public payload: boolean) {}\n}\nexport class SetTitle implements Action {\n  readonly type = SET_TITLE;\n  constructor(public payload: string) {}\n}\nexport class SetSelectedModule implements Action {\n  readonly type = SET_SELECTED_MODULE;\n  constructor(public payload: string) {}\n}\n\nexport type SidebarActions =\n  | Toggle\n  | SetHasSidebar\n  | SetMode\n  | SetCollapsible\n  | SetOpened\n  | SetTitle\n  | SetSelectedModule;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransparencyComponent.html":{"url":"components/TransparencyComponent.html","title":"component - TransparencyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransparencyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-transparency\n            \n\n            \n                styleUrls\n                transparency.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./transparency.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configSubscription\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showLabels\n                            \n                            \n                                sliderStep\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                    \n                            \n                            Type :    MangolLayer\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(evt: MatSliderChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evt\n                                                        \n                                                                    MatSliderChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        max:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            min\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        min:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLabels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showLabels:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sliderStep\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sliderStep:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/layertree/components/layer-details/transparency/transparency.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatSliderChange } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\nimport { MangolLayer } from '../../../../../classes/Layer';\nimport { MangolConfig } from '../../../../../interfaces/config.interface';\nimport * as fromMangol from './../../../../../store/mangol.reducers';\n\n@Component({\n  selector: 'mangol-transparency',\n  templateUrl: './transparency.component.html',\n  styleUrls: ['./transparency.component.scss']\n})\nexport class TransparencyComponent implements OnInit, OnDestroy {\n  @Input()\n  layer: MangolLayer;\n\n  min = 0;\n  max = 100;\n  showLabels = true;\n  sliderStep = 1;\n  value: number;\n\n  configSubscription: Subscription;\n\n  constructor(private store: Store) {\n    this.configSubscription = this.store\n      .select(state => state.config.config)\n      .subscribe((config: MangolConfig) => {\n        if (\n          !!config.sidebar &&\n          !!config.sidebar.toolbar &&\n          !!config.sidebar.toolbar.layertree &&\n          !!config.sidebar.toolbar.layertree.details &&\n          !!config.sidebar.toolbar.layertree.details.opacity\n        ) {\n          const params = config.sidebar.toolbar.layertree.details.opacity;\n          if (!!params.sliderStep) {\n            this.sliderStep = params.sliderStep;\n          }\n          if (!!params.showLabels) {\n            this.showLabels = params.showLabels;\n          }\n        }\n      });\n  }\n\n  ngOnInit() {\n    this.value = this.layer.layer.getOpacity() * 100;\n  }\n\n  ngOnDestroy() {\n    if (this.configSubscription) {\n      this.configSubscription.unsubscribe();\n    }\n  }\n\n  onChange(evt: MatSliderChange) {\n    this.layer.layer.setOpacity(evt.value / 100);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransparencyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZoomButtonsComponent.html":{"url":"components/ZoomButtonsComponent.html","title":"component - ZoomButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ZoomButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mangol-zoom-buttons\n            \n\n            \n                styleUrls\n                zoom-buttons.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./zoom-buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationDuration\n                            \n                            \n                                zoom$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                zoomIn\n                            \n                            \n                                zoomOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoomIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nzoomIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoomOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nzoomOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animationDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animationDuration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zoom$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zoom$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/modules/controllers/zoom-buttons/zoom-buttons.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { take } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromMangol from './../../../store/mangol.reducers';\nimport Map from 'ol/Map';\nimport { Observable } from 'rxjs';\n\nimport { shownStateTrigger } from '../controllers.animations';\nimport { MangolControllersZoomOptions } from './../../../interfaces/config-map-controllers.interface';\n\n@Component({\n  selector: 'mangol-zoom-buttons',\n  templateUrl: './zoom-buttons.component.html',\n  styleUrls: ['./zoom-buttons.component.scss'],\n  animations: [shownStateTrigger]\n})\nexport class ZoomButtonsComponent implements OnInit {\n  animationDuration = 500;\n  zoom$: Observable;\n\n  constructor(private store: Store) {\n    this.zoom$ = this.store.select(state => state.controllers.zoom);\n  }\n\n  ngOnInit() {}\n\n  zoomIn() {\n    this.store\n      .select(state => state.map.map)\n      .pipe(take(1))\n      .subscribe((m: Map) => {\n        m.getView().animate({\n          zoom: m.getView().getZoom() + 1,\n          duration: this.animationDuration\n        });\n      });\n  }\n\n  zoomOut() {\n    this.store\n      .select(state => state.map.map)\n      .pipe(take(1))\n      .subscribe((m: Map) => {\n        m.getView().animate({\n          zoom: m.getView().getZoom() - 1,\n          duration: this.animationDuration\n        });\n      });\n  }\n}\n\n    \n\n    \n        \n  add\n\n\n  remove\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add  remove'\n    var COMPONENTS = [{'name': 'ControllersComponent', 'selector': 'mangol-controllers'},{'name': 'CursorComponent', 'selector': 'mangol-cursor'},{'name': 'DescriptionComponent', 'selector': 'mangol-description'},{'name': 'EditComponent', 'selector': 'mangol-edit'},{'name': 'FeatureinfoComponent', 'selector': 'mangol-featureinfo'},{'name': 'FeatureinfoResultsComponent', 'selector': 'mangol-featureinfo-results'},{'name': 'FeatureinfoSelectComponent', 'selector': 'mangol-featureinfo-select'},{'name': 'FeatureinfoTableDialogComponent', 'selector': 'mangol-featureinfo-table-dialog'},{'name': 'FeaturenfoTableComponent', 'selector': 'mangol-featurenfo-table'},{'name': 'FullscreenButtonComponent', 'selector': 'mangol-fullscreen-button'},{'name': 'LayerComponent', 'selector': 'mangol-layer'},{'name': 'LayerDetailsComponent', 'selector': 'mangol-layer-details'},{'name': 'LayerGroupComponent', 'selector': 'mangol-layer-group'},{'name': 'LayertreeComponent', 'selector': 'mangol-layertree'},{'name': 'LayertreeItemComponent', 'selector': 'mangol-layertree-item'},{'name': 'LegendComponent', 'selector': 'mangol-legend'},{'name': 'MangolComponent', 'selector': 'mangol'},{'name': 'MapComponent', 'selector': 'mangol-map'},{'name': 'MeasureComponent', 'selector': 'mangol-measure'},{'name': 'MeasureResultsComponent', 'selector': 'mangol-measure-results'},{'name': 'MeasureSelectComponent', 'selector': 'mangol-measure-select'},{'name': 'PositionComponent', 'selector': 'mangol-position'},{'name': 'PrintComponent', 'selector': 'mangol-print'},{'name': 'RotationButtonComponent', 'selector': 'mangol-rotation-button'},{'name': 'ScalebarComponent', 'selector': 'mangol-scalebar'},{'name': 'SidebarButtonComponent', 'selector': 'mangol-sidebar-button'},{'name': 'TabsComponent', 'selector': 'mangol-tabs'},{'name': 'TransparencyComponent', 'selector': 'mangol-transparency'},{'name': 'ZoomButtonsComponent', 'selector': 'mangol-zoom-buttons'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ZoomButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.7\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/material : ^6.4.7\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @types/geojson : ^7946.0.4\n        \n            @types/jspdf : ^1.1.31\n        \n            @types/ol : ^4.6.2\n        \n            file-saver : ^1.3.8\n        \n            hammerjs : ^2.0.8\n        \n            jspdf : ^1.4.1\n        \n            ngrx-store-logger : ^0.2.2\n        \n            ol : ^5.2.0\n        \n            proj4 : ^2.5.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^6.1.7\n        \n            @angular/core : ^6.1.7\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearState   (src/.../mangol.reducers.ts)\n                        \n                        \n                            configReducer   (src/.../config.reducers.ts)\n                        \n                        \n                            controllersReducer   (src/.../controllers.reducers.ts)\n                        \n                        \n                            cursorReducer   (src/.../cursor.reducers.ts)\n                        \n                        \n                            featureinfoReducer   (src/.../featureinfo.reducers.ts)\n                        \n                        \n                            layersReducer   (src/.../layers.reducers.ts)\n                        \n                        \n                            layertreeReducer   (src/.../layertree.reducers.ts)\n                        \n                        \n                            logger   (src/.../mangol.module.ts)\n                        \n                        \n                            mapReducer   (src/.../map.reducers.ts)\n                        \n                        \n                            measureReducer   (src/.../measure.reducers.ts)\n                        \n                        \n                            printReducer   (src/.../print.reducers.ts)\n                        \n                        \n                            sidebarReducer   (src/.../sidebar.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/store/mangol.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clearState\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearState(reducer: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/config/config.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/controllers/controllers.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            controllersReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncontrollersReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/cursor/cursor.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cursorReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncursorReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/featureinfo/featureinfo.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            featureinfoReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nfeatureinfoReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/layers/layers.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            layersReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nlayersReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/layertree/layertree.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            layertreeReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nlayertreeReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/mangol.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogger(reducer: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/map/map.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/measure/measure.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            measureReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmeasureReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/print/print.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            printReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nprintReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/store/sidebar/sidebar.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsidebarReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMangol\n\nMaps created with Angular & OpenLayers using Material design\n\n\n\n\n\n\nAbout Mangol\nMangol is an open source web mapping library for combining Angular, Angular Material and OpenLayers to create a modern, responsive interactive GUI for web maps (M_ stands for _Material, ang for Angular and ol for OpenLayers). The project is written in TypeScript and uses SCSS for styling. Mangol uses @ngrx/store under the hood for state management.\nLive example\nAn online example can be opened here.\nRun demo & edit source files\nIf you wish to see the built-in demos or modify the source files, simply run ng serve or npm run start to load the demo page on localhost:4200. With this command you can also watch file changes until you shut it down.\nUse as npm dependency\nYou most likely want to use Mangol as an npm library in your Angular (TypeScript & SCSS) project. You can also do that since Mangol is on npm as well.\nFirst, add Mangol as a dependency to your project:\nnpm install --save mangolor\nyarn add mangolYou have to add to your app.module.ts (or whatever you call it in your project, the one that gets bootstrapped in main.ts)\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MangolModule } from 'mangol';And in @NgModule add MangolModule and BrowserAnimationsModule to the imports:\nimports: [\n    ...,\n    BrowserAnimationsModule,\n    MangolModule,\n    ...\n]Also add some vendor js files. If you use Webpack and created your project with @angular/cli, add the following libraries to your angular.json:\n\"scripts\": [\n    \"node_modules/proj4/dist/proj4.js\",\n    \"node_modules/jspdf/dist/jspdf.min.js\"\n]At the beginning of your main SCSS file, you should import mangol.scss like this:\n@import '~mangol/scss/mangol';After that, you can use Mangol html tags in your templates such as\nRun on localhost\nAt the moment when you run ng serve there will be the well-known error in the browser console: ExpressionChangedAfterItHasBeenCheckedError. Until this is fixed in Mangol please enable production mode in main.ts like this:\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));Production build\nUnfortunately there are some known issues with OL when build using Ahead-of-time (aot). To make aot possible, you should modify the angular.json and set optimization: false (default is true). After that, ng build --prod --aot should work fine.\nBasic example\nThis is the simplest implementation of Mangol in a component (this will create a default map with one OpenStreetMap layer) :\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app',\n  template: `\n    \n  `\n})\nexport class AppComponent {}Configuring the component\nYou can further configure your Mangol component by creating a variable of type MangolConfig and add this property as an input for yor mangol component like this:\nimport { Component, OnInit } from '@angular/core';\nimport View from 'ol/View';\nimport { fromLonLat } from 'ol/proj.js';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { MangolConfig, MangolLayer } from 'mangol';\n\n@Component({\n  selector: 'app',\n  template: `\n     \n  `\n})\nexport class AppComponent implements OnInit {\n  // Notice the MangolConfig type, this  is a helper interface to easily fill out the required and optional parameters for your Mangol configuration.\n  mangolConfig = {} as MangolConfig;\n\n  public ngOnInit() {\n    this.mangolConfig = {\n      map: {\n        renderer: 'canvas',\n        target: 'mangol-demo',\n        view: new View({\n          projection: 'EPSG:900913',\n          center: fromLonLat(\n            [19.3956393810065, 47.168464955013],\n            'EPSG:900913'\n          ),\n          zoom: 4\n        }),\n        layers: [\n          new MangolLayer({\n            name: 'OpenStreetMap Layer',\n            details: 'Here are the OSM layer details',\n            layer: new TileLayer({\n              source: new OSM(),\n              visible: true\n            })\n          })\n        ]\n      },\n      sidebar: {\n        opened: true,\n        toolbar: {\n          layertree: {},\n          measure: {}\n        }\n      }\n    };\n  }\n}Mangol is highly configurable through MangolConfig. Just check the API doc for further options (currently under heavy development).\nAccess and modify the internal State\nAfter initialization you can also modify almost everything (also in progress) on your running Mangol app with a helper service called MangolService. Mangol is written in a reactive way which means almost every property is an RxJS Observable. Mangol itself uses @ngrx/store under the hood, and with the injectable MangolService you can access and modify the store state easily.\nFor example, if you wish to open the sidebar and change its title in runtime all you have to do is call the appropriate public functions form MangolService:\nimport { Component, OnInit } from '@angular/core';\nimport { MangolService, MangolConfig } from 'mangol';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    \n  `\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  config: MangolConfig;\n\n  constructor(private mangolService: MangolService) {}\n\n  ngOnInit() {\n    // Initialize the MangolConfig with an empty and closed sidebar\n    this.config = {\n      sidebar: { title: 'Mangol Sidebar', collapsible: true, opened: true }\n    };\n    // After 1.5 seconds rename the sidebar title\n    setTimeout(() => {\n      this.mangolService.setSidebarTitle('My title modified after 1.5 sec');\n    }, 1500);\n    // After 3 seconds toggle the sidebar\n    setTimeout(() => {\n      this.mangolService.toggleSidebar();\n      console.log('I just toggled the sidebar.');\n    }, 3000);\n  }\n}Styling\nMangol uses Material components and therefore it supports some SCSS customization. For example if you wish to alter the default colors, you can easily do that by overwriting the primary, accent and warn Material palettes before importing mangol.scss. Do it like this:\n@import '~@angular/material/theming';\n@include mat-core();\n$mangol-primary: mat-palette($mat-teal);\n$mangol-accent: mat-palette($mat-lime);\n$mangol-warn: mat-palette($mat-deep-orange);\n$mangol-theme: mat-light-theme($mangol-primary, $mangol-accent, $mangol-warn);\n\n@import '~mangol/scss/mangol';If you wish to set the component height, sidebar width or the quicksearch panel width, also do it before importing mangol.scss:\n$mangol-height: 400px;\n$mangol-sidebar-width: 450px;\n$mangol-quicksearch-width: 250px;\n\n@import '~mangol/scss/mangol';Present & Future\nThis project is still under heavy development. In the near future I intend to add/extend other widgets. More examples will arrive as soon as the project becomes smarter. Any notice, remarks or pull requests are appreciated.\nAuthor\nMangol was created by Gergely Padányi-Gulyás\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ControllersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EditModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureinfoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayertreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MangolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeasureModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrintModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControllersModule\n\n\n\ncluster_ControllersModule_declarations\n\n\n\ncluster_ControllersModule_exports\n\n\n\ncluster_EditModule\n\n\n\ncluster_EditModule_declarations\n\n\n\ncluster_EditModule_exports\n\n\n\ncluster_FeatureinfoModule\n\n\n\ncluster_FeatureinfoModule_declarations\n\n\n\ncluster_FeatureinfoModule_imports\n\n\n\ncluster_FeatureinfoModule_exports\n\n\n\ncluster_FeatureinfoModule_providers\n\n\n\ncluster_LayertreeModule\n\n\n\ncluster_LayertreeModule_declarations\n\n\n\ncluster_LayertreeModule_exports\n\n\n\ncluster_MangolModule\n\n\n\ncluster_MangolModule_declarations\n\n\n\ncluster_MangolModule_imports\n\n\n\ncluster_MangolModule_exports\n\n\n\ncluster_MangolModule_providers\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MeasureModule\n\n\n\ncluster_MeasureModule_declarations\n\n\n\ncluster_MeasureModule_exports\n\n\n\ncluster_PrintModule\n\n\n\ncluster_PrintModule_declarations\n\n\n\ncluster_PrintModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TabsModule\n\n\n\ncluster_TabsModule_declarations\n\n\n\ncluster_TabsModule_exports\n\n\n\n\nControllersComponent\n\nControllersComponent\n\n\n\nControllersModule\n\nControllersModule\n\nControllersModule -->\n\nControllersComponent->ControllersModule\n\n\n\n\n\nCursorComponent\n\nCursorComponent\n\nControllersModule -->\n\nCursorComponent->ControllersModule\n\n\n\n\n\nFullscreenButtonComponent\n\nFullscreenButtonComponent\n\nControllersModule -->\n\nFullscreenButtonComponent->ControllersModule\n\n\n\n\n\nPositionComponent\n\nPositionComponent\n\nControllersModule -->\n\nPositionComponent->ControllersModule\n\n\n\n\n\nRotationButtonComponent\n\nRotationButtonComponent\n\nControllersModule -->\n\nRotationButtonComponent->ControllersModule\n\n\n\n\n\nScalebarComponent\n\nScalebarComponent\n\nControllersModule -->\n\nScalebarComponent->ControllersModule\n\n\n\n\n\nSidebarButtonComponent\n\nSidebarButtonComponent\n\nControllersModule -->\n\nSidebarButtonComponent->ControllersModule\n\n\n\n\n\nZoomButtonsComponent\n\nZoomButtonsComponent\n\nControllersModule -->\n\nZoomButtonsComponent->ControllersModule\n\n\n\n\n\nControllersComponent \n\nControllersComponent \n\nControllersComponent  -->\n\nControllersModule->ControllersComponent \n\n\n\n\n\nEditComponent\n\nEditComponent\n\n\n\nEditModule\n\nEditModule\n\nEditModule -->\n\nEditComponent->EditModule\n\n\n\n\n\nEditComponent \n\nEditComponent \n\nEditComponent  -->\n\nEditModule->EditComponent \n\n\n\n\n\nTabsModule\n\nTabsModule\n\nTabsModule -->\n\nEditModule->TabsModule\n\n\n\n\n\nFeatureinfoComponent\n\nFeatureinfoComponent\n\n\n\nFeatureinfoModule\n\nFeatureinfoModule\n\nFeatureinfoModule -->\n\nFeatureinfoComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoResultsComponent\n\nFeatureinfoResultsComponent\n\nFeatureinfoModule -->\n\nFeatureinfoResultsComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoSelectComponent\n\nFeatureinfoSelectComponent\n\nFeatureinfoModule -->\n\nFeatureinfoSelectComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoTableDialogComponent\n\nFeatureinfoTableDialogComponent\n\nFeatureinfoModule -->\n\nFeatureinfoTableDialogComponent->FeatureinfoModule\n\n\n\n\n\nFeaturenfoTableComponent\n\nFeaturenfoTableComponent\n\nFeatureinfoModule -->\n\nFeaturenfoTableComponent->FeatureinfoModule\n\n\n\n\n\nFeatureinfoComponent \n\nFeatureinfoComponent \n\nFeatureinfoComponent  -->\n\nFeatureinfoModule->FeatureinfoComponent \n\n\n\nTabsModule -->\n\nFeatureinfoModule->TabsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nFeatureinfoModule -->\n\nSharedModule->FeatureinfoModule\n\n\n\n\n\nLayertreeModule\n\nLayertreeModule\n\nLayertreeModule -->\n\nSharedModule->LayertreeModule\n\n\n\n\n\nShortenPipe \n\nShortenPipe \n\nShortenPipe  -->\n\nSharedModule->ShortenPipe \n\n\n\n\n\nFeatureinfoService\n\nFeatureinfoService\n\nFeatureinfoModule -->\n\nFeatureinfoService->FeatureinfoModule\n\n\n\n\n\nDescriptionComponent\n\nDescriptionComponent\n\nLayertreeModule -->\n\nDescriptionComponent->LayertreeModule\n\n\n\n\n\nLayerComponent\n\nLayerComponent\n\nLayertreeModule -->\n\nLayerComponent->LayertreeModule\n\n\n\n\n\nLayerDetailsComponent\n\nLayerDetailsComponent\n\nLayertreeModule -->\n\nLayerDetailsComponent->LayertreeModule\n\n\n\n\n\nLayerGroupComponent\n\nLayerGroupComponent\n\nLayertreeModule -->\n\nLayerGroupComponent->LayertreeModule\n\n\n\n\n\nLayertreeComponent\n\nLayertreeComponent\n\nLayertreeModule -->\n\nLayertreeComponent->LayertreeModule\n\n\n\n\n\nLayertreeItemComponent\n\nLayertreeItemComponent\n\nLayertreeModule -->\n\nLayertreeItemComponent->LayertreeModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nLayertreeModule -->\n\nLegendComponent->LayertreeModule\n\n\n\n\n\nTransparencyComponent\n\nTransparencyComponent\n\nLayertreeModule -->\n\nTransparencyComponent->LayertreeModule\n\n\n\n\n\nLayertreeComponent \n\nLayertreeComponent \n\nLayertreeComponent  -->\n\nLayertreeModule->LayertreeComponent \n\n\n\nTabsModule -->\n\nLayertreeModule->TabsModule\n\n\n\n\n\nMangolComponent\n\nMangolComponent\n\n\n\nMangolModule\n\nMangolModule\n\nMangolModule -->\n\nMangolComponent->MangolModule\n\n\n\n\n\nMangolComponent \n\nMangolComponent \n\nMangolComponent  -->\n\nMangolModule->MangolComponent \n\n\n\n\n\nMapModule\n\nMapModule\n\nMangolModule -->\n\nMapModule->MangolModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\nMangolModule -->\n\nTabsModule->MangolModule\n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nTabsModule->TabsComponent \n\n\n\n\n\nMeasureService\n\nMeasureService\n\nMangolModule -->\n\nMeasureService->MangolModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMeasureComponent\n\nMeasureComponent\n\n\n\nMeasureModule\n\nMeasureModule\n\nMeasureModule -->\n\nMeasureComponent->MeasureModule\n\n\n\n\n\nMeasureResultsComponent\n\nMeasureResultsComponent\n\nMeasureModule -->\n\nMeasureResultsComponent->MeasureModule\n\n\n\n\n\nMeasureSelectComponent\n\nMeasureSelectComponent\n\nMeasureModule -->\n\nMeasureSelectComponent->MeasureModule\n\n\n\nTabsModule -->\n\nMeasureModule->TabsModule\n\n\n\nTabsModule -->\n\nMeasureModule->TabsModule\n\n\n\n\n\nMeasureComponent \n\nMeasureComponent \n\nMeasureComponent  -->\n\nMeasureModule->MeasureComponent \n\n\n\n\n\nPrintComponent\n\nPrintComponent\n\n\n\nPrintModule\n\nPrintModule\n\nPrintModule -->\n\nPrintComponent->PrintModule\n\n\n\nTabsModule -->\n\nPrintModule->TabsModule\n\n\n\n\n\nPrintComponent \n\nPrintComponent \n\nPrintComponent  -->\n\nPrintModule->PrintComponent \n\n\n\n\n\nShortenPipe\n\nShortenPipe\n\nSharedModule -->\n\nShortenPipe->SharedModule\n\n\n\n\n\nStyleService\n\nStyleService\n\nSharedModule -->\n\nStyleService->SharedModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nTabsModule -->\n\nTabsComponent->TabsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    59 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    57 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            ControllersActions   (src/.../controllers.actions.ts)\n                        \n                        \n                            CursorActions   (src/.../cursor.actions.ts)\n                        \n                        \n                            FeatureinfoActions   (src/.../featureinfo.actions.ts)\n                        \n                        \n                            LayersActions   (src/.../layers.actions.ts)\n                        \n                        \n                            LayertreeActions   (src/.../layertree.actions.ts)\n                        \n                        \n                            MangolActions   (src/.../mangol.actions.ts)\n                        \n                        \n                            MapActions   (src/.../map.actions.ts)\n                        \n                        \n                            MeasureActions   (src/.../measure.actions.ts)\n                        \n                        \n                            PrintActions   (src/.../print.actions.ts)\n                        \n                        \n                            SidebarActions   (src/.../sidebar.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/store/config/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActions\n                    \n                \n                \n                    \n                        ConfigActions:     SetConfig\n\n                    \n                \n            \n        \n\n    src/lib/store/controllers/controllers.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ControllersActions\n                    \n                \n                \n                    \n                        ControllersActions:     Reset | SetShowZoom | SetZoomDictionary | SetShowTooltip | SetScalebar | SetShowPosition | SetPositionPrecision | SetPositionCoordinates | SetPositionDictionary | SetShowRotation | SetRotationDictionary | SetShowRotationTooltip | SetRotationValue | SetShowFullscreen | SetShowFullscreenTooltip | SetFullscreenDictionary\n\n                    \n                \n            \n        \n\n    src/lib/store/cursor/cursor.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CursorActions\n                    \n                \n                \n                    \n                        CursorActions:     SetMode | ResetMode | SetVisible | SetLayer\n\n                    \n                \n            \n        \n\n    src/lib/store/featureinfo/featureinfo.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeatureinfoActions\n                    \n                \n                \n                    \n                        FeatureinfoActions:     HasFeatureinfo | SetDisabled | SetTitle | SetMaxFeatures | SetLayers | SetSelectedLayer | SetResultsLayer | SetResultsItems | SetDictionary | SetHoverColor\n\n                    \n                \n            \n        \n\n    src/lib/store/layers/layers.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LayersActions\n                    \n                \n                \n                    \n                        LayersActions:     AddLayers | SetMeasureLayer\n\n                    \n                \n            \n        \n\n    src/lib/store/layertree/layertree.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LayertreeActions\n                    \n                \n                \n                    \n                        LayertreeActions:     HasLayertree | SetDisabled | SetTitle | SetDictionary | ShowLayergroupBadges\n\n                    \n                \n            \n        \n\n    src/lib/store/mangol.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MangolActions\n                    \n                \n                \n                    \n                        MangolActions:     ClearState\n\n                    \n                \n            \n        \n\n    src/lib/store/map/map.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MapActions\n                    \n                \n                \n                    \n                        MapActions:     AddMap\n\n                    \n                \n            \n        \n\n    src/lib/store/measure/measure.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MeasureActions\n                    \n                \n                \n                    \n                        MeasureActions:     HasMeasure | SetDisabled | SetTitle | SetDictionary | SetMode\n\n                    \n                \n            \n        \n\n    src/lib/store/print/print.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        PrintActions\n                    \n                \n                \n                    \n                        PrintActions:     HasPrint | SetDisabled | SetTitle\n\n                    \n                \n            \n        \n\n    src/lib/store/sidebar/sidebar.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SidebarActions\n                    \n                \n                \n                    \n                        SidebarActions:     Toggle | SetHasSidebar | SetMode | SetCollapsible | SetOpened | SetTitle | SetSelectedModule\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
